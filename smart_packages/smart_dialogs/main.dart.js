// Generated by dart2js (NullSafetyMode.sound, csp, deferred-serialization, intern-composite-values), the Dart to JavaScript compiler version: 3.1.0-155.0.dev.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback, loadId, loadPriority):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error. The loadId argument is the deferred import that resulted in
//    this uri being loaded. The loadPriority argument is the priority the
//    library should be loaded with as specified in the code via the
//    load-priority annotation (0: normal, 1: high).
//
// dartCallInstrumentation(id, qualifiedName):
//    if this function is defined, it will be called at each entry of a
//    method or constructor. Used only when compiling programs with
//    --experiment-call-instrumentation.
(function dartProgram() {
  function copyProperties(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      to[key] = from[key];
    }
  }
  function mixinPropertiesHard(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (!to.hasOwnProperty(key))
        to[key] = from[key];
    }
  }
  function mixinPropertiesEasy(from, to) {
    Object.assign(to, from);
  }
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    if (!(Object.getPrototypeOf(object) && Object.getPrototypeOf(object).p === cls.prototype.p))
      return false;
    try {
      if (typeof navigator != "undefined" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Chrome/") >= 0)
        return true;
      if (typeof version == "function" && version.length == 0) {
        var v = version();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(v))
          return true;
      }
    } catch (_) {
    }
    return false;
  }();
  function inherit(cls, sup) {
    cls.prototype.constructor = cls;
    cls.prototype["$is" + cls.name] = cls;
    if (sup != null) {
      if (supportsDirectProtoAccess) {
        Object.setPrototypeOf(cls.prototype, sup.prototype);
        return;
      }
      var clsPrototype = Object.create(sup.prototype);
      copyProperties(cls.prototype, clsPrototype);
      cls.prototype = clsPrototype;
    }
  }
  function inheritMany(sup, classes) {
    for (var i = 0; i < classes.length; i++)
      inherit(classes[i], sup);
  }
  function mixinEasy(cls, mixin) {
    mixinPropertiesEasy(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function mixinHard(cls, mixin) {
    mixinPropertiesHard(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function lazyOld(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      holder[getterName] = function() {
        A.throwCyclicInit(name);
      };
      var result;
      var sentinelInProgress = initializer;
      try {
        if (holder[name] === uninitializedSentinel) {
          result = holder[name] = sentinelInProgress;
          result = holder[name] = initializer();
        } else
          result = holder[name];
      } finally {
        if (result === sentinelInProgress)
          holder[name] = null;
        holder[getterName] = function() {
          return this[name];
        };
      }
      return result;
    };
  }
  function lazy(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel)
        holder[name] = initializer();
      holder[getterName] = function() {
        return this[name];
      };
      return holder[name];
    };
  }
  function lazyFinal(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel) {
        var value = initializer();
        if (holder[name] !== uninitializedSentinel)
          A.throwLateFieldADI(name);
        holder[name] = value;
      }
      var finalValue = holder[name];
      holder[getterName] = function() {
        return finalValue;
      };
      return finalValue;
    };
  }
  function makeConstList(list) {
    list.immutable$list = Array;
    list.fixed$length = Array;
    return list;
  }
  function convertToFastObject(properties) {
    function t() {
    }
    t.prototype = properties;
    new t();
    return properties;
  }
  function convertAllToFastObject(arrayOfObjects) {
    for (var i = 0; i < arrayOfObjects.length; ++i)
      convertToFastObject(arrayOfObjects[i]);
  }
  var functionCounter = 0;
  function instanceTearOffGetter(isIntercepted, parameters) {
    var cache = null;
    return isIntercepted ? function(receiver) {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(receiver, this);
    } : function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(this, null);
    };
  }
  function staticTearOffGetter(parameters) {
    var cache = null;
    return function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters).prototype;
      return cache;
    };
  }
  var typesOffset = 0;
  function tearOffParameters(container, isStatic, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    if (typeof funType == "number")
      funType += typesOffset;
    return {co: container, iS: isStatic, iI: isIntercepted, rC: requiredParameterCount, dV: optionalParameterDefaultValues, cs: callNames, fs: funsOrNames, fT: funType, aI: applyIndex || 0, nDA: needsDirectAccess};
  }
  function installStaticTearOff(holder, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    var parameters = tearOffParameters(holder, true, false, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, false);
    var getterFunction = staticTearOffGetter(parameters);
    holder[getterName] = getterFunction;
  }
  function installInstanceTearOff(prototype, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    isIntercepted = !!isIntercepted;
    var parameters = tearOffParameters(prototype, false, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, !!needsDirectAccess);
    var getterFunction = instanceTearOffGetter(isIntercepted, parameters);
    prototype[getterName] = getterFunction;
  }
  function setOrUpdateInterceptorsByTag(newTags) {
    var tags = init.interceptorsByTag;
    if (!tags) {
      init.interceptorsByTag = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function setOrUpdateLeafTags(newTags) {
    var tags = init.leafTags;
    if (!tags) {
      init.leafTags = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function updateTypes(newTypes) {
    var types = init.types;
    var length = types.length;
    types.push.apply(types, newTypes);
    return length;
  }
  function updateHolder(holder, newHolder) {
    copyProperties(newHolder, holder);
    return holder;
  }
  var hunkHelpers = function() {
    var mkInstance = function(isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex, false);
        };
      },
      mkStatic = function(requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      };
    return {inherit: inherit, inheritMany: inheritMany, mixin: mixinEasy, mixinHard: mixinHard, installStaticTearOff: installStaticTearOff, installInstanceTearOff: installInstanceTearOff, _instance_0u: mkInstance(0, 0, null, ["call$0"], 0), _instance_1u: mkInstance(0, 1, null, ["call$1"], 0), _instance_2u: mkInstance(0, 2, null, ["call$2"], 0), _instance_0i: mkInstance(1, 0, null, ["call$0"], 0), _instance_1i: mkInstance(1, 1, null, ["call$1"], 0), _instance_2i: mkInstance(1, 2, null, ["call$2"], 0), _static_0: mkStatic(0, null, ["call$0"], 0), _static_1: mkStatic(1, null, ["call$1"], 0), _static_2: mkStatic(2, null, ["call$2"], 0), makeConstList: makeConstList, lazy: lazy, lazyFinal: lazyFinal, lazyOld: lazyOld, updateHolder: updateHolder, convertToFastObject: convertToFastObject, updateTypes: updateTypes, setOrUpdateInterceptorsByTag: setOrUpdateInterceptorsByTag, setOrUpdateLeafTags: setOrUpdateLeafTags};
  }();
  function initializeDeferredHunk(hunk) {
    typesOffset = init.types.length;
    hunk(hunkHelpers, init, holders, $);
  }
  var A = {JS_CONST: function JS_CONST() {
    },
    LateError$fieldNI(fieldName) {
      return new A.LateError("Field '" + fieldName + "' has not been initialized.");
    },
    SystemHash_combine(hash, value) {
      hash = hash + value & 536870911;
      hash = hash + ((hash & 524287) << 10) & 536870911;
      return hash ^ hash >>> 6;
    },
    SystemHash_finish(hash) {
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >>> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    SystemHash_hash2(v1, v2, seed) {
      return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(seed, v1), v2));
    },
    SystemHash_hash4(v1, v2, v3, v4, seed) {
      return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(seed, v1), v2), v3), v4));
    },
    checkNotNullable(value, $name, $T) {
      return value;
    },
    isToStringVisiting(object) {
      var t1, i;
      for (t1 = $.toStringVisiting.length, i = 0; i < t1; ++i)
        if (object === $.toStringVisiting[i])
          return true;
      return false;
    },
    IterableElementError_noElement() {
      return new A.StateError("No element");
    },
    LateError: function LateError(t0) {
      this._message = t0;
    },
    SentinelValue: function SentinelValue() {
    },
    EfficientLengthIterable: function EfficientLengthIterable() {
    },
    ListIterable: function ListIterable() {
    },
    SubListIterable: function SubListIterable(t0, t1, t2, t3) {
      var _ = this;
      _.__internal$_iterable = t0;
      _._start = t1;
      _._endOrLength = t2;
      _.$ti = t3;
    },
    ListIterator: function ListIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_iterable = t0;
      _.__internal$_length = t1;
      _.__internal$_index = 0;
      _.__internal$_current = null;
      _.$ti = t2;
    },
    unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    isJsIndexable(object, record) {
      var result;
      if (record != null) {
        result = record.x;
        if (result != null)
          return result;
      }
      return type$.JavaScriptIndexingBehavior_dynamic._is(object);
    },
    S(value) {
      var result;
      if (typeof value == "string")
        return value;
      if (typeof value == "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      result = J.toString$0$(value);
      return result;
    },
    Primitives_objectHashCode(object) {
      var hash,
        property = $.Primitives__identityHashCodeProperty;
      if (property == null)
        property = $.Primitives__identityHashCodeProperty = Symbol("identityHashCode");
      hash = object[property];
      if (hash == null) {
        hash = Math.random() * 0x3fffffff | 0;
        object[property] = hash;
      }
      return hash;
    },
    Primitives_parseInt(source, radix) {
      var decimalMatch,
        match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
      if (match == null)
        return null;
      if (3 >= match.length)
        return A.ioore(match, 3);
      decimalMatch = match[3];
      if (decimalMatch != null)
        return parseInt(source, 10);
      if (match[2] != null)
        return parseInt(source, 16);
      return null;
    },
    Primitives_parseDouble(source) {
      var result, trimmed;
      if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(source))
        return null;
      result = parseFloat(source);
      if (isNaN(result)) {
        trimmed = B.JSString_methods.trim$0(source);
        if (trimmed === "NaN" || trimmed === "+NaN" || trimmed === "-NaN")
          return result;
        return null;
      }
      return result;
    },
    Primitives_objectTypeName(object) {
      return A.Primitives__objectTypeNameNewRti(object);
    },
    Primitives__objectTypeNameNewRti(object) {
      var interceptor, dispatchName, $constructor, constructorName;
      if (object instanceof A.Object)
        return A._rtiToString(A.instanceType(object), null);
      interceptor = J.getInterceptor$(object);
      if (interceptor === B.Interceptor_methods || interceptor === B.JavaScriptObject_methods || type$.UnknownJavaScriptObject._is(object)) {
        dispatchName = B.C_JS_CONST(object);
        if (dispatchName !== "Object" && dispatchName !== "")
          return dispatchName;
        $constructor = object.constructor;
        if (typeof $constructor == "function") {
          constructorName = $constructor.name;
          if (typeof constructorName == "string" && constructorName !== "Object" && constructorName !== "")
            return constructorName;
        }
      }
      return A._rtiToString(A.instanceType(object), null);
    },
    Primitives_safeToString(object) {
      if (typeof object == "number" || A._isBool(object))
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      if (object instanceof A.Closure)
        return object.toString$0(0);
      return "Instance of '" + A.Primitives_objectTypeName(object) + "'";
    },
    ioore(receiver, index) {
      if (receiver == null)
        J.get$length$asx(receiver);
      throw A.wrapException(A.diagnoseIndexError(receiver, index));
    },
    diagnoseIndexError(indexable, index) {
      var $length, _s5_ = "index";
      if (!A._isInt(index))
        return new A.ArgumentError(true, index, _s5_, null);
      $length = A._asInt(J.get$length$asx(indexable));
      if (index < 0 || index >= $length)
        return A.IndexError$withLength(index, $length, indexable, _s5_);
      return A.RangeError$value(index, _s5_);
    },
    wrapException(ex) {
      return A.initializeExceptionWrapper(new Error(), ex);
    },
    initializeExceptionWrapper(wrapper, ex) {
      var t1;
      if (ex == null)
        ex = new A.TypeError();
      wrapper.dartException = ex;
      t1 = A.toStringWrapper;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: t1});
        wrapper.name = "";
      } else
        wrapper.toString = t1;
      return wrapper;
    },
    toStringWrapper() {
      return J.toString$0$(this.dartException);
    },
    throwExpression(ex) {
      throw A.wrapException(ex);
    },
    throwExpressionWithWrapper(ex, wrapper) {
      throw A.initializeExceptionWrapper(wrapper, ex);
    },
    throwConcurrentModificationError(collection) {
      throw A.wrapException(A.ConcurrentModificationError$(collection));
    },
    TypeErrorDecoder_extractPattern(message) {
      var match, $arguments, argumentsExpr, expr, method, receiver;
      message = A.quoteStringForRegExp(message.replace(String({}), "$receiver$"));
      match = message.match(/\\\$[a-zA-Z]+\\\$/g);
      if (match == null)
        match = A._setArrayType([], type$.JSArray_String);
      $arguments = match.indexOf("\\$arguments\\$");
      argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
      expr = match.indexOf("\\$expr\\$");
      method = match.indexOf("\\$method\\$");
      receiver = match.indexOf("\\$receiver\\$");
      return new A.TypeErrorDecoder(message.replace(new RegExp("\\\\\\$arguments\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$argumentsExpr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$expr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$method\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$receiver\\\\\\$", "g"), "((?:x|[^x])*)"), $arguments, argumentsExpr, expr, method, receiver);
    },
    TypeErrorDecoder_provokeCallErrorOn(expression) {
      return function($expr$) {
        var $argumentsExpr$ = "$arguments$";
        try {
          $expr$.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    TypeErrorDecoder_provokePropertyErrorOn(expression) {
      return function($expr$) {
        try {
          $expr$.$method$;
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    JsNoSuchMethodError$(_message, match) {
      var t1 = match == null,
        t2 = t1 ? null : match.method;
      return new A.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
    },
    unwrapException(ex) {
      var t1;
      if (ex == null)
        return new A.NullThrownFromJavaScriptException(ex);
      if (ex instanceof A.ExceptionAndStackTrace) {
        t1 = ex.dartException;
        return A.saveStackTrace(ex, t1 == null ? type$.Object._as(t1) : t1);
      }
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return A.saveStackTrace(ex, ex.dartException);
      return A._unwrapNonDartException(ex);
    },
    saveStackTrace(ex, error) {
      if (type$.Error._is(error))
        if (error.$thrownJsError == null)
          error.$thrownJsError = ex;
      return error;
    },
    _unwrapNonDartException(ex) {
      var message, number, ieErrorCode, t1, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match, _null = null;
      if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((B.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A.S(message) + " (Error " + ieErrorCode + ")", _null));
            case 445:
            case 5007:
              t1 = A.S(message);
              return A.saveStackTrace(ex, new A.NullError(t1 + " (Error " + ieErrorCode + ")", _null));
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A._asString(message), match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A._asString(message), match));
          } else {
            match = nullCall.matchTypeError$1(message);
            if (match == null) {
              match = nullLiteralCall.matchTypeError$1(message);
              if (match == null) {
                match = undefCall.matchTypeError$1(message);
                if (match == null) {
                  match = undefLiteralCall.matchTypeError$1(message);
                  if (match == null) {
                    match = nullProperty.matchTypeError$1(message);
                    if (match == null) {
                      match = nullLiteralCall.matchTypeError$1(message);
                      if (match == null) {
                        match = undefProperty.matchTypeError$1(message);
                        if (match == null) {
                          match = undefLiteralProperty.matchTypeError$1(message);
                          t1 = match != null;
                        } else
                          t1 = true;
                      } else
                        t1 = true;
                    } else
                      t1 = true;
                  } else
                    t1 = true;
                } else
                  t1 = true;
              } else
                t1 = true;
            } else
              t1 = true;
            if (t1) {
              A._asString(message);
              return A.saveStackTrace(ex, new A.NullError(message, match == null ? _null : match.method));
            }
          }
        }
        return A.saveStackTrace(ex, new A.UnknownJsTypeError(typeof message == "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message == "string" && message.indexOf("call stack") !== -1)
          return new A.StackOverflowError();
        message = function(ex) {
          try {
            return String(ex);
          } catch (e) {
          }
          return null;
        }(ex);
        return A.saveStackTrace(ex, new A.ArgumentError(false, _null, _null, typeof message == "string" ? message.replace(/^RangeError:\s*/, "") : message));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message == "string" && message === "too much recursion")
          return new A.StackOverflowError();
      return ex;
    },
    getTraceFromException(exception) {
      var trace;
      if (exception instanceof A.ExceptionAndStackTrace)
        return exception.stackTrace;
      if (exception == null)
        return new A._StackTrace(exception);
      trace = exception.$cachedTrace;
      if (trace != null)
        return trace;
      return exception.$cachedTrace = new A._StackTrace(exception);
    },
    objectHashCode(object) {
      if (object == null || typeof object != "object")
        return J.get$hashCode$(object);
      else
        return A.Primitives_objectHashCode(object);
    },
    fillLiteralMap(keyValuePairs, result) {
      var index, index0, index1,
        $length = keyValuePairs.length;
      for (index = 0; index < $length; index = index1) {
        index0 = index + 1;
        index1 = index0 + 1;
        result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
      }
      return result;
    },
    invokeClosure(closure, numberOfArguments, arg1, arg2, arg3, arg4) {
      type$.Function._as(closure);
      switch (A._asInt(numberOfArguments)) {
        case 0:
          return closure.call$0();
        case 1:
          return closure.call$1(arg1);
        case 2:
          return closure.call$2(arg1, arg2);
        case 3:
          return closure.call$3(arg1, arg2, arg3);
        case 4:
          return closure.call$4(arg1, arg2, arg3, arg4);
      }
      throw A.wrapException(new A._Exception("Unsupported number of arguments for wrapped closure"));
    },
    convertDartClosureToJS(closure, arity) {
      var $function;
      if (closure == null)
        return null;
      $function = closure.$identity;
      if (!!$function)
        return $function;
      $function = function(closure, arity, invoke) {
        return function(a1, a2, a3, a4) {
          return invoke(closure, arity, a1, a2, a3, a4);
        };
      }(closure, arity, A.invokeClosure);
      closure.$identity = $function;
      return $function;
    },
    Closure_fromTearOff(parameters) {
      var $prototype, $constructor, t2, trampoline, applyTrampoline, i, stub, stub0, stubName, stubCallName,
        container = parameters.co,
        isStatic = parameters.iS,
        isIntercepted = parameters.iI,
        needsDirectAccess = parameters.nDA,
        applyTrampolineIndex = parameters.aI,
        funsOrNames = parameters.fs,
        callNames = parameters.cs,
        $name = funsOrNames[0],
        callName = callNames[0],
        $function = container[$name],
        t1 = parameters.fT;
      t1.toString;
      $prototype = isStatic ? Object.create(new A.StaticClosure().constructor.prototype) : Object.create(new A.BoundClosure(null, null).constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      if (isStatic)
        $constructor = function static_tear_off() {
          this.$initialize();
        };
      else
        $constructor = function tear_off(a, b) {
          this.$initialize(a, b);
        };
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      $prototype.$_name = $name;
      $prototype.$_target = $function;
      t2 = !isStatic;
      if (t2)
        trampoline = A.Closure_forwardCallTo($name, $function, isIntercepted, needsDirectAccess);
      else {
        $prototype.$static_name = $name;
        trampoline = $function;
      }
      $prototype.$signature = A.Closure__computeSignatureFunctionNewRti(t1, isStatic, isIntercepted);
      $prototype[callName] = trampoline;
      for (applyTrampoline = trampoline, i = 1; i < funsOrNames.length; ++i) {
        stub = funsOrNames[i];
        if (typeof stub == "string") {
          stub0 = container[stub];
          stubName = stub;
          stub = stub0;
        } else
          stubName = "";
        stubCallName = callNames[i];
        if (stubCallName != null) {
          if (t2)
            stub = A.Closure_forwardCallTo(stubName, stub, isIntercepted, needsDirectAccess);
          $prototype[stubCallName] = stub;
        }
        if (i === applyTrampolineIndex)
          applyTrampoline = stub;
      }
      $prototype["call*"] = applyTrampoline;
      $prototype.$requiredArgCount = parameters.rC;
      $prototype.$defaultValues = parameters.dV;
      return $constructor;
    },
    Closure__computeSignatureFunctionNewRti(functionType, isStatic, isIntercepted) {
      if (typeof functionType == "number")
        return functionType;
      if (typeof functionType == "string") {
        if (isStatic)
          throw A.wrapException("Cannot compute signature for static tearoff.");
        return function(recipe, evalOnReceiver) {
          return function() {
            return evalOnReceiver(this, recipe);
          };
        }(functionType, A.BoundClosure_evalRecipe);
      }
      throw A.wrapException("Error in functionType of tearoff");
    },
    Closure_cspForwardCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          return function(entry, receiverOf) {
            return function() {
              return receiverOf(this)[entry]();
            };
          }(stubName, getReceiver);
        case 1:
          return function(entry, receiverOf) {
            return function(a) {
              return receiverOf(this)[entry](a);
            };
          }(stubName, getReceiver);
        case 2:
          return function(entry, receiverOf) {
            return function(a, b) {
              return receiverOf(this)[entry](a, b);
            };
          }(stubName, getReceiver);
        case 3:
          return function(entry, receiverOf) {
            return function(a, b, c) {
              return receiverOf(this)[entry](a, b, c);
            };
          }(stubName, getReceiver);
        case 4:
          return function(entry, receiverOf) {
            return function(a, b, c, d) {
              return receiverOf(this)[entry](a, b, c, d);
            };
          }(stubName, getReceiver);
        case 5:
          return function(entry, receiverOf) {
            return function(a, b, c, d, e) {
              return receiverOf(this)[entry](a, b, c, d, e);
            };
          }(stubName, getReceiver);
        default:
          return function(f, receiverOf) {
            return function() {
              return f.apply(receiverOf(this), arguments);
            };
          }($function, getReceiver);
      }
    },
    Closure_forwardCallTo(stubName, $function, isIntercepted, needsDirectAccess) {
      var arity, t1;
      if (isIntercepted)
        return A.Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess);
      arity = $function.length;
      t1 = A.Closure_cspForwardCall(arity, needsDirectAccess, stubName, $function);
      return t1;
    },
    Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf,
        getInterceptor = A.BoundClosure_interceptorOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          throw A.wrapException(new A.RuntimeError("Intercepted function with no arguments."));
        case 1:
          return function(entry, interceptorOf, receiverOf) {
            return function() {
              return interceptorOf(this)[entry](receiverOf(this));
            };
          }(stubName, getInterceptor, getReceiver);
        case 2:
          return function(entry, interceptorOf, receiverOf) {
            return function(a) {
              return interceptorOf(this)[entry](receiverOf(this), a);
            };
          }(stubName, getInterceptor, getReceiver);
        case 3:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b) {
              return interceptorOf(this)[entry](receiverOf(this), a, b);
            };
          }(stubName, getInterceptor, getReceiver);
        case 4:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c);
            };
          }(stubName, getInterceptor, getReceiver);
        case 5:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d);
            };
          }(stubName, getInterceptor, getReceiver);
        case 6:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d, e) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d, e);
            };
          }(stubName, getInterceptor, getReceiver);
        default:
          return function(f, interceptorOf, receiverOf) {
            return function() {
              var a = [receiverOf(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(interceptorOf(this), a);
            };
          }($function, getInterceptor, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess) {
      var arity, t1;
      if ($.BoundClosure__interceptorFieldNameCache == null)
        $.BoundClosure__interceptorFieldNameCache = A.BoundClosure__computeFieldNamed("interceptor");
      if ($.BoundClosure__receiverFieldNameCache == null)
        $.BoundClosure__receiverFieldNameCache = A.BoundClosure__computeFieldNamed("receiver");
      arity = $function.length;
      t1 = A.Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function);
      return t1;
    },
    closureFromTearOff(parameters) {
      return A.Closure_fromTearOff(parameters);
    },
    BoundClosure_evalRecipe(closure, recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, A.instanceType(closure._receiver), recipe);
    },
    BoundClosure_receiverOf(closure) {
      return closure._receiver;
    },
    BoundClosure_interceptorOf(closure) {
      return closure._interceptor;
    },
    BoundClosure__computeFieldNamed(fieldName) {
      var t1, i, $name,
        template = new A.BoundClosure("receiver", "interceptor"),
        names = J.JSArray_markFixedList(Object.getOwnPropertyNames(template), type$.nullable_Object);
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (template[$name] === fieldName)
          return $name;
      }
      throw A.wrapException(A.ArgumentError$("Field name " + fieldName + " not found.", null));
    },
    throwCyclicInit(staticName) {
      throw A.wrapException(new A._CyclicInitializationError(staticName));
    },
    getIsolateAffinityTag($name) {
      return init.getIsolateTag($name);
    },
    LinkedHashMapKeyIterator$(_map, _modifications, $E) {
      var t1 = new A.LinkedHashMapKeyIterator(_map, _modifications, $E._eval$1("LinkedHashMapKeyIterator<0>"));
      t1._cell = _map._first;
      return t1;
    },
    defineProperty(obj, property, value) {
      Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
    },
    lookupAndCacheInterceptor(obj) {
      var interceptor, interceptorClass, altTag, mark, t1,
        tag = A._asString($.getTagFunction.call$1(obj)),
        record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
      if (interceptorClass == null) {
        altTag = A._asStringQ($.alternateTagFunction.call$2(obj, tag));
        if (altTag != null) {
          record = $.dispatchRecordsForInstanceTags[altTag];
          if (record != null) {
            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            return record.i;
          }
          interceptor = $.interceptorsForUncacheableTags[altTag];
          if (interceptor != null)
            return interceptor;
          interceptorClass = init.interceptorsByTag[altTag];
          tag = altTag;
        }
      }
      if (interceptorClass == null)
        return null;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = A.makeLeafDispatchRecord(interceptor);
        $.dispatchRecordsForInstanceTags[tag] = record;
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      if (mark === "~") {
        $.interceptorsForUncacheableTags[tag] = interceptor;
        return interceptor;
      }
      if (mark === "-") {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      }
      if (mark === "+")
        return A.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw A.wrapException(A.UnimplementedError$(tag));
      if (init.leafTags[tag] === true) {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      } else
        return A.patchInteriorProto(obj, interceptor);
    },
    patchInteriorProto(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
      return interceptor;
    },
    makeLeafDispatchRecord(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (init.leafTags[tag] === true)
        return A.makeLeafDispatchRecord(interceptor);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    initNativeDispatch() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      A.initNativeDispatchContinue();
    },
    initNativeDispatchContinue() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      A.initHooks();
      map = init.interceptorsByTag;
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = A.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = map[tag];
          map["!" + tag] = interceptorClass;
          map["~" + tag] = interceptorClass;
          map["-" + tag] = interceptorClass;
          map["+" + tag] = interceptorClass;
          map["*" + tag] = interceptorClass;
        }
      }
    },
    initHooks() {
      var transformers, i, transformer, getTag, getUnknownTag, prototypeForTag,
        hooks = B.C_JS_CONST0();
      hooks = A.applyHooksTransformer(B.C_JS_CONST1, A.applyHooksTransformer(B.C_JS_CONST2, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST4, A.applyHooksTransformer(B.C_JS_CONST5, A.applyHooksTransformer(B.C_JS_CONST6(B.C_JS_CONST), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (Array.isArray(transformers))
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = transformer(hooks) || hooks;
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new A.initHooks_closure(getTag);
      $.alternateTagFunction = new A.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new A.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    createRecordTypePredicate(shape, fieldRtis) {
      var $length = fieldRtis.length,
        $function = init.rttc["" + $length + ";" + shape];
      if ($function == null)
        return null;
      if ($length === 0)
        return $function;
      if ($length === $function.length)
        return $function.apply(null, fieldRtis);
      return $function(fieldRtis);
    },
    stringContainsUnchecked(receiver, other, startIndex) {
      var t1 = receiver.indexOf(other, startIndex);
      return t1 >= 0;
    },
    quoteStringForRegExp(string) {
      if (/[[\]{}()*+?.\\^$|]/.test(string))
        return string.replace(/[[\]{}()*+?.\\^$|]/g, "\\$&");
      return string;
    },
    stringReplaceFirstUnchecked(receiver, pattern, replacement, startIndex) {
      var index = receiver.indexOf(pattern, startIndex);
      if (index < 0)
        return receiver;
      return A.stringReplaceRangeUnchecked(receiver, index, index + pattern.length, replacement);
    },
    stringReplaceRangeUnchecked(receiver, start, end, replacement) {
      return receiver.substring(0, start) + replacement + receiver.substring(end);
    },
    TypeErrorDecoder: function TypeErrorDecoder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._pattern = t0;
      _._arguments = t1;
      _._argumentsExpr = t2;
      _._expr = t3;
      _._method = t4;
      _._receiver = t5;
    },
    NullError: function NullError(t0, t1) {
      this.__js_helper$_message = t0;
      this._method = t1;
    },
    JsNoSuchMethodError: function JsNoSuchMethodError(t0, t1, t2) {
      this.__js_helper$_message = t0;
      this._method = t1;
      this._receiver = t2;
    },
    UnknownJsTypeError: function UnknownJsTypeError(t0) {
      this.__js_helper$_message = t0;
    },
    NullThrownFromJavaScriptException: function NullThrownFromJavaScriptException(t0) {
      this._irritant = t0;
    },
    ExceptionAndStackTrace: function ExceptionAndStackTrace(t0, t1) {
      this.dartException = t0;
      this.stackTrace = t1;
    },
    _StackTrace: function _StackTrace(t0) {
      this._exception = t0;
      this._trace = null;
    },
    Closure: function Closure() {
    },
    Closure0Args: function Closure0Args() {
    },
    Closure2Args: function Closure2Args() {
    },
    TearOffClosure: function TearOffClosure() {
    },
    StaticClosure: function StaticClosure() {
    },
    BoundClosure: function BoundClosure(t0, t1) {
      this._receiver = t0;
      this._interceptor = t1;
    },
    _CyclicInitializationError: function _CyclicInitializationError(t0) {
      this.variableName = t0;
    },
    RuntimeError: function RuntimeError(t0) {
      this.message = t0;
    },
    JsLinkedHashMap: function JsLinkedHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    LinkedHashMapCell: function LinkedHashMapCell(t0, t1) {
      var _ = this;
      _.hashMapCellKey = t0;
      _.hashMapCellValue = t1;
      _._previous = _._next = null;
    },
    LinkedHashMapKeyIterable: function LinkedHashMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    LinkedHashMapKeyIterator: function LinkedHashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._map = t0;
      _._modifications = t1;
      _.__js_helper$_current = _._cell = null;
      _.$ti = t2;
    },
    initHooks_closure: function initHooks_closure(t0) {
      this.getTag = t0;
    },
    initHooks_closure0: function initHooks_closure0(t0) {
      this.getUnknownTag = t0;
    },
    initHooks_closure1: function initHooks_closure1(t0) {
      this.prototypeForTag = t0;
    },
    StringMatch: function StringMatch(t0, t1) {
      this.start = t0;
      this.pattern = t1;
    },
    _StringAllMatchesIterator: function _StringAllMatchesIterator(t0, t1, t2) {
      var _ = this;
      _._input = t0;
      _._pattern = t1;
      _.__js_helper$_index = t2;
      _.__js_helper$_current = null;
    },
    throwLateFieldNI(fieldName) {
      A.throwExpressionWithWrapper(new A.LateError("Field '" + fieldName + "' has not been initialized."), new Error());
    },
    throwLateFieldADI(fieldName) {
      A.throwExpressionWithWrapper(new A.LateError("Field '" + fieldName + "' has been assigned during initialization."), new Error());
    },
    _Cell$named(_name) {
      var t1 = new A._Cell(_name);
      return t1._value = t1;
    },
    _Cell: function _Cell(t0) {
      this._name = t0;
      this._value = null;
    },
    Rti__getQuestionFromStar(universe, rti) {
      var question = rti._precomputed1;
      return question == null ? rti._precomputed1 = A._Universe__lookupQuestionRti(universe, rti._primary, true) : question;
    },
    Rti__getFutureFromFutureOr(universe, rti) {
      var future = rti._precomputed1;
      return future == null ? rti._precomputed1 = A._Universe__lookupInterfaceRti(universe, "Future", [rti._primary]) : future;
    },
    Rti__isUnionOfFunctionType(rti) {
      var kind = rti._kind;
      if (kind === 6 || kind === 7 || kind === 8)
        return A.Rti__isUnionOfFunctionType(rti._primary);
      return kind === 12 || kind === 13;
    },
    Rti__getCanonicalRecipe(rti) {
      return rti._canonicalRecipe;
    },
    findType(recipe) {
      return A._Universe_eval(init.typeUniverse, recipe, false);
    },
    _substitute(universe, rti, typeArguments, depth) {
      var baseType, substitutedBaseType, interfaceTypeArguments, substitutedInterfaceTypeArguments, base, substitutedBase, $arguments, substitutedArguments, returnType, substitutedReturnType, functionParameters, substitutedFunctionParameters, bounds, substitutedBounds, index, argument,
        kind = rti._kind;
      switch (kind) {
        case 5:
        case 1:
        case 2:
        case 3:
        case 4:
          return rti;
        case 6:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupStarRti(universe, substitutedBaseType, true);
        case 7:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupQuestionRti(universe, substitutedBaseType, true);
        case 8:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupFutureOrRti(universe, substitutedBaseType, true);
        case 9:
          interfaceTypeArguments = rti._rest;
          substitutedInterfaceTypeArguments = A._substituteArray(universe, interfaceTypeArguments, typeArguments, depth);
          if (substitutedInterfaceTypeArguments === interfaceTypeArguments)
            return rti;
          return A._Universe__lookupInterfaceRti(universe, rti._primary, substitutedInterfaceTypeArguments);
        case 10:
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          $arguments = rti._rest;
          substitutedArguments = A._substituteArray(universe, $arguments, typeArguments, depth);
          if (substitutedBase === base && substitutedArguments === $arguments)
            return rti;
          return A._Universe__lookupBindingRti(universe, substitutedBase, substitutedArguments);
        case 12:
          returnType = rti._primary;
          substitutedReturnType = A._substitute(universe, returnType, typeArguments, depth);
          functionParameters = rti._rest;
          substitutedFunctionParameters = A._substituteFunctionParameters(universe, functionParameters, typeArguments, depth);
          if (substitutedReturnType === returnType && substitutedFunctionParameters === functionParameters)
            return rti;
          return A._Universe__lookupFunctionRti(universe, substitutedReturnType, substitutedFunctionParameters);
        case 13:
          bounds = rti._rest;
          depth += bounds.length;
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, depth);
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          if (substitutedBounds === bounds && substitutedBase === base)
            return rti;
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, true);
        case 14:
          index = rti._primary;
          if (index < depth)
            return rti;
          argument = typeArguments[index - depth];
          if (argument == null)
            return rti;
          return argument;
        default:
          throw A.wrapException(A.AssertionError$("Attempted to substitute unexpected RTI kind " + kind));
      }
    },
    _substituteArray(universe, rtiArray, typeArguments, depth) {
      var changed, i, rti, substitutedRti,
        $length = rtiArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; ++i) {
        rti = rtiArray[i];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result[i] = substitutedRti;
      }
      return changed ? result : rtiArray;
    },
    _substituteNamed(universe, namedArray, typeArguments, depth) {
      var changed, i, t1, t2, rti, substitutedRti,
        $length = namedArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; i += 3) {
        t1 = namedArray[i];
        t2 = namedArray[i + 1];
        rti = namedArray[i + 2];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result.splice(i, 3, t1, t2, substitutedRti);
      }
      return changed ? result : namedArray;
    },
    _substituteFunctionParameters(universe, functionParameters, typeArguments, depth) {
      var result,
        requiredPositional = functionParameters._requiredPositional,
        substitutedRequiredPositional = A._substituteArray(universe, requiredPositional, typeArguments, depth),
        optionalPositional = functionParameters._optionalPositional,
        substitutedOptionalPositional = A._substituteArray(universe, optionalPositional, typeArguments, depth),
        named = functionParameters._named,
        substitutedNamed = A._substituteNamed(universe, named, typeArguments, depth);
      if (substitutedRequiredPositional === requiredPositional && substitutedOptionalPositional === optionalPositional && substitutedNamed === named)
        return functionParameters;
      result = new A._FunctionParameters();
      result._requiredPositional = substitutedRequiredPositional;
      result._optionalPositional = substitutedOptionalPositional;
      result._named = substitutedNamed;
      return result;
    },
    _setArrayType(target, rti) {
      target[init.arrayRti] = rti;
      return target;
    },
    closureFunctionType(closure) {
      var t1,
        signature = closure.$signature;
      if (signature != null) {
        if (typeof signature == "number")
          return A.getTypeFromTypesTable(signature);
        t1 = closure.$signature();
        return t1;
      }
      return null;
    },
    instanceOrFunctionType(object, testRti) {
      var rti;
      if (A.Rti__isUnionOfFunctionType(testRti))
        if (object instanceof A.Closure) {
          rti = A.closureFunctionType(object);
          if (rti != null)
            return rti;
        }
      return A.instanceType(object);
    },
    instanceType(object) {
      if (object instanceof A.Object)
        return A._instanceType(object);
      if (Array.isArray(object))
        return A._arrayInstanceType(object);
      return A._instanceTypeFromConstructor(J.getInterceptor$(object));
    },
    _arrayInstanceType(object) {
      var rti = object[init.arrayRti],
        defaultRti = type$.JSArray_dynamic;
      if (rti == null)
        return defaultRti;
      if (rti.constructor !== defaultRti.constructor)
        return defaultRti;
      return rti;
    },
    _instanceType(object) {
      var rti = object.$ti;
      return rti != null ? rti : A._instanceTypeFromConstructor(object);
    },
    _instanceTypeFromConstructor(instance) {
      var $constructor = instance.constructor,
        probe = $constructor.$ccache;
      if (probe != null)
        return probe;
      return A._instanceTypeFromConstructorMiss(instance, $constructor);
    },
    _instanceTypeFromConstructorMiss(instance, $constructor) {
      var effectiveConstructor = instance instanceof A.Closure ? Object.getPrototypeOf(Object.getPrototypeOf(instance)).constructor : $constructor,
        rti = A._Universe_findErasedType(init.typeUniverse, effectiveConstructor.name);
      $constructor.$ccache = rti;
      return rti;
    },
    getTypeFromTypesTable(index) {
      var rti,
        table = init.types,
        type = table[index];
      if (typeof type == "string") {
        rti = A._Universe_eval(init.typeUniverse, type, false);
        table[index] = rti;
        return rti;
      }
      return type;
    },
    getRuntimeTypeOfDartObject(object) {
      return A.createRuntimeType(A._instanceType(object));
    },
    _structuralTypeOf(object) {
      var functionRti = object instanceof A.Closure ? A.closureFunctionType(object) : null;
      if (functionRti != null)
        return functionRti;
      if (type$.TrustedGetRuntimeType._is(object))
        return J.get$runtimeType$(object)._rti;
      if (Array.isArray(object))
        return A._arrayInstanceType(object);
      return A.instanceType(object);
    },
    createRuntimeType(rti) {
      var t1 = rti._cachedRuntimeType;
      return t1 == null ? rti._cachedRuntimeType = A._createRuntimeType(rti) : t1;
    },
    _createRuntimeType(rti) {
      var starErasedRti, t1,
        s = rti._canonicalRecipe,
        starErasedRecipe = s.replace(/\*/g, "");
      if (starErasedRecipe === s)
        return rti._cachedRuntimeType = new A._Type(rti);
      starErasedRti = A._Universe_eval(init.typeUniverse, starErasedRecipe, true);
      t1 = starErasedRti._cachedRuntimeType;
      return t1 == null ? starErasedRti._cachedRuntimeType = A._createRuntimeType(starErasedRti) : t1;
    },
    typeLiteral(recipe) {
      return A.createRuntimeType(A._Universe_eval(init.typeUniverse, recipe, false));
    },
    _installSpecializedIsTest(object) {
      var t1, unstarred, isFn, $name, predicate, testRti = this;
      if (testRti === type$.Object)
        return A._finishIsFn(testRti, object, A._isObject);
      if (!A.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return A._finishIsFn(testRti, object, A._isTop);
      t1 = testRti._kind;
      if (t1 === 7)
        return A._finishIsFn(testRti, object, A._generalNullableIsTestImplementation);
      if (t1 === 1)
        return A._finishIsFn(testRti, object, A._isNever);
      unstarred = t1 === 6 ? testRti._primary : testRti;
      t1 = unstarred._kind;
      if (t1 === 8)
        return A._finishIsFn(testRti, object, A._isFutureOr);
      if (unstarred === type$.int)
        isFn = A._isInt;
      else if (unstarred === type$.double || unstarred === type$.num)
        isFn = A._isNum;
      else if (unstarred === type$.String)
        isFn = A._isString;
      else
        isFn = unstarred === type$.bool ? A._isBool : null;
      if (isFn != null)
        return A._finishIsFn(testRti, object, isFn);
      if (t1 === 9) {
        $name = unstarred._primary;
        if (unstarred._rest.every(A.isTopType)) {
          testRti._specializedTestResource = "$is" + $name;
          if ($name === "List")
            return A._finishIsFn(testRti, object, A._isListTestViaProperty);
          return A._finishIsFn(testRti, object, A._isTestViaProperty);
        }
      } else if (t1 === 11) {
        predicate = A.createRecordTypePredicate(unstarred._primary, unstarred._rest);
        return A._finishIsFn(testRti, object, predicate == null ? A._isNever : predicate);
      }
      return A._finishIsFn(testRti, object, A._generalIsTestImplementation);
    },
    _finishIsFn(testRti, object, isFn) {
      testRti._is = isFn;
      return testRti._is(object);
    },
    _installSpecializedAsCheck(object) {
      var t1, testRti = this,
        asFn = A._generalAsCheckImplementation;
      if (!A.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        asFn = A._asTop;
      else if (testRti === type$.Object)
        asFn = A._asObject;
      else {
        t1 = A.isNullable(testRti);
        if (t1)
          asFn = A._generalNullableAsCheckImplementation;
      }
      testRti._as = asFn;
      return testRti._as(object);
    },
    _nullIs(testRti) {
      var t1,
        kind = testRti._kind;
      if (!A.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          if (!(testRti === type$.legacy_Never))
            if (kind !== 7)
              if (!(kind === 6 && A._nullIs(testRti._primary)))
                t1 = kind === 8 && A._nullIs(testRti._primary) || testRti === type$.Null || testRti === type$.JSNull;
              else
                t1 = true;
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    _generalIsTestImplementation(object) {
      var testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      return A._isSubtype(init.typeUniverse, A.instanceOrFunctionType(object, testRti), null, testRti, null);
    },
    _generalNullableIsTestImplementation(object) {
      if (object == null)
        return true;
      return this._primary._is(object);
    },
    _isTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _isListTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      if (typeof object != "object")
        return false;
      if (Array.isArray(object))
        return true;
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _generalAsCheckImplementation(object) {
      var t1, testRti = this;
      if (object == null) {
        t1 = A.isNullable(testRti);
        if (t1)
          return object;
      } else if (testRti._is(object))
        return object;
      A._failedAsCheck(object, testRti);
    },
    _generalNullableAsCheckImplementation(object) {
      var testRti = this;
      if (object == null)
        return object;
      else if (testRti._is(object))
        return object;
      A._failedAsCheck(object, testRti);
    },
    _failedAsCheck(object, testRti) {
      throw A.wrapException(A._TypeError$fromMessage(A._Error_compose(object, A._rtiToString(testRti, null))));
    },
    _Error_compose(object, checkedTypeDescription) {
      return A.Error_safeToString(object) + ": type '" + A._rtiToString(A._structuralTypeOf(object), null) + "' is not a subtype of type '" + checkedTypeDescription + "'";
    },
    _TypeError$fromMessage(message) {
      return new A._TypeError("TypeError: " + message);
    },
    _TypeError__TypeError$forType(object, type) {
      return new A._TypeError("TypeError: " + A._Error_compose(object, type));
    },
    _isFutureOr(object) {
      var testRti = this;
      return testRti._primary._is(object) || A.Rti__getFutureFromFutureOr(init.typeUniverse, testRti)._is(object);
    },
    _isObject(object) {
      return object != null;
    },
    _asObject(object) {
      if (object != null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "Object"));
    },
    _isTop(object) {
      return true;
    },
    _asTop(object) {
      return object;
    },
    _isNever(object) {
      return false;
    },
    _isBool(object) {
      return true === object || false === object;
    },
    _asBool(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolS(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolQ(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool?"));
    },
    _asDouble(object) {
      if (typeof object == "number")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleS(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double?"));
    },
    _isInt(object) {
      return typeof object == "number" && Math.floor(object) === object;
    },
    _asInt(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int"));
    },
    _asIntS(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int"));
    },
    _asIntQ(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int?"));
    },
    _isNum(object) {
      return typeof object == "number";
    },
    _asNum(object) {
      if (typeof object == "number")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num"));
    },
    _asNumS(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num"));
    },
    _asNumQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num?"));
    },
    _isString(object) {
      return typeof object == "string";
    },
    _asString(object) {
      if (typeof object == "string")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String"));
    },
    _asStringS(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String"));
    },
    _asStringQ(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String?"));
    },
    _rtiArrayToString(array, genericContext) {
      var s, sep, i;
      for (s = "", sep = "", i = 0; i < array.length; ++i, sep = ", ")
        s += sep + A._rtiToString(array[i], genericContext);
      return s;
    },
    _recordRtiToString(recordType, genericContext) {
      var fieldCount, names, namesIndex, s, comma, i,
        partialShape = recordType._primary,
        fields = recordType._rest;
      if ("" === partialShape)
        return "(" + A._rtiArrayToString(fields, genericContext) + ")";
      fieldCount = fields.length;
      names = partialShape.split(",");
      namesIndex = names.length - fieldCount;
      for (s = "(", comma = "", i = 0; i < fieldCount; ++i, comma = ", ") {
        s += comma;
        if (namesIndex === 0)
          s += "{";
        s += A._rtiToString(fields[i], genericContext);
        if (namesIndex >= 0)
          s += " " + names[namesIndex];
        ++namesIndex;
      }
      return s + "})";
    },
    _functionRtiToString(functionType, genericContext, bounds) {
      var boundsLength, outerContextLength, offset, i, t1, t2, typeParametersText, typeSep, t3, t4, boundRti, kind, parameters, requiredPositional, requiredPositionalLength, optionalPositional, optionalPositionalLength, named, namedLength, returnTypeText, argumentsText, sep, _s2_ = ", ";
      if (bounds != null) {
        boundsLength = bounds.length;
        if (genericContext == null) {
          genericContext = A._setArrayType([], type$.JSArray_String);
          outerContextLength = null;
        } else
          outerContextLength = genericContext.length;
        offset = genericContext.length;
        for (i = boundsLength; i > 0; --i)
          B.JSArray_methods.add$1(genericContext, "T" + (offset + i));
        for (t1 = type$.nullable_Object, t2 = type$.legacy_Object, typeParametersText = "<", typeSep = "", i = 0; i < boundsLength; ++i, typeSep = _s2_) {
          t3 = genericContext.length;
          t4 = t3 - 1 - i;
          if (!(t4 >= 0))
            return A.ioore(genericContext, t4);
          typeParametersText = B.JSString_methods.$add(typeParametersText + typeSep, genericContext[t4]);
          boundRti = bounds[i];
          kind = boundRti._kind;
          if (!(kind === 2 || kind === 3 || kind === 4 || kind === 5 || boundRti === t1))
            if (!(boundRti === t2))
              t3 = false;
            else
              t3 = true;
          else
            t3 = true;
          if (!t3)
            typeParametersText += " extends " + A._rtiToString(boundRti, genericContext);
        }
        typeParametersText += ">";
      } else {
        typeParametersText = "";
        outerContextLength = null;
      }
      t1 = functionType._primary;
      parameters = functionType._rest;
      requiredPositional = parameters._requiredPositional;
      requiredPositionalLength = requiredPositional.length;
      optionalPositional = parameters._optionalPositional;
      optionalPositionalLength = optionalPositional.length;
      named = parameters._named;
      namedLength = named.length;
      returnTypeText = A._rtiToString(t1, genericContext);
      for (argumentsText = "", sep = "", i = 0; i < requiredPositionalLength; ++i, sep = _s2_)
        argumentsText += sep + A._rtiToString(requiredPositional[i], genericContext);
      if (optionalPositionalLength > 0) {
        argumentsText += sep + "[";
        for (sep = "", i = 0; i < optionalPositionalLength; ++i, sep = _s2_)
          argumentsText += sep + A._rtiToString(optionalPositional[i], genericContext);
        argumentsText += "]";
      }
      if (namedLength > 0) {
        argumentsText += sep + "{";
        for (sep = "", i = 0; i < namedLength; i += 3, sep = _s2_) {
          argumentsText += sep;
          if (named[i + 1])
            argumentsText += "required ";
          argumentsText += A._rtiToString(named[i + 2], genericContext) + " " + named[i];
        }
        argumentsText += "}";
      }
      if (outerContextLength != null) {
        genericContext.toString;
        genericContext.length = outerContextLength;
      }
      return typeParametersText + "(" + argumentsText + ") => " + returnTypeText;
    },
    _rtiToString(rti, genericContext) {
      var s, questionArgument, argumentKind, $name, $arguments, t1, t2,
        kind = rti._kind;
      if (kind === 5)
        return "erased";
      if (kind === 2)
        return "dynamic";
      if (kind === 3)
        return "void";
      if (kind === 1)
        return "Never";
      if (kind === 4)
        return "any";
      if (kind === 6) {
        s = A._rtiToString(rti._primary, genericContext);
        return s;
      }
      if (kind === 7) {
        questionArgument = rti._primary;
        s = A._rtiToString(questionArgument, genericContext);
        argumentKind = questionArgument._kind;
        return (argumentKind === 12 || argumentKind === 13 ? "(" + s + ")" : s) + "?";
      }
      if (kind === 8)
        return "FutureOr<" + A._rtiToString(rti._primary, genericContext) + ">";
      if (kind === 9) {
        $name = A._unminifyOrTag(rti._primary);
        $arguments = rti._rest;
        return $arguments.length > 0 ? $name + ("<" + A._rtiArrayToString($arguments, genericContext) + ">") : $name;
      }
      if (kind === 11)
        return A._recordRtiToString(rti, genericContext);
      if (kind === 12)
        return A._functionRtiToString(rti, genericContext, null);
      if (kind === 13)
        return A._functionRtiToString(rti._primary, genericContext, rti._rest);
      if (kind === 14) {
        t1 = rti._primary;
        t2 = genericContext.length;
        t1 = t2 - 1 - t1;
        if (!(t1 >= 0 && t1 < t2))
          return A.ioore(genericContext, t1);
        return genericContext[t1];
      }
      return "?";
    },
    _unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    _Universe_findRule(universe, targetType) {
      var rule = universe.tR[targetType];
      for (; typeof rule == "string";)
        rule = universe.tR[rule];
      return rule;
    },
    _Universe_findErasedType(universe, cls) {
      var $length, erased, $arguments, i, $interface,
        t1 = universe.eT,
        probe = t1[cls];
      if (probe == null)
        return A._Universe_eval(universe, cls, false);
      else if (typeof probe == "number") {
        $length = probe;
        erased = A._Universe__lookupTerminalRti(universe, 5, "#");
        $arguments = A._Utils_newArrayOrEmpty($length);
        for (i = 0; i < $length; ++i)
          $arguments[i] = erased;
        $interface = A._Universe__lookupInterfaceRti(universe, cls, $arguments);
        t1[cls] = $interface;
        return $interface;
      } else
        return probe;
    },
    _Universe_addRules(universe, rules) {
      return A._Utils_objectAssign(universe.tR, rules);
    },
    _Universe_addErasedTypes(universe, types) {
      return A._Utils_objectAssign(universe.eT, types);
    },
    _Universe_eval(universe, recipe, normalize) {
      var rti,
        t1 = universe.eC,
        probe = t1.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, null, recipe, normalize));
      t1.set(recipe, rti);
      return rti;
    },
    _Universe_evalInEnvironment(universe, environment, recipe) {
      var probe, rti,
        cache = environment._evalCache;
      if (cache == null)
        cache = environment._evalCache = new Map();
      probe = cache.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, environment, recipe, true));
      cache.set(recipe, rti);
      return rti;
    },
    _Universe_bind(universe, environment, argumentsRti) {
      var argumentsRecipe, probe, rti,
        cache = environment._bindCache;
      if (cache == null)
        cache = environment._bindCache = new Map();
      argumentsRecipe = argumentsRti._canonicalRecipe;
      probe = cache.get(argumentsRecipe);
      if (probe != null)
        return probe;
      rti = A._Universe__lookupBindingRti(universe, environment, argumentsRti._kind === 10 ? argumentsRti._rest : [argumentsRti]);
      cache.set(argumentsRecipe, rti);
      return rti;
    },
    _Universe__installTypeTests(universe, rti) {
      rti._as = A._installSpecializedAsCheck;
      rti._is = A._installSpecializedIsTest;
      return rti;
    },
    _Universe__lookupTerminalRti(universe, kind, key) {
      var rti, t1,
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = kind;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupStarRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "*",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createStarRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createStarRti(universe, baseType, key, normalize) {
      var baseKind, t1, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!A.isStrongTopType(baseType))
          t1 = baseType === type$.Null || baseType === type$.JSNull || baseKind === 7 || baseKind === 6;
        else
          t1 = true;
        if (t1)
          return baseType;
      }
      rti = new A.Rti(null, null);
      rti._kind = 6;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupQuestionRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "?",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createQuestionRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createQuestionRti(universe, baseType, key, normalize) {
      var baseKind, t1, starArgument, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!A.isStrongTopType(baseType))
          if (!(baseType === type$.Null || baseType === type$.JSNull))
            if (baseKind !== 7)
              t1 = baseKind === 8 && A.isNullable(baseType._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
        if (t1)
          return baseType;
        else if (baseKind === 1 || baseType === type$.legacy_Never)
          return type$.Null;
        else if (baseKind === 6) {
          starArgument = baseType._primary;
          if (starArgument._kind === 8 && A.isNullable(starArgument._primary))
            return starArgument;
          else
            return A.Rti__getQuestionFromStar(universe, baseType);
        }
      }
      rti = new A.Rti(null, null);
      rti._kind = 7;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupFutureOrRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "/",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createFutureOrRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createFutureOrRti(universe, baseType, key, normalize) {
      var t1, t2, rti;
      if (normalize) {
        t1 = baseType._kind;
        if (!A.isStrongTopType(baseType))
          if (!(baseType === type$.legacy_Object))
            t2 = false;
          else
            t2 = true;
        else
          t2 = true;
        if (t2 || baseType === type$.Object)
          return baseType;
        else if (t1 === 1)
          return A._Universe__lookupInterfaceRti(universe, "Future", [baseType]);
        else if (baseType === type$.Null || baseType === type$.JSNull)
          return type$.nullable_Future_Null;
      }
      rti = new A.Rti(null, null);
      rti._kind = 8;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupGenericFunctionParameterRti(universe, index) {
      var rti, t1,
        key = "" + index + "^",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 14;
      rti._primary = index;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__canonicalRecipeJoin($arguments) {
      var s, sep, i,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; ++i, sep = ",")
        s += sep + $arguments[i]._canonicalRecipe;
      return s;
    },
    _Universe__canonicalRecipeJoinNamed($arguments) {
      var s, sep, i, t1, nameSep,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; i += 3, sep = ",") {
        t1 = $arguments[i];
        nameSep = $arguments[i + 1] ? "!" : ":";
        s += sep + t1 + nameSep + $arguments[i + 2]._canonicalRecipe;
      }
      return s;
    },
    _Universe__lookupInterfaceRti(universe, $name, $arguments) {
      var probe, rti, t1,
        s = $name;
      if ($arguments.length > 0)
        s += "<" + A._Universe__canonicalRecipeJoin($arguments) + ">";
      probe = universe.eC.get(s);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 9;
      rti._primary = $name;
      rti._rest = $arguments;
      if ($arguments.length > 0)
        rti._precomputed1 = $arguments[0];
      rti._canonicalRecipe = s;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(s, t1);
      return t1;
    },
    _Universe__lookupBindingRti(universe, base, $arguments) {
      var newBase, newArguments, key, probe, rti, t1;
      if (base._kind === 10) {
        newBase = base._primary;
        newArguments = base._rest.concat($arguments);
      } else {
        newArguments = $arguments;
        newBase = base;
      }
      key = newBase._canonicalRecipe + (";<" + A._Universe__canonicalRecipeJoin(newArguments) + ">");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 10;
      rti._primary = newBase;
      rti._rest = newArguments;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupRecordRti(universe, partialShapeTag, fields) {
      var rti, t1,
        key = "+" + (partialShapeTag + "(" + A._Universe__canonicalRecipeJoin(fields) + ")"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 11;
      rti._primary = partialShapeTag;
      rti._rest = fields;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupFunctionRti(universe, returnType, parameters) {
      var sep, key, probe, rti, t1,
        s = returnType._canonicalRecipe,
        requiredPositional = parameters._requiredPositional,
        requiredPositionalLength = requiredPositional.length,
        optionalPositional = parameters._optionalPositional,
        optionalPositionalLength = optionalPositional.length,
        named = parameters._named,
        namedLength = named.length,
        recipe = "(" + A._Universe__canonicalRecipeJoin(requiredPositional);
      if (optionalPositionalLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "[" + A._Universe__canonicalRecipeJoin(optionalPositional) + "]";
      }
      if (namedLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "{" + A._Universe__canonicalRecipeJoinNamed(named) + "}";
      }
      key = s + (recipe + ")");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 12;
      rti._primary = returnType;
      rti._rest = parameters;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupGenericFunctionRti(universe, baseFunctionType, bounds, normalize) {
      var t1,
        key = baseFunctionType._canonicalRecipe + ("<" + A._Universe__canonicalRecipeJoin(bounds) + ">"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize) {
      var $length, typeArguments, count, i, bound, substitutedBase, substitutedBounds, rti;
      if (normalize) {
        $length = bounds.length;
        typeArguments = A._Utils_newArrayOrEmpty($length);
        for (count = 0, i = 0; i < $length; ++i) {
          bound = bounds[i];
          if (bound._kind === 1) {
            typeArguments[i] = bound;
            ++count;
          }
        }
        if (count > 0) {
          substitutedBase = A._substitute(universe, baseFunctionType, typeArguments, 0);
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, 0);
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, bounds !== substitutedBounds);
        }
      }
      rti = new A.Rti(null, null);
      rti._kind = 13;
      rti._primary = baseFunctionType;
      rti._rest = bounds;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Parser_create(universe, environment, recipe, normalize) {
      return {u: universe, e: environment, r: recipe, s: [], p: 0, n: normalize};
    },
    _Parser_parse(parser) {
      var t2, i, ch, t3, array, end, item,
        source = parser.r,
        t1 = parser.s;
      for (t2 = source.length, i = 0; i < t2;) {
        ch = source.charCodeAt(i);
        if (ch >= 48 && ch <= 57)
          i = A._Parser_handleDigit(i + 1, ch, source, t1);
        else if ((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36 || ch === 124)
          i = A._Parser_handleIdentifier(parser, i, source, t1, false);
        else if (ch === 46)
          i = A._Parser_handleIdentifier(parser, i, source, t1, true);
        else {
          ++i;
          switch (ch) {
            case 44:
              break;
            case 58:
              t1.push(false);
              break;
            case 33:
              t1.push(true);
              break;
            case 59:
              t1.push(A._Parser_toType(parser.u, parser.e, t1.pop()));
              break;
            case 94:
              t1.push(A._Universe__lookupGenericFunctionParameterRti(parser.u, t1.pop()));
              break;
            case 35:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 5, "#"));
              break;
            case 64:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 2, "@"));
              break;
            case 126:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 3, "~"));
              break;
            case 60:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 62:
              A._Parser_handleTypeArguments(parser, t1);
              break;
            case 38:
              A._Parser_handleExtendedOperations(parser, t1);
              break;
            case 42:
              t3 = parser.u;
              t1.push(A._Universe__lookupStarRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 63:
              t3 = parser.u;
              t1.push(A._Universe__lookupQuestionRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 47:
              t3 = parser.u;
              t1.push(A._Universe__lookupFutureOrRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 40:
              t1.push(-3);
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 41:
              A._Parser_handleArguments(parser, t1);
              break;
            case 91:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 93:
              array = t1.splice(parser.p);
              A._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-1);
              break;
            case 123:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 125:
              array = t1.splice(parser.p);
              A._Parser_toTypesNamed(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-2);
              break;
            case 43:
              end = source.indexOf("(", i);
              t1.push(source.substring(i, end));
              t1.push(-4);
              t1.push(parser.p);
              parser.p = t1.length;
              i = end + 1;
              break;
            default:
              throw "Bad character " + ch;
          }
        }
      }
      item = t1.pop();
      return A._Parser_toType(parser.u, parser.e, item);
    },
    _Parser_handleDigit(i, digit, source, stack) {
      var t1, ch,
        value = digit - 48;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (!(ch >= 48 && ch <= 57))
          break;
        value = value * 10 + (ch - 48);
      }
      stack.push(value);
      return i;
    },
    _Parser_handleIdentifier(parser, start, source, stack, hasPeriod) {
      var t1, ch, t2, string, environment, recipe,
        i = start + 1;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (ch === 46) {
          if (hasPeriod)
            break;
          hasPeriod = true;
        } else {
          if (!((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36 || ch === 124))
            t2 = ch >= 48 && ch <= 57;
          else
            t2 = true;
          if (!t2)
            break;
        }
      }
      string = source.substring(start, i);
      if (hasPeriod) {
        t1 = parser.u;
        environment = parser.e;
        if (environment._kind === 10)
          environment = environment._primary;
        recipe = A._Universe_findRule(t1, environment._primary)[string];
        if (recipe == null)
          A.throwExpression('No "' + string + '" in "' + A.Rti__getCanonicalRecipe(environment) + '"');
        stack.push(A._Universe_evalInEnvironment(t1, environment, recipe));
      } else
        stack.push(string);
      return i;
    },
    _Parser_handleTypeArguments(parser, stack) {
      var base,
        t1 = parser.u,
        $arguments = A._Parser_collectArray(parser, stack),
        head = stack.pop();
      if (typeof head == "string")
        stack.push(A._Universe__lookupInterfaceRti(t1, head, $arguments));
      else {
        base = A._Parser_toType(t1, parser.e, head);
        switch (base._kind) {
          case 12:
            stack.push(A._Universe__lookupGenericFunctionRti(t1, base, $arguments, parser.n));
            break;
          default:
            stack.push(A._Universe__lookupBindingRti(t1, base, $arguments));
            break;
        }
      }
    },
    _Parser_handleArguments(parser, stack) {
      var optionalPositional, named, requiredPositional, returnType, parameters, _null = null,
        t1 = parser.u,
        head = stack.pop();
      if (typeof head == "number")
        switch (head) {
          case -1:
            optionalPositional = stack.pop();
            named = _null;
            break;
          case -2:
            named = stack.pop();
            optionalPositional = _null;
            break;
          default:
            stack.push(head);
            named = _null;
            optionalPositional = named;
            break;
        }
      else {
        stack.push(head);
        named = _null;
        optionalPositional = named;
      }
      requiredPositional = A._Parser_collectArray(parser, stack);
      head = stack.pop();
      switch (head) {
        case -3:
          head = stack.pop();
          if (optionalPositional == null)
            optionalPositional = t1.sEA;
          if (named == null)
            named = t1.sEA;
          returnType = A._Parser_toType(t1, parser.e, head);
          parameters = new A._FunctionParameters();
          parameters._requiredPositional = requiredPositional;
          parameters._optionalPositional = optionalPositional;
          parameters._named = named;
          stack.push(A._Universe__lookupFunctionRti(t1, returnType, parameters));
          return;
        case -4:
          stack.push(A._Universe__lookupRecordRti(t1, stack.pop(), requiredPositional));
          return;
        default:
          throw A.wrapException(A.AssertionError$("Unexpected state under `()`: " + A.S(head)));
      }
    },
    _Parser_handleExtendedOperations(parser, stack) {
      var $top = stack.pop();
      if (0 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 1, "0&"));
        return;
      }
      if (1 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 4, "1&"));
        return;
      }
      throw A.wrapException(A.AssertionError$("Unexpected extended operation " + A.S($top)));
    },
    _Parser_collectArray(parser, stack) {
      var array = stack.splice(parser.p);
      A._Parser_toTypes(parser.u, parser.e, array);
      parser.p = stack.pop();
      return array;
    },
    _Parser_toType(universe, environment, item) {
      if (typeof item == "string")
        return A._Universe__lookupInterfaceRti(universe, item, universe.sEA);
      else if (typeof item == "number") {
        environment.toString;
        return A._Parser_indexToType(universe, environment, item);
      } else
        return item;
    },
    _Parser_toTypes(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 0; i < $length; ++i)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_toTypesNamed(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 2; i < $length; i += 3)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_indexToType(universe, environment, index) {
      var typeArguments, len,
        kind = environment._kind;
      if (kind === 10) {
        if (index === 0)
          return environment._primary;
        typeArguments = environment._rest;
        len = typeArguments.length;
        if (index <= len)
          return typeArguments[index - 1];
        index -= len;
        environment = environment._primary;
        kind = environment._kind;
      } else if (index === 0)
        return environment;
      if (kind !== 9)
        throw A.wrapException(A.AssertionError$("Indexed base must be an interface type"));
      typeArguments = environment._rest;
      if (index <= typeArguments.length)
        return typeArguments[index - 1];
      throw A.wrapException(A.AssertionError$("Bad index " + index + " for " + environment.toString$0(0)));
    },
    _isSubtype(universe, s, sEnv, t, tEnv) {
      var t1, sKind, leftTypeVariable, tKind, t2, sBounds, tBounds, sLength, i, sBound, tBound;
      if (s === t)
        return true;
      if (!A.isStrongTopType(t))
        if (!(t === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return true;
      sKind = s._kind;
      if (sKind === 4)
        return true;
      if (A.isStrongTopType(s))
        return false;
      if (s._kind !== 1)
        t1 = false;
      else
        t1 = true;
      if (t1)
        return true;
      leftTypeVariable = sKind === 14;
      if (leftTypeVariable)
        if (A._isSubtype(universe, sEnv[s._primary], sEnv, t, tEnv))
          return true;
      tKind = t._kind;
      t1 = s === type$.Null || s === type$.JSNull;
      if (t1) {
        if (tKind === 8)
          return A._isSubtype(universe, s, sEnv, t._primary, tEnv);
        return t === type$.Null || t === type$.JSNull || tKind === 7 || tKind === 6;
      }
      if (t === type$.Object) {
        if (sKind === 8)
          return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
        if (sKind === 6)
          return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
        return sKind !== 7;
      }
      if (sKind === 6)
        return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
      if (tKind === 6) {
        t1 = A.Rti__getQuestionFromStar(universe, t);
        return A._isSubtype(universe, s, sEnv, t1, tEnv);
      }
      if (sKind === 8) {
        if (!A._isSubtype(universe, s._primary, sEnv, t, tEnv))
          return false;
        return A._isSubtype(universe, A.Rti__getFutureFromFutureOr(universe, s), sEnv, t, tEnv);
      }
      if (sKind === 7) {
        t1 = A._isSubtype(universe, type$.Null, sEnv, t, tEnv);
        return t1 && A._isSubtype(universe, s._primary, sEnv, t, tEnv);
      }
      if (tKind === 8) {
        if (A._isSubtype(universe, s, sEnv, t._primary, tEnv))
          return true;
        return A._isSubtype(universe, s, sEnv, A.Rti__getFutureFromFutureOr(universe, t), tEnv);
      }
      if (tKind === 7) {
        t1 = A._isSubtype(universe, s, sEnv, type$.Null, tEnv);
        return t1 || A._isSubtype(universe, s, sEnv, t._primary, tEnv);
      }
      if (leftTypeVariable)
        return false;
      t1 = sKind !== 12;
      if ((!t1 || sKind === 13) && t === type$.Function)
        return true;
      t2 = sKind === 11;
      if (t2 && t === type$.Record)
        return true;
      if (tKind === 13) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (sKind !== 13)
          return false;
        sBounds = s._rest;
        tBounds = t._rest;
        sLength = sBounds.length;
        if (sLength !== tBounds.length)
          return false;
        sEnv = sEnv == null ? sBounds : sBounds.concat(sEnv);
        tEnv = tEnv == null ? tBounds : tBounds.concat(tEnv);
        for (i = 0; i < sLength; ++i) {
          sBound = sBounds[i];
          tBound = tBounds[i];
          if (!A._isSubtype(universe, sBound, sEnv, tBound, tEnv) || !A._isSubtype(universe, tBound, tEnv, sBound, sEnv))
            return false;
        }
        return A._isFunctionSubtype(universe, s._primary, sEnv, t._primary, tEnv);
      }
      if (tKind === 12) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (t1)
          return false;
        return A._isFunctionSubtype(universe, s, sEnv, t, tEnv);
      }
      if (sKind === 9) {
        if (tKind !== 9)
          return false;
        return A._isInterfaceSubtype(universe, s, sEnv, t, tEnv);
      }
      if (t2 && tKind === 11)
        return A._isRecordSubtype(universe, s, sEnv, t, tEnv);
      return false;
    },
    _isFunctionSubtype(universe, s, sEnv, t, tEnv) {
      var sParameters, tParameters, sRequiredPositional, tRequiredPositional, sRequiredPositionalLength, tRequiredPositionalLength, requiredPositionalDelta, sOptionalPositional, tOptionalPositional, sOptionalPositionalLength, tOptionalPositionalLength, i, t1, sNamed, tNamed, sNamedLength, tNamedLength, sIndex, tIndex, tName, sName, sIsRequired;
      if (!A._isSubtype(universe, s._primary, sEnv, t._primary, tEnv))
        return false;
      sParameters = s._rest;
      tParameters = t._rest;
      sRequiredPositional = sParameters._requiredPositional;
      tRequiredPositional = tParameters._requiredPositional;
      sRequiredPositionalLength = sRequiredPositional.length;
      tRequiredPositionalLength = tRequiredPositional.length;
      if (sRequiredPositionalLength > tRequiredPositionalLength)
        return false;
      requiredPositionalDelta = tRequiredPositionalLength - sRequiredPositionalLength;
      sOptionalPositional = sParameters._optionalPositional;
      tOptionalPositional = tParameters._optionalPositional;
      sOptionalPositionalLength = sOptionalPositional.length;
      tOptionalPositionalLength = tOptionalPositional.length;
      if (sRequiredPositionalLength + sOptionalPositionalLength < tRequiredPositionalLength + tOptionalPositionalLength)
        return false;
      for (i = 0; i < sRequiredPositionalLength; ++i) {
        t1 = sRequiredPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < requiredPositionalDelta; ++i) {
        t1 = sOptionalPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[sRequiredPositionalLength + i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < tOptionalPositionalLength; ++i) {
        t1 = sOptionalPositional[requiredPositionalDelta + i];
        if (!A._isSubtype(universe, tOptionalPositional[i], tEnv, t1, sEnv))
          return false;
      }
      sNamed = sParameters._named;
      tNamed = tParameters._named;
      sNamedLength = sNamed.length;
      tNamedLength = tNamed.length;
      for (sIndex = 0, tIndex = 0; tIndex < tNamedLength; tIndex += 3) {
        tName = tNamed[tIndex];
        for (; true;) {
          if (sIndex >= sNamedLength)
            return false;
          sName = sNamed[sIndex];
          sIndex += 3;
          if (tName < sName)
            return false;
          sIsRequired = sNamed[sIndex - 2];
          if (sName < tName) {
            if (sIsRequired)
              return false;
            continue;
          }
          t1 = tNamed[tIndex + 1];
          if (sIsRequired && !t1)
            return false;
          t1 = sNamed[sIndex - 1];
          if (!A._isSubtype(universe, tNamed[tIndex + 2], tEnv, t1, sEnv))
            return false;
          break;
        }
      }
      for (; sIndex < sNamedLength;) {
        if (sNamed[sIndex + 1])
          return false;
        sIndex += 3;
      }
      return true;
    },
    _isInterfaceSubtype(universe, s, sEnv, t, tEnv) {
      var rule, recipes, $length, supertypeArgs, i, t1, t2,
        sName = s._primary,
        tName = t._primary;
      for (; sName !== tName;) {
        rule = universe.tR[sName];
        if (rule == null)
          return false;
        if (typeof rule == "string") {
          sName = rule;
          continue;
        }
        recipes = rule[tName];
        if (recipes == null)
          return false;
        $length = recipes.length;
        supertypeArgs = $length > 0 ? new Array($length) : init.typeUniverse.sEA;
        for (i = 0; i < $length; ++i)
          supertypeArgs[i] = A._Universe_evalInEnvironment(universe, s, recipes[i]);
        return A._areArgumentsSubtypes(universe, supertypeArgs, null, sEnv, t._rest, tEnv);
      }
      t1 = s._rest;
      t2 = t._rest;
      return A._areArgumentsSubtypes(universe, t1, null, sEnv, t2, tEnv);
    },
    _areArgumentsSubtypes(universe, sArgs, sVariances, sEnv, tArgs, tEnv) {
      var i, t1, t2,
        $length = sArgs.length;
      for (i = 0; i < $length; ++i) {
        t1 = sArgs[i];
        t2 = tArgs[i];
        if (!A._isSubtype(universe, t1, sEnv, t2, tEnv))
          return false;
      }
      return true;
    },
    _isRecordSubtype(universe, s, sEnv, t, tEnv) {
      var i,
        sFields = s._rest,
        tFields = t._rest,
        sCount = sFields.length;
      if (sCount !== tFields.length)
        return false;
      if (s._primary !== t._primary)
        return false;
      for (i = 0; i < sCount; ++i)
        if (!A._isSubtype(universe, sFields[i], sEnv, tFields[i], tEnv))
          return false;
      return true;
    },
    isNullable(t) {
      var t1,
        kind = t._kind;
      if (!(t === type$.Null || t === type$.JSNull))
        if (!A.isStrongTopType(t))
          if (kind !== 7)
            if (!(kind === 6 && A.isNullable(t._primary)))
              t1 = kind === 8 && A.isNullable(t._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    isTopType(t) {
      var t1;
      if (!A.isStrongTopType(t))
        if (!(t === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    isStrongTopType(t) {
      var kind = t._kind;
      return kind === 2 || kind === 3 || kind === 4 || kind === 5 || t === type$.nullable_Object;
    },
    _Utils_objectAssign(o, other) {
      var i, key,
        keys = Object.keys(other),
        $length = keys.length;
      for (i = 0; i < $length; ++i) {
        key = keys[i];
        o[key] = other[key];
      }
    },
    _Utils_newArrayOrEmpty($length) {
      return $length > 0 ? new Array($length) : init.typeUniverse.sEA;
    },
    Rti: function Rti(t0, t1) {
      var _ = this;
      _._as = t0;
      _._is = t1;
      _._cachedRuntimeType = _._specializedTestResource = _._precomputed1 = null;
      _._kind = 0;
      _._canonicalRecipe = _._bindCache = _._evalCache = _._rest = _._primary = null;
    },
    _FunctionParameters: function _FunctionParameters() {
      this._named = this._optionalPositional = this._requiredPositional = null;
    },
    _Type: function _Type(t0) {
      this._rti = t0;
    },
    _Error: function _Error() {
    },
    _TypeError: function _TypeError(t0) {
      this.__rti$_message = t0;
    },
    _AsyncRun__initializeScheduleImmediate() {
      var div, span, t1 = {};
      if (self.scheduleImmediate != null)
        return A.async__AsyncRun__scheduleImmediateJsOverride$closure();
      if (self.MutationObserver != null && self.document != null) {
        div = self.document.createElement("div");
        span = self.document.createElement("span");
        t1.storedCallback = null;
        new self.MutationObserver(A.convertDartClosureToJS(new A._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});
        return new A._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);
      } else if (self.setImmediate != null)
        return A.async__AsyncRun__scheduleImmediateWithSetImmediate$closure();
      return A.async__AsyncRun__scheduleImmediateWithTimer$closure();
    },
    _AsyncRun__scheduleImmediateJsOverride(callback) {
      self.scheduleImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateJsOverride_internalCallback(type$.void_Function._as(callback)), 0));
    },
    _AsyncRun__scheduleImmediateWithSetImmediate(callback) {
      self.setImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(type$.void_Function._as(callback)), 0));
    },
    _AsyncRun__scheduleImmediateWithTimer(callback) {
      type$.void_Function._as(callback);
      A._TimerImpl$(0, callback);
    },
    _TimerImpl$(milliseconds, callback) {
      var t1 = new A._TimerImpl();
      t1._TimerImpl$2(milliseconds, callback);
      return t1;
    },
    _makeAsyncAwaitCompleter($T) {
      return new A._AsyncAwaitCompleter(new A._Future($.Zone__current, $T._eval$1("_Future<0>")), $T._eval$1("_AsyncAwaitCompleter<0>"));
    },
    _asyncStartSync(bodyFunction, completer) {
      bodyFunction.call$2(0, null);
      completer.isSync = true;
      return completer._future;
    },
    _asyncAwait(object, bodyFunction) {
      A._awaitOnObject(object, bodyFunction);
    },
    _asyncReturn(object, completer) {
      completer.complete$1(0, object);
    },
    _asyncRethrow(object, completer) {
      completer.completeError$2(A.unwrapException(object), A.getTraceFromException(object));
    },
    _awaitOnObject(object, bodyFunction) {
      var t1, future,
        thenCallback = new A._awaitOnObject_closure(bodyFunction),
        errorCallback = new A._awaitOnObject_closure0(bodyFunction);
      if (object instanceof A._Future)
        object._thenAwait$1$2(thenCallback, errorCallback, type$.dynamic);
      else {
        t1 = type$.dynamic;
        if (object instanceof A._Future)
          object.then$1$2$onError(thenCallback, errorCallback, t1);
        else {
          future = new A._Future($.Zone__current, type$._Future_dynamic);
          future._state = 8;
          future._resultOrListeners = object;
          future._thenAwait$1$2(thenCallback, errorCallback, t1);
        }
      }
    },
    _wrapJsFunctionForAsync($function) {
      var $protected = function(fn, ERROR) {
        return function(errorCode, result) {
          while (true)
            try {
              fn(errorCode, result);
              break;
            } catch (error) {
              result = error;
              errorCode = ERROR;
            }
        };
      }($function, 1);
      return $.Zone__current.registerBinaryCallback$3$1(new A._wrapJsFunctionForAsync_closure($protected), type$.void, type$.int, type$.dynamic);
    },
    AsyncError$(error, stackTrace) {
      var t1 = A.checkNotNullable(error, "error", type$.Object);
      return new A.AsyncError(t1, stackTrace == null ? A.AsyncError_defaultStackTrace(error) : stackTrace);
    },
    AsyncError_defaultStackTrace(error) {
      var stackTrace;
      if (type$.Error._is(error)) {
        stackTrace = error.get$stackTrace();
        if (stackTrace != null)
          return stackTrace;
      }
      return B.C__StringStackTrace;
    },
    _Future__chainCoreFutureSync(source, target) {
      var t1, t2, listeners;
      for (t1 = type$._Future_dynamic; t2 = source._state, (t2 & 4) !== 0;)
        source = t1._as(source._resultOrListeners);
      if ((t2 & 24) !== 0) {
        listeners = target._removeListeners$0();
        target._cloneResult$1(source);
        A._Future__propagateToListeners(target, listeners);
      } else {
        listeners = type$.nullable__FutureListener_dynamic_dynamic._as(target._resultOrListeners);
        target._setChained$1(source);
        source._prependListeners$1(listeners);
      }
    },
    _Future__chainCoreFutureAsync(source, target) {
      var t2, t3, listeners, _box_0 = {},
        t1 = _box_0.source = source;
      for (t2 = type$._Future_dynamic; t3 = t1._state, (t3 & 4) !== 0; t1 = source) {
        source = t2._as(t1._resultOrListeners);
        _box_0.source = source;
      }
      if ((t3 & 24) === 0) {
        listeners = type$.nullable__FutureListener_dynamic_dynamic._as(target._resultOrListeners);
        target._setChained$1(t1);
        _box_0.source._prependListeners$1(listeners);
        return;
      }
      if ((t3 & 16) === 0 && target._resultOrListeners == null) {
        target._cloneResult$1(t1);
        return;
      }
      target._state ^= 2;
      A._rootScheduleMicrotask(null, null, target._zone, type$.void_Function._as(new A._Future__chainCoreFutureAsync_closure(_box_0, target)));
    },
    _Future__propagateToListeners(source, listeners) {
      var t2, t3, t4, _box_0, t5, t6, hasError, asyncError, nextListener, nextListener0, sourceResult, t7, zone, oldZone, result, current, _box_1 = {},
        t1 = _box_1.source = source;
      for (t2 = type$.AsyncError, t3 = type$.nullable__FutureListener_dynamic_dynamic, t4 = type$.Future_dynamic; true;) {
        _box_0 = {};
        t5 = t1._state;
        t6 = (t5 & 16) === 0;
        hasError = !t6;
        if (listeners == null) {
          if (hasError && (t5 & 1) === 0) {
            asyncError = t2._as(t1._resultOrListeners);
            A._rootHandleError(asyncError.error, asyncError.stackTrace);
          }
          return;
        }
        _box_0.listener = listeners;
        nextListener = listeners._nextListener;
        for (t1 = listeners; nextListener != null; t1 = nextListener, nextListener = nextListener0) {
          t1._nextListener = null;
          A._Future__propagateToListeners(_box_1.source, t1);
          _box_0.listener = nextListener;
          nextListener0 = nextListener._nextListener;
        }
        t5 = _box_1.source;
        sourceResult = t5._resultOrListeners;
        _box_0.listenerHasError = hasError;
        _box_0.listenerValueOrError = sourceResult;
        if (t6) {
          t7 = t1.state;
          t7 = (t7 & 1) !== 0 || (t7 & 15) === 8;
        } else
          t7 = true;
        if (t7) {
          zone = t1.result._zone;
          if (hasError) {
            t5 = t5._zone === zone;
            t5 = !(t5 || t5);
          } else
            t5 = false;
          if (t5) {
            t2._as(sourceResult);
            A._rootHandleError(sourceResult.error, sourceResult.stackTrace);
            return;
          }
          oldZone = $.Zone__current;
          if (oldZone !== zone)
            $.Zone__current = zone;
          else
            oldZone = null;
          t1 = t1.state;
          if ((t1 & 15) === 8)
            new A._Future__propagateToListeners_handleWhenCompleteCallback(_box_0, _box_1, hasError).call$0();
          else if (t6) {
            if ((t1 & 1) !== 0)
              new A._Future__propagateToListeners_handleValueCallback(_box_0, sourceResult).call$0();
          } else if ((t1 & 2) !== 0)
            new A._Future__propagateToListeners_handleError(_box_1, _box_0).call$0();
          if (oldZone != null)
            $.Zone__current = oldZone;
          t1 = _box_0.listenerValueOrError;
          if (t1 instanceof A._Future) {
            t5 = _box_0.listener.$ti;
            t5 = t5._eval$1("Future<2>")._is(t1) || !t5._rest[1]._is(t1);
          } else
            t5 = false;
          if (t5) {
            t4._as(t1);
            result = _box_0.listener.result;
            if ((t1._state & 24) !== 0) {
              current = t3._as(result._resultOrListeners);
              result._resultOrListeners = null;
              listeners = result._reverseListeners$1(current);
              result._state = t1._state & 30 | result._state & 1;
              result._resultOrListeners = t1._resultOrListeners;
              _box_1.source = t1;
              continue;
            } else
              A._Future__chainCoreFutureSync(t1, result);
            return;
          }
        }
        result = _box_0.listener.result;
        current = t3._as(result._resultOrListeners);
        result._resultOrListeners = null;
        listeners = result._reverseListeners$1(current);
        t1 = _box_0.listenerHasError;
        t5 = _box_0.listenerValueOrError;
        if (!t1) {
          result.$ti._precomputed1._as(t5);
          result._state = 8;
          result._resultOrListeners = t5;
        } else {
          t2._as(t5);
          result._state = result._state & 1 | 16;
          result._resultOrListeners = t5;
        }
        _box_1.source = result;
        t1 = result;
      }
    },
    _registerErrorHandler(errorHandler, zone) {
      var t1;
      if (type$.dynamic_Function_Object_StackTrace._is(errorHandler))
        return zone.registerBinaryCallback$3$1(errorHandler, type$.dynamic, type$.Object, type$.StackTrace);
      t1 = type$.dynamic_Function_Object;
      if (t1._is(errorHandler))
        return t1._as(errorHandler);
      throw A.wrapException(A.ArgumentError$value(errorHandler, "onError", string$.Error_));
    },
    _microtaskLoop() {
      var entry, next;
      for (entry = $._nextCallback; entry != null; entry = $._nextCallback) {
        $._lastPriorityCallback = null;
        next = entry.next;
        $._nextCallback = next;
        if (next == null)
          $._lastCallback = null;
        entry.callback.call$0();
      }
    },
    _startMicrotaskLoop() {
      $._isInCallbackLoop = true;
      try {
        A._microtaskLoop();
      } finally {
        $._lastPriorityCallback = null;
        $._isInCallbackLoop = false;
        if ($._nextCallback != null)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      }
    },
    _scheduleAsyncCallback(callback) {
      var newEntry = new A._AsyncCallbackEntry(callback),
        lastCallback = $._lastCallback;
      if (lastCallback == null) {
        $._nextCallback = $._lastCallback = newEntry;
        if (!$._isInCallbackLoop)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      } else
        $._lastCallback = lastCallback.next = newEntry;
    },
    _schedulePriorityAsyncCallback(callback) {
      var entry, lastPriorityCallback, next,
        t1 = $._nextCallback;
      if (t1 == null) {
        A._scheduleAsyncCallback(callback);
        $._lastPriorityCallback = $._lastCallback;
        return;
      }
      entry = new A._AsyncCallbackEntry(callback);
      lastPriorityCallback = $._lastPriorityCallback;
      if (lastPriorityCallback == null) {
        entry.next = t1;
        $._nextCallback = $._lastPriorityCallback = entry;
      } else {
        next = lastPriorityCallback.next;
        entry.next = next;
        $._lastPriorityCallback = lastPriorityCallback.next = entry;
        if (next == null)
          $._lastCallback = entry;
      }
    },
    scheduleMicrotask(callback) {
      var t1, _null = null,
        currentZone = $.Zone__current;
      if (B.C__RootZone === currentZone) {
        A._rootScheduleMicrotask(_null, _null, B.C__RootZone, callback);
        return;
      }
      t1 = false;
      if (t1) {
        A._rootScheduleMicrotask(_null, _null, currentZone, type$.void_Function._as(callback));
        return;
      }
      A._rootScheduleMicrotask(_null, _null, currentZone, type$.void_Function._as(currentZone.bindCallbackGuarded$1(callback)));
    },
    StreamIterator_StreamIterator(stream, $T) {
      A.checkNotNullable(stream, "stream", type$.Object);
      return new A._StreamIterator($T._eval$1("_StreamIterator<0>"));
    },
    _rootHandleError(error, stackTrace) {
      A._schedulePriorityAsyncCallback(new A._rootHandleError_closure(error, stackTrace));
    },
    _rootRun($self, $parent, zone, f, $R) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$0();
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$0();
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunUnary($self, $parent, zone, f, arg, $R, $T) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$1(arg);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$1(arg);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunBinary($self, $parent, zone, f, arg1, arg2, $R, T1, T2) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$2(arg1, arg2);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$2(arg1, arg2);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootScheduleMicrotask($self, $parent, zone, f) {
      type$.void_Function._as(f);
      if (B.C__RootZone !== zone)
        f = zone.bindCallbackGuarded$1(f);
      A._scheduleAsyncCallback(f);
    },
    _AsyncRun__initializeScheduleImmediate_internalCallback: function _AsyncRun__initializeScheduleImmediate_internalCallback(t0) {
      this._box_0 = t0;
    },
    _AsyncRun__initializeScheduleImmediate_closure: function _AsyncRun__initializeScheduleImmediate_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.div = t1;
      this.span = t2;
    },
    _AsyncRun__scheduleImmediateJsOverride_internalCallback: function _AsyncRun__scheduleImmediateJsOverride_internalCallback(t0) {
      this.callback = t0;
    },
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: function _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(t0) {
      this.callback = t0;
    },
    _TimerImpl: function _TimerImpl() {
    },
    _TimerImpl_internalCallback: function _TimerImpl_internalCallback(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    _AsyncAwaitCompleter: function _AsyncAwaitCompleter(t0, t1) {
      this._future = t0;
      this.isSync = false;
      this.$ti = t1;
    },
    _awaitOnObject_closure: function _awaitOnObject_closure(t0) {
      this.bodyFunction = t0;
    },
    _awaitOnObject_closure0: function _awaitOnObject_closure0(t0) {
      this.bodyFunction = t0;
    },
    _wrapJsFunctionForAsync_closure: function _wrapJsFunctionForAsync_closure(t0) {
      this.$protected = t0;
    },
    AsyncError: function AsyncError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _Completer: function _Completer() {
    },
    _AsyncCompleter: function _AsyncCompleter(t0, t1) {
      this.future = t0;
      this.$ti = t1;
    },
    _FutureListener: function _FutureListener(t0, t1, t2, t3, t4) {
      var _ = this;
      _._nextListener = null;
      _.result = t0;
      _.state = t1;
      _.callback = t2;
      _.errorCallback = t3;
      _.$ti = t4;
    },
    _Future: function _Future(t0, t1) {
      var _ = this;
      _._state = 0;
      _._zone = t0;
      _._resultOrListeners = null;
      _.$ti = t1;
    },
    _Future__addListener_closure: function _Future__addListener_closure(t0, t1) {
      this.$this = t0;
      this.listener = t1;
    },
    _Future__prependListeners_closure: function _Future__prependListeners_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _Future__chainForeignFuture_closure: function _Future__chainForeignFuture_closure(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure0: function _Future__chainForeignFuture_closure0(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure1: function _Future__chainForeignFuture_closure1(t0, t1, t2) {
      this.$this = t0;
      this.e = t1;
      this.s = t2;
    },
    _Future__chainCoreFutureAsync_closure: function _Future__chainCoreFutureAsync_closure(t0, t1) {
      this._box_0 = t0;
      this.target = t1;
    },
    _Future__asyncCompleteWithValue_closure: function _Future__asyncCompleteWithValue_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__asyncCompleteError_closure: function _Future__asyncCompleteError_closure(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback: function _Future__propagateToListeners_handleWhenCompleteCallback(t0, t1, t2) {
      this._box_0 = t0;
      this._box_1 = t1;
      this.hasError = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure: function _Future__propagateToListeners_handleWhenCompleteCallback_closure(t0) {
      this.originalSource = t0;
    },
    _Future__propagateToListeners_handleValueCallback: function _Future__propagateToListeners_handleValueCallback(t0, t1) {
      this._box_0 = t0;
      this.sourceResult = t1;
    },
    _Future__propagateToListeners_handleError: function _Future__propagateToListeners_handleError(t0, t1) {
      this._box_1 = t0;
      this._box_0 = t1;
    },
    _AsyncCallbackEntry: function _AsyncCallbackEntry(t0) {
      this.callback = t0;
      this.next = null;
    },
    Stream: function Stream() {
    },
    Stream_length_closure: function Stream_length_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Stream_length_closure0: function Stream_length_closure0(t0, t1) {
      this._box_0 = t0;
      this.future = t1;
    },
    _StreamIterator: function _StreamIterator(t0) {
      this.$ti = t0;
    },
    _Zone: function _Zone() {
    },
    _rootHandleError_closure: function _rootHandleError_closure(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _RootZone: function _RootZone() {
    },
    _RootZone_bindCallbackGuarded_closure: function _RootZone_bindCallbackGuarded_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    _RootZone_bindUnaryCallbackGuarded_closure: function _RootZone_bindUnaryCallbackGuarded_closure(t0, t1, t2) {
      this.$this = t0;
      this.f = t1;
      this.T = t2;
    },
    LinkedHashMap_LinkedHashMap($K, $V) {
      return new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    LinkedHashMap_LinkedHashMap$_literal(keyValuePairs, $K, $V) {
      return $K._eval$1("@<0>")._bind$1($V)._eval$1("LinkedHashMap<1,2>")._as(A.fillLiteralMap(keyValuePairs, new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"))));
    },
    LinkedHashMap_LinkedHashMap$_empty($K, $V) {
      return new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    LinkedHashMap_LinkedHashMap$from(other, $K, $V) {
      var result = A.LinkedHashMap_LinkedHashMap($K, $V);
      other.forEach$1(0, new A.LinkedHashMap_LinkedHashMap$from_closure(result, $K, $V));
      return result;
    },
    MapBase_mapToString(m) {
      var result, t1 = {};
      if (A.isToStringVisiting(m))
        return "{...}";
      result = new A.StringBuffer("");
      try {
        B.JSArray_methods.add$1($.toStringVisiting, m);
        result._contents += "{";
        t1.first = true;
        m.forEach$1(0, new A.MapBase_mapToString_closure(t1, result));
        result._contents += "}";
      } finally {
        if (0 >= $.toStringVisiting.length)
          return A.ioore($.toStringVisiting, -1);
        $.toStringVisiting.pop();
      }
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    LinkedHashMap_LinkedHashMap$from_closure: function LinkedHashMap_LinkedHashMap$from_closure(t0, t1, t2) {
      this.result = t0;
      this.K = t1;
      this.V = t2;
    },
    ListBase: function ListBase() {
    },
    MapBase: function MapBase() {
    },
    MapBase_mapToString_closure: function MapBase_mapToString_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    int_parse(source) {
      var value = A.Primitives_parseInt(source, null);
      if (value != null)
        return value;
      throw A.wrapException(A.FormatException$(source, null));
    },
    double_parse(source) {
      var value = A.Primitives_parseDouble(source);
      if (value != null)
        return value;
      throw A.wrapException(A.FormatException$("Invalid double", source));
    },
    Error__throw(error, stackTrace) {
      error = A.wrapException(error);
      if (error == null)
        error = type$.Object._as(error);
      error.stack = stackTrace.toString$0(0);
      throw error;
      throw A.wrapException("unreachable");
    },
    List_List$filled($length, fill, growable, $E) {
      var i,
        result = growable ? J.JSArray_JSArray$growable($length, $E) : J.JSArray_JSArray$fixed($length, $E);
      if ($length !== 0 && fill != null)
        for (i = 0; i < result.length; ++i)
          result[i] = fill;
      return result;
    },
    List_List$from(elements, $E) {
      var t1, t2, t3,
        list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = elements.$ti, t2 = new A.ListIterator(elements, elements.get$length(elements), t1._eval$1("ListIterator<ListIterable.E>")), t1 = t1._eval$1("ListIterable.E"); t2.moveNext$0();) {
        t3 = t2.__internal$_current;
        B.JSArray_methods.add$1(list, $E._as(t3 == null ? t1._as(t3) : t3));
      }
      return list;
    },
    StringBuffer__writeAll(string, objects, separator) {
      var iterator = J.get$iterator$ax(objects);
      if (!iterator.moveNext$0())
        return string;
      if (separator.length === 0) {
        do
          string += A.S(iterator.get$current());
        while (iterator.moveNext$0());
      } else {
        string += A.S(iterator.get$current());
        for (; iterator.moveNext$0();)
          string = string + separator + A.S(iterator.get$current());
      }
      return string;
    },
    Error_safeToString(object) {
      if (typeof object == "number" || A._isBool(object) || object == null)
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      return A.Primitives_safeToString(object);
    },
    Error_throwWithStackTrace(error, stackTrace) {
      A.checkNotNullable(error, "error", type$.Object);
      A.checkNotNullable(stackTrace, "stackTrace", type$.StackTrace);
      A.Error__throw(error, stackTrace);
    },
    AssertionError$(message) {
      return new A.AssertionError(message);
    },
    ArgumentError$(message, $name) {
      return new A.ArgumentError(false, null, $name, message);
    },
    ArgumentError$value(value, $name, message) {
      return new A.ArgumentError(true, value, $name, message);
    },
    RangeError$value(value, $name) {
      return new A.RangeError(null, null, true, value, $name, "Value not in range");
    },
    RangeError$range(invalidValue, minValue, maxValue, $name, message) {
      return new A.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
    },
    RangeError_checkValidRange(start, end, $length) {
      if (0 > start || start > $length)
        throw A.wrapException(A.RangeError$range(start, 0, $length, "start", null));
      if (end != null) {
        if (start > end || end > $length)
          throw A.wrapException(A.RangeError$range(end, start, $length, "end", null));
        return end;
      }
      return $length;
    },
    RangeError_checkNotNegative(value, $name) {
      if (value < 0)
        throw A.wrapException(A.RangeError$range(value, 0, null, $name, null));
      return value;
    },
    IndexError$withLength(invalidValue, $length, indexable, $name) {
      return new A.IndexError($length, true, invalidValue, $name, "Index out of range");
    },
    UnsupportedError$(message) {
      return new A.UnsupportedError(message);
    },
    UnimplementedError$(message) {
      return new A.UnimplementedError(message);
    },
    StateError$(message) {
      return new A.StateError(message);
    },
    ConcurrentModificationError$(modifiedObject) {
      return new A.ConcurrentModificationError(modifiedObject);
    },
    FormatException$(message, source) {
      return new A.FormatException(message, source);
    },
    Iterable_iterableToShortString(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      if (A.isToStringVisiting(iterable)) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return leftDelimiter + "..." + rightDelimiter;
      }
      parts = A._setArrayType([], type$.JSArray_String);
      B.JSArray_methods.add$1($.toStringVisiting, iterable);
      try {
        A._iterablePartsToStrings(iterable, parts);
      } finally {
        if (0 >= $.toStringVisiting.length)
          return A.ioore($.toStringVisiting, -1);
        $.toStringVisiting.pop();
      }
      t1 = A.StringBuffer__writeAll(leftDelimiter, type$.Iterable_dynamic._as(parts), ", ") + rightDelimiter;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    Iterable_iterableToFullString(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1;
      if (A.isToStringVisiting(iterable))
        return leftDelimiter + "..." + rightDelimiter;
      buffer = new A.StringBuffer(leftDelimiter);
      B.JSArray_methods.add$1($.toStringVisiting, iterable);
      try {
        t1 = buffer;
        t1._contents = A.StringBuffer__writeAll(t1._contents, iterable, ", ");
      } finally {
        if (0 >= $.toStringVisiting.length)
          return A.ioore($.toStringVisiting, -1);
        $.toStringVisiting.pop();
      }
      buffer._contents += rightDelimiter;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _iterablePartsToStrings(iterable, parts) {
      var next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision,
        it = iterable.get$iterator(iterable),
        $length = 0, count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (!it.moveNext$0())
          return;
        next = A.S(it.get$current());
        B.JSArray_methods.add$1(parts, next);
        $length += next.length + 2;
        ++count;
      }
      if (!it.moveNext$0()) {
        if (count <= 5)
          return;
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        ultimateString = parts.pop();
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        penultimateString = parts.pop();
      } else {
        penultimate = it.get$current();
        ++count;
        if (!it.moveNext$0()) {
          if (count <= 4) {
            B.JSArray_methods.add$1(parts, A.S(penultimate));
            return;
          }
          ultimateString = A.S(penultimate);
          if (0 >= parts.length)
            return A.ioore(parts, -1);
          penultimateString = parts.pop();
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current();
          ++count;
          for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current();
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                if (0 >= parts.length)
                  return A.ioore(parts, -1);
                $length -= parts.pop().length + 2;
                --count;
              }
              B.JSArray_methods.add$1(parts, "...");
              return;
            }
          }
          penultimateString = A.S(penultimate);
          ultimateString = A.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      if (count > parts.length + 2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && parts.length > 3))
          break;
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        $length -= parts.pop().length + 2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        B.JSArray_methods.add$1(parts, elision);
      B.JSArray_methods.add$1(parts, penultimateString);
      B.JSArray_methods.add$1(parts, ultimateString);
    },
    Object_hash(object1, object2, object3, object4) {
      var t1 = A.SystemHash_hash4(B.JSNumber_methods.get$hashCode(object1), B.JSNumber_methods.get$hashCode(object2), B.JSNumber_methods.get$hashCode(object3), B.JSNumber_methods.get$hashCode(object4), $.$get$_hashSeed());
      return t1;
    },
    Error: function Error() {
    },
    AssertionError: function AssertionError(t0) {
      this.message = t0;
    },
    TypeError: function TypeError() {
    },
    ArgumentError: function ArgumentError(t0, t1, t2, t3) {
      var _ = this;
      _._hasValue = t0;
      _.invalidValue = t1;
      _.name = t2;
      _.message = t3;
    },
    RangeError: function RangeError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.start = t0;
      _.end = t1;
      _._hasValue = t2;
      _.invalidValue = t3;
      _.name = t4;
      _.message = t5;
    },
    IndexError: function IndexError(t0, t1, t2, t3, t4) {
      var _ = this;
      _.length = t0;
      _._hasValue = t1;
      _.invalidValue = t2;
      _.name = t3;
      _.message = t4;
    },
    UnsupportedError: function UnsupportedError(t0) {
      this.message = t0;
    },
    UnimplementedError: function UnimplementedError(t0) {
      this.message = t0;
    },
    StateError: function StateError(t0) {
      this.message = t0;
    },
    ConcurrentModificationError: function ConcurrentModificationError(t0) {
      this.modifiedObject = t0;
    },
    StackOverflowError: function StackOverflowError() {
    },
    _Exception: function _Exception(t0) {
      this.message = t0;
    },
    FormatException: function FormatException(t0, t1) {
      this.message = t0;
      this.source = t1;
    },
    Iterable: function Iterable() {
    },
    Null: function Null() {
    },
    Object: function Object() {
    },
    _StringStackTrace: function _StringStackTrace() {
    },
    StringBuffer: function StringBuffer(t0) {
      this._contents = t0;
    },
    InputElement_InputElement(type) {
      var exception,
        t1 = document.createElement("input"),
        e = type$.InputElement._as(t1);
      if (type != null)
        try {
          J.set$type$x(e, type);
        } catch (exception) {
        }
      return e;
    },
    _EventStreamSubscription$(_target, _eventType, onData, _useCapture, $T) {
      var t1 = A._wrapZone(new A._EventStreamSubscription_closure(onData), type$.Event);
      if (t1 != null && true)
        J.addEventListener$3$x(_target, _eventType, t1, false);
      return new A._EventStreamSubscription(_target, _eventType, t1, false, $T._eval$1("_EventStreamSubscription<0>"));
    },
    _convertNativeToDart_EventTarget(e) {
      var $window,
        t1 = "postMessage" in e;
      t1.toString;
      if (t1) {
        $window = A._DOMWindowCrossFrame__createSafe(e);
        return $window;
      } else
        return type$.nullable_EventTarget._as(e);
    },
    _DOMWindowCrossFrame__createSafe(w) {
      var t1 = window;
      t1.toString;
      if (w === t1)
        return type$.WindowBase._as(w);
      else
        return new A._DOMWindowCrossFrame();
    },
    _wrapZone(callback, $T) {
      var t1 = $.Zone__current;
      if (t1 === B.C__RootZone)
        return callback;
      return t1.bindUnaryCallbackGuarded$1$1(callback, $T);
    },
    HtmlElement: function HtmlElement() {
    },
    AnchorElement: function AnchorElement() {
    },
    AreaElement: function AreaElement() {
    },
    Blob: function Blob() {
    },
    ButtonElement: function ButtonElement() {
    },
    CharacterData: function CharacterData() {
    },
    CssStyleDeclaration: function CssStyleDeclaration() {
    },
    CssStyleDeclarationBase: function CssStyleDeclarationBase() {
    },
    DataElement: function DataElement() {
    },
    DivElement: function DivElement() {
    },
    DomException: function DomException() {
    },
    DomRectReadOnly: function DomRectReadOnly() {
    },
    Element: function Element() {
    },
    Event: function Event() {
    },
    EventTarget: function EventTarget() {
    },
    File: function File() {
    },
    FileList: function FileList() {
    },
    FormElement: function FormElement() {
    },
    HtmlCollection: function HtmlCollection() {
    },
    ImageElement: function ImageElement() {
    },
    InputElement: function InputElement() {
    },
    KeyboardEvent: function KeyboardEvent() {
    },
    LIElement: function LIElement() {
    },
    Location: function Location() {
    },
    MeterElement: function MeterElement() {
    },
    MouseEvent: function MouseEvent() {
    },
    Node: function Node() {
    },
    NodeList: function NodeList() {
    },
    OptionElement: function OptionElement() {
    },
    OutputElement: function OutputElement() {
    },
    ParamElement: function ParamElement() {
    },
    ProgressElement: function ProgressElement() {
    },
    SelectElement: function SelectElement() {
    },
    TableCellElement: function TableCellElement() {
    },
    TableElement: function TableElement() {
    },
    TableRowElement: function TableRowElement() {
    },
    TextAreaElement: function TextAreaElement() {
    },
    Touch: function Touch() {
    },
    TouchEvent: function TouchEvent() {
    },
    TouchList: function TouchList() {
    },
    UIEvent: function UIEvent() {
    },
    Window: function Window() {
    },
    _DomRect: function _DomRect() {
    },
    _NamedNodeMap: function _NamedNodeMap() {
    },
    EventStreamProvider: function EventStreamProvider(t0, t1) {
      this._eventType = t0;
      this.$ti = t1;
    },
    _EventStream: function _EventStream(t0, t1, t2, t3) {
      var _ = this;
      _._target = t0;
      _._eventType = t1;
      _._useCapture = t2;
      _.$ti = t3;
    },
    _ElementEventStreamImpl: function _ElementEventStreamImpl(t0, t1, t2, t3) {
      var _ = this;
      _._target = t0;
      _._eventType = t1;
      _._useCapture = t2;
      _.$ti = t3;
    },
    _EventStreamSubscription: function _EventStreamSubscription(t0, t1, t2, t3, t4) {
      var _ = this;
      _._target = t0;
      _._eventType = t1;
      _._onData = t2;
      _._useCapture = t3;
      _.$ti = t4;
    },
    _EventStreamSubscription_closure: function _EventStreamSubscription_closure(t0) {
      this.onData = t0;
    },
    ImmutableListMixin: function ImmutableListMixin() {
    },
    _WrappedList: function _WrappedList(t0, t1) {
      this._list = t0;
      this.$ti = t1;
    },
    _WrappedIterator: function _WrappedIterator(t0, t1) {
      this._iterator = t0;
      this.$ti = t1;
    },
    FixedSizeListIterator: function FixedSizeListIterator(t0, t1, t2) {
      var _ = this;
      _._array = t0;
      _._html$_length = t1;
      _._position = -1;
      _._html$_current = null;
      _.$ti = t2;
    },
    _DOMWindowCrossFrame: function _DOMWindowCrossFrame() {
    },
    _TrustedHtmlTreeSanitizer: function _TrustedHtmlTreeSanitizer() {
    },
    _CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase: function _CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase() {
    },
    _FileList_JavaScriptObject_ListMixin: function _FileList_JavaScriptObject_ListMixin() {
    },
    _FileList_JavaScriptObject_ListMixin_ImmutableListMixin: function _FileList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _HtmlCollection_JavaScriptObject_ListMixin: function _HtmlCollection_JavaScriptObject_ListMixin() {
    },
    _HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin: function _HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _NodeList_JavaScriptObject_ListMixin: function _NodeList_JavaScriptObject_ListMixin() {
    },
    _NodeList_JavaScriptObject_ListMixin_ImmutableListMixin: function _NodeList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _TouchList_JavaScriptObject_ListMixin: function _TouchList_JavaScriptObject_ListMixin() {
    },
    _TouchList_JavaScriptObject_ListMixin_ImmutableListMixin: function _TouchList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    __NamedNodeMap_JavaScriptObject_ListMixin: function __NamedNodeMap_JavaScriptObject_ListMixin() {
    },
    __NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin: function __NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    Point: function Point(t0, t1, t2) {
      this.x = t0;
      this.y = t1;
      this.$ti = t2;
    },
    _RectangleBase: function _RectangleBase() {
    },
    Rectangle: function Rectangle(t0, t1, t2, t3, t4) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.width = t2;
      _.height = t3;
      _.$ti = t4;
    },
    BaseDialog: function BaseDialog() {
    },
    UserInput: function UserInput(t0, t1) {
      this._buttonCode = t0;
      this.fields = t1;
    },
    ActButton$() {
      var t2,
        t1 = new A.ActButton();
      if ($.ActButton_but_attr == null) {
        t2 = type$.String;
        $.ActButton_but_attr = A.LinkedHashMap_LinkedHashMap$from($.$get$ActButton_ATTR_BUTTONS(), t2, t2);
      }
      t2 = document.createElement("button");
      t2.toString;
      t1.__ActButton_but_A = t2;
      t1.setButtonStyle$0();
      return t1;
    },
    ActButton_setAttr(myAttr) {
      var t1, t2, t3, t4;
      if ($.ActButton_but_attr == null) {
        t1 = type$.String;
        $.ActButton_but_attr = A.LinkedHashMap_LinkedHashMap$from($.$get$ActButton_ATTR_BUTTONS(), t1, t1);
      }
      for (t1 = A.LinkedHashMapKeyIterator$(myAttr, myAttr._modifications, A._instanceType(myAttr)._precomputed1); t1.moveNext$0();) {
        t2 = t1.__js_helper$_current;
        t3 = $.ActButton_but_attr;
        t3.toString;
        t4 = myAttr.$index(0, t2);
        t4.toString;
        t3.$indexSet(0, t2, t4);
      }
    },
    ActButton: function ActButton() {
      this.__ActButton_but_A = $;
    },
    ActButton_setButtonStyle_closure: function ActButton_setButtonStyle_closure(t0) {
      this.$this = t0;
    },
    ActButton_setButtonStyle_closure0: function ActButton_setButtonStyle_closure0(t0) {
      this.$this = t0;
    },
    ActButton_setButtonStyle_closure1: function ActButton_setButtonStyle_closure1(t0) {
      this.$this = t0;
    },
    ActButton_setButtonStyle_closure2: function ActButton_setButtonStyle_closure2(t0) {
      this.$this = t0;
    },
    FileSelectionDialog$(htmlInfoText, fileSelectionCallback) {
      var t1 = new A.FileSelectionDialog(null);
      t1.__BaseDialog_isModal_A = true;
      t1.createShowDia$0();
      t1.FileSelectionDialog$2(htmlInfoText, fileSelectionCallback);
      return t1;
    },
    FileSelectionDialog: function FileSelectionDialog(t0) {
      var _ = this;
      _.__BaseDialog_dia_A = $;
      _.diaContainer = null;
      _.closeCallback = t0;
      _.__BaseDialog_isModal_A = $;
      _.isopen = false;
    },
    FileSelectionDialog_closure: function FileSelectionDialog_closure(t0, t1) {
      this.$this = t0;
      this.fileSelectionCallback = t1;
    },
    FileSelectionDialog_closure0: function FileSelectionDialog_closure0(t0, t1, t2) {
      this.$this = t0;
      this.fileSelectionCallback = t1;
      this.inputBut = t2;
    },
    FileSelectionDialog_closure1: function FileSelectionDialog_closure1(t0) {
      this.$this = t0;
    },
    InputDialog$(buttontype, htmlTitleText, textLabels, comboInfo, defaultInputTexts, widths, isChecked, closeCallback, alternateRowColor, buttonLabels) {
      var t1 = document.createElement("table");
      t1.toString;
      t1 = new A.InputDialog(t1, A._setArrayType([], type$.JSArray_nullable_ActButton), closeCallback);
      t1.__BaseDialog_isModal_A = true;
      t1.createShowDia$0();
      t1.InputDialog$10(buttontype, htmlTitleText, textLabels, comboInfo, defaultInputTexts, widths, isChecked, closeCallback, alternateRowColor, buttonLabels);
      return t1;
    },
    InputDialog_show(buttontype, htmlTitleText, inputTextLabelInfo, comboInfo, defaultInputTexts, sizes, isChecked, alternateRowColor, buttonLabels) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.UserInput),
        $async$returnValue, t1;
      var $async$InputDialog_show = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = new A._Future($.Zone__current, type$._Future_UserInput);
              A.InputDialog$(buttontype, htmlTitleText, inputTextLabelInfo, comboInfo, defaultInputTexts, sizes, isChecked, new A.InputDialog_show_closeCallback(new A._AsyncCompleter(t1, type$._AsyncCompleter_UserInput)), alternateRowColor, buttonLabels);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$InputDialog_show, $async$completer);
    },
    InputDialog_show2D(buttontype, htmlTitleText, inputTextLabelInfo, comboInfoND, defaultInputTextsND, sizes, isChecked, alternateRowColor, buttonLabels) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.UserInput),
        $async$returnValue, t1, t2, t3;
      var $async$InputDialog_show2D = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = new A._Future($.Zone__current, type$._Future_UserInput);
              t2 = new A.InputDialog_show2D_closeCallback(new A._AsyncCompleter(t1, type$._AsyncCompleter_UserInput));
              t3 = document.createElement("table");
              t3.toString;
              t3 = new A.InputDialog(t3, A._setArrayType([], type$.JSArray_nullable_ActButton), t2);
              t3.__BaseDialog_isModal_A = true;
              t3.createShowDia$0();
              t3.InputDialog$twoD$10(buttontype, htmlTitleText, inputTextLabelInfo, comboInfoND, defaultInputTextsND, sizes, isChecked, t2, false, buttonLabels);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$InputDialog_show2D, $async$completer);
    },
    ConfirmDialog_show(htmlTitleText, buttonLabels) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.UserInput),
        $async$returnValue;
      var $async$ConfirmDialog_show = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = A.InputDialog_show(null, htmlTitleText, null, null, null, null, null, false, buttonLabels);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$ConfirmDialog_show, $async$completer);
    },
    InfoDialog$(htmlInfoText, closeCallback) {
      var _null = null,
        t1 = A._setArrayType([], type$.JSArray_String),
        t2 = document.createElement("table");
      t2.toString;
      t2 = new A.InfoDialog(t2, A._setArrayType([], type$.JSArray_nullable_ActButton), closeCallback);
      t2.__BaseDialog_isModal_A = true;
      t2.createShowDia$0();
      t2.InputDialog$10(_null, htmlInfoText, _null, _null, _null, _null, _null, closeCallback, false, t1);
      return t2;
    },
    InfoDialog_show(htmlInfoText) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.UserInput),
        $async$returnValue, t1;
      var $async$InfoDialog_show = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = new A._Future($.Zone__current, type$._Future_UserInput);
              A.InfoDialog$(htmlInfoText, new A.InfoDialog_show_closeCallback(new A._AsyncCompleter(t1, type$._AsyncCompleter_UserInput)));
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$InfoDialog_show, $async$completer);
    },
    Info_show(htmlInfoText) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.UserInput),
        $async$returnValue;
      var $async$Info_show = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = A.InfoDialog_show(htmlInfoText);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$Info_show, $async$completer);
    },
    Info_get(buttontype, htmlTitleText, textLabels, comboInfo, defaultInputTexts, widths, isChecked, alternateRowColor, buttonLabels) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.UserInput),
        $async$returnValue;
      var $async$Info_get = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = A.InputDialog_show(buttontype, htmlTitleText, textLabels, comboInfo, defaultInputTexts, widths, isChecked, alternateRowColor, buttonLabels);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$Info_get, $async$completer);
    },
    Info_get2D(buttontype, htmlTitleText, textLabels, comboInfoND, defaultInputTextsND, widths, isChecked, alternateRowColor, buttonLabels) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.UserInput),
        $async$returnValue;
      var $async$Info_get2D = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = A.InputDialog_show2D(buttontype, htmlTitleText, textLabels, comboInfoND, defaultInputTextsND, widths, isChecked, false, buttonLabels);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$Info_get2D, $async$completer);
    },
    Info_confirm(htmlInfoText, buttonLabels) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.UserInput),
        $async$returnValue;
      var $async$Info_confirm = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = A.ConfirmDialog_show(htmlInfoText, buttonLabels);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$Info_confirm, $async$completer);
    },
    InputDialog: function InputDialog(t0, t1, t2) {
      var _ = this;
      _.popup = null;
      _.diaTable = t0;
      _.redcross_left = false;
      _.actButs = t1;
      _.__BaseDialog_dia_A = $;
      _.diaContainer = null;
      _.closeCallback = t2;
      _.__BaseDialog_isModal_A = $;
      _.isopen = false;
    },
    InputDialog_init_closure: function InputDialog_init_closure(t0, t1, t2) {
      this._box_1 = t0;
      this.$this = t1;
      this.delIconSize = t2;
    },
    InputDialog_init_addEmptyTableRow: function InputDialog_init_addEmptyTableRow(t0, t1) {
      this._box_1 = t0;
      this.$this = t1;
    },
    InputDialog_init_getResults: function InputDialog_init_getResults(t0) {
      this._box_1 = t0;
    },
    InputDialog_init_executeButton: function InputDialog_init_executeButton(t0, t1) {
      this.$this = t0;
      this.getResults = t1;
    },
    InputDialog_init_appendTextInputField: function InputDialog_init_appendTextInputField(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._box_1 = t0;
      _.$this = t1;
      _.sizes = t2;
      _.i = t3;
      _.textfontSize = t4;
      _.attr = t5;
      _.executeButton = t6;
    },
    InputDialog_init_appendTextInputField_closure: function InputDialog_init_appendTextInputField_closure(t0, t1, t2) {
      this._box_1 = t0;
      this.$this = t1;
      this.i = t2;
    },
    InputDialog_init_appendTextInputField_closure0: function InputDialog_init_appendTextInputField_closure0(t0) {
      this.executeButton = t0;
    },
    InputDialog_init_appendComboBox: function InputDialog_init_appendComboBox(t0, t1, t2, t3) {
      var _ = this;
      _._box_1 = t0;
      _.$this = t1;
      _.i = t2;
      _.textfontSize = t3;
    },
    InputDialog_init_appendComboBox_closure: function InputDialog_init_appendComboBox_closure(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._box_1 = t0;
      _._box_0 = t1;
      _.$this = t2;
      _.i = t3;
      _.comboInfo = t4;
      _.textInFields = t5;
    },
    InputDialog_init_appendComboBox__closure: function InputDialog_init_appendComboBox__closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _._box_0 = t0;
      _._box_1 = t1;
      _.comboInfo = t2;
      _.i = t3;
      _.textInFields = t4;
    },
    InputDialog_init_appendComboBox_closure0: function InputDialog_init_appendComboBox_closure0() {
    },
    InputDialog_init_closure0: function InputDialog_init_closure0(t0, t1) {
      this.executeButton = t0;
      this.i = t1;
    },
    InputDialog_init_closure1: function InputDialog_init_closure1(t0) {
      this.executeButton = t0;
    },
    InputDialog_show_closeCallback: function InputDialog_show_closeCallback(t0) {
      this.cpl = t0;
    },
    InputDialog_show2D_closeCallback: function InputDialog_show2D_closeCallback(t0) {
      this.cpl = t0;
    },
    InfoDialog: function InfoDialog(t0, t1, t2) {
      var _ = this;
      _.popup = null;
      _.diaTable = t0;
      _.redcross_left = false;
      _.actButs = t1;
      _.__BaseDialog_dia_A = $;
      _.diaContainer = null;
      _.closeCallback = t2;
      _.__BaseDialog_isModal_A = $;
      _.isopen = false;
    },
    InfoDialog_show_closeCallback: function InfoDialog_show_closeCallback(t0) {
      this.cpl = t0;
    },
    IconPanel$($parent, id, iconPath, iconNames, getIconCallbacks, closeCallback, x, y, panelWidth, iconSize, ncols, preventDefault) {
      var t1 = document.createElement("table");
      t1.toString;
      t1 = new A.IconPanel(t1, closeCallback);
      t1.__BaseDialog_isModal_A = false;
      t1.createShowDia$0();
      t1.IconPanel$12($parent, id, iconPath, iconNames, getIconCallbacks, closeCallback, x, y, panelWidth, iconSize, ncols, true, {});
      return t1;
    },
    IconPanel: function IconPanel(t0, t1) {
      var _ = this;
      _.diaTable = t0;
      _._lastTouchPoints = null;
      _.__BaseDialog_dia_A = _.__IconPanel__iconStyle_A = $;
      _.diaContainer = null;
      _.closeCallback = t1;
      _.__BaseDialog_isModal_A = $;
      _.isopen = false;
    },
    IconPanel_closure: function IconPanel_closure(t0) {
      this.preventDefault = t0;
    },
    IconPanel_handleTouchStart: function IconPanel_handleTouchStart(t0) {
      this.$this = t0;
    },
    IconPanel_executIconFunction: function IconPanel_executIconFunction(t0, t1, t2) {
      this._box_0 = t0;
      this.getIconCallbacks = t1;
      this.iconNames = t2;
    },
    IconPanel_handleTouchEnd: function IconPanel_handleTouchEnd(t0, t1) {
      this.$this = t0;
      this.executIconFunction = t1;
    },
    IconPanel_closure0: function IconPanel_closure0(t0, t1, t2) {
      this.iconCells = t0;
      this.k = t1;
      this.attr = t2;
    },
    IconPanel_closure1: function IconPanel_closure1(t0, t1, t2) {
      this.iconCells = t0;
      this.k = t1;
      this.attr = t2;
    },
    IconPanel_closure2: function IconPanel_closure2(t0) {
      this.handleTouchStart = t0;
    },
    IconPanel_closure3: function IconPanel_closure3(t0) {
      this.handleTouchEnd = t0;
    },
    IconPanel_closure4: function IconPanel_closure4(t0) {
      this.executIconFunction = t0;
    },
    PopupMenu$($parent, id, htmlItemTexts, buttontypes, isChecked, popupCallback, x, y, preventDefault) {
      var t1 = document.createElement("table");
      t1.toString;
      t1 = new A.PopupMenu(t1, popupCallback);
      t1.__BaseDialog_isModal_A = false;
      t1.createShowDia$0();
      t1.PopupMenu$9($parent, id, htmlItemTexts, buttontypes, isChecked, popupCallback, x, y, preventDefault, {});
      return t1;
    },
    PopupMenu_show($parent, id, htmlItemTexts, buttontypes, isChecked, x, y, preventDefault) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.UserInput),
        $async$returnValue, t1;
      var $async$PopupMenu_show = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = new A._Future($.Zone__current, type$._Future_UserInput);
              A.PopupMenu$($parent, id, htmlItemTexts, buttontypes, isChecked, new A.PopupMenu_show_popupCallback(new A._AsyncCompleter(t1, type$._AsyncCompleter_UserInput)), x, y, true);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$PopupMenu_show, $async$completer);
    },
    PopupMenu: function PopupMenu(t0, t1) {
      var _ = this;
      _.diaTable = t0;
      _.lastTouchPoints = null;
      _.__BaseDialog_dia_A = $;
      _.diaContainer = null;
      _.closeCallback = t1;
      _.__BaseDialog_isModal_A = $;
      _.isopen = false;
    },
    PopupMenu_closure: function PopupMenu_closure(t0) {
      this.preventDefault = t0;
    },
    PopupMenu_addEmptyTableRow: function PopupMenu_addEmptyTableRow(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.rows = t2;
      _.NCOLS = t3;
    },
    PopupMenu_closure0: function PopupMenu_closure0(t0, t1) {
      this.row = t0;
      this.attr = t1;
    },
    PopupMenu_closure1: function PopupMenu_closure1(t0, t1) {
      this.row = t0;
      this.attr = t1;
    },
    PopupMenu_execute: function PopupMenu_execute(t0, t1) {
      this.$this = t0;
      this.displayedText = t1;
    },
    PopupMenu_handleTouchStart: function PopupMenu_handleTouchStart(t0) {
      this.$this = t0;
    },
    PopupMenu_handleTouchEnd: function PopupMenu_handleTouchEnd(t0, t1) {
      this.$this = t0;
      this.execute = t1;
    },
    PopupMenu_closure2: function PopupMenu_closure2(t0) {
      this.handleTouchStart = t0;
    },
    PopupMenu_closure3: function PopupMenu_closure3(t0) {
      this.handleTouchEnd = t0;
    },
    PopupMenu_closure4: function PopupMenu_closure4(t0) {
      this.execute = t0;
    },
    PopupMenu_closure5: function PopupMenu_closure5(t0) {
      this.handleTouchStart = t0;
    },
    PopupMenu_closure6: function PopupMenu_closure6(t0) {
      this.handleTouchEnd = t0;
    },
    PopupMenu_closure7: function PopupMenu_closure7(t0) {
      this.execute = t0;
    },
    PopupMenu_show_popupCallback: function PopupMenu_show_popupCallback(t0) {
      this.cpl = t0;
    },
    BasicTable$(tableData, buttonClickListener) {
      var t1 = new A.BasicTable(tableData);
      t1.BasicTable$2(tableData, buttonClickListener);
      return t1;
    },
    BasicTable: function BasicTable(t0) {
      this.__BasicTable_table_A = $;
      this.tableData = t0;
      this.__BasicTable_attr_A = $;
    },
    BasicTable_closure: function BasicTable_closure(t0, t1) {
      this.buttonClickListener = t0;
      this.but = t1;
    },
    showInfoDialog() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic);
      var $async$showInfoDialog = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait(A.Info_show("A modal dialog displaying this *html</i> text."), $async$showInfoDialog);
            case 2:
              // returning from await.
              A.ExampleDispatcher$();
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$showInfoDialog, $async$completer);
    },
    showConfirmDialog() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, t1;
      var $async$showConfirmDialog = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait(A.Info_confirm("A modal ConfirmDialog.<br>Any dialog may have multiple buttons.<br>Please press a button.", A._setArrayType(["Yes", "No", "Options"], type$.JSArray_String)), $async$showConfirmDialog);
            case 3:
              // returning from await.
              t1 = $async$result._buttonCode;
              $async$goto = t1 === $.DiaAttr_DIA_ACT_BUT1 ? 4 : 6;
              break;
            case 4:
              // then
              $async$goto = 7;
              return A._asyncAwait(A.Info_show("The 'Yes' button was pressed."), $async$showConfirmDialog);
            case 7:
              // returning from await.
              // goto join
              $async$goto = 5;
              break;
            case 6:
              // else
              $async$goto = t1 === $.DiaAttr_DIA_ACT_BUT2 ? 8 : 10;
              break;
            case 8:
              // then
              $async$goto = 11;
              return A._asyncAwait(A.Info_show("The 'No' button was pressed."), $async$showConfirmDialog);
            case 11:
              // returning from await.
              // goto join
              $async$goto = 9;
              break;
            case 10:
              // else
              $async$goto = t1 === "DIA_ACT_BUT3" ? 12 : 14;
              break;
            case 12:
              // then
              $async$goto = 15;
              return A._asyncAwait(A.Info_show("The 'Options' button was pressed."), $async$showConfirmDialog);
            case 15:
              // returning from await.
              // goto join
              $async$goto = 13;
              break;
            case 14:
              // else
              if (t1 === "DIA_ACT_ABORT") {
                A.ExampleDispatcher$();
                // goto return
                $async$goto = 1;
                break;
              }
            case 13:
              // join
            case 9:
              // join
            case 5:
              // join
              $async$goto = 16;
              return A._asyncAwait(A.showConfirmDialog(), $async$showConfirmDialog);
            case 16:
              // returning from await.
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$showConfirmDialog, $async$completer);
    },
    showSingleLineInputDialog() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, newname, t1, uin;
      var $async$showSingleLineInputDialog = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.JSArray_String;
              $async$goto = 3;
              return A._asyncAwait(A.Info_get(null, "A single-line input dialog.", A._setArrayType(["Name:&nbsp;"], t1), null, A._setArrayType(["my-new-name"], type$.JSArray_nullable_String), A._setArrayType([20], type$.JSArray_int), A._setArrayType([""], t1), false, null), $async$showSingleLineInputDialog);
            case 3:
              // returning from await.
              uin = $async$result;
              t1 = uin._buttonCode;
              $async$goto = t1 === $.DiaAttr_DIA_ACT_BUT1 ? 4 : 6;
              break;
            case 4:
              // then
              t1 = uin.getUserInput$1(0);
              if (t1 == null)
                newname = null;
              else {
                if (0 >= t1.length) {
                  $async$returnValue = A.ioore(t1, 0);
                  // goto return
                  $async$goto = 1;
                  break;
                }
                newname = t1[0];
              }
              $async$goto = 7;
              return A._asyncAwait(A.Info_show("You entered:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>'" + A.S(newname) + "'"), $async$showSingleLineInputDialog);
            case 7:
              // returning from await.
              // goto join
              $async$goto = 5;
              break;
            case 6:
              // else
              if (t1 === "DIA_ACT_ABORT") {
                A.ExampleDispatcher$();
                // goto return
                $async$goto = 1;
                break;
              }
            case 5:
              // join
              $async$goto = 8;
              return A._asyncAwait(A.showSingleLineInputDialog(), $async$showSingleLineInputDialog);
            case 8:
              // returning from await.
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$showSingleLineInputDialog, $async$completer);
    },
    showMultiLineInputDialog() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, newname, newext, t1, uin;
      var $async$showMultiLineInputDialog = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.JSArray_String;
              $async$goto = 3;
              return A._asyncAwait(A.Info_get(null, "A 2-lines input dialog.", A._setArrayType(["New Name:&nbsp;", "New Extension:&nbsp;"], t1), null, A._setArrayType(["my-new-name", ".com"], type$.JSArray_nullable_String), A._setArrayType([20, 20], type$.JSArray_int), A._setArrayType(["", ""], t1), false, null), $async$showMultiLineInputDialog);
            case 3:
              // returning from await.
              uin = $async$result;
              t1 = uin._buttonCode;
              $async$goto = t1 === $.DiaAttr_DIA_ACT_BUT1 ? 4 : 6;
              break;
            case 4:
              // then
              t1 = uin.getUserInput$1(0);
              if (t1 == null)
                newname = null;
              else {
                if (0 >= t1.length) {
                  $async$returnValue = A.ioore(t1, 0);
                  // goto return
                  $async$goto = 1;
                  break;
                }
                newname = t1[0];
              }
              t1 = uin.getUserInput$1(1);
              if (t1 == null)
                newext = null;
              else {
                if (0 >= t1.length) {
                  $async$returnValue = A.ioore(t1, 0);
                  // goto return
                  $async$goto = 1;
                  break;
                }
                newext = t1[0];
              }
              $async$goto = 7;
              return A._asyncAwait(A.Info_show("You entered:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>" + ("'" + A.S(newname) + "'<br>'" + A.S(newext) + "'")), $async$showMultiLineInputDialog);
            case 7:
              // returning from await.
              // goto join
              $async$goto = 5;
              break;
            case 6:
              // else
              if (t1 === "DIA_ACT_ABORT") {
                A.ExampleDispatcher$();
                // goto return
                $async$goto = 1;
                break;
              }
            case 5:
              // join
              A.showMultiLineInputDialog();
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$showMultiLineInputDialog, $async$completer);
    },
    showAdvancedInputDialogCheckButtons() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, out, i, t1, COMBO_SELECTIONS, defPars, labels, uin;
      var $async$showAdvancedInputDialogCheckButtons = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = type$.JSArray_String;
                COMBO_SELECTIONS = A._setArrayType(["Exponential", "Gaussian"], t1);
                defPars = A.LinkedHashMap_LinkedHashMap$_literal([0, A._setArrayType(["false", ""], t1), 1, A._setArrayType(["true", "Exponential"], t1), 2, A._setArrayType(["", "0.3"], t1), 3, A._setArrayType(["", "0.5, -1.0"], t1), 4, A._setArrayType(["true", "16384"], t1)], type$.int, type$.List_String);
                labels = A._setArrayType(["Baseline offset correction", "Window function", "Exponential lb[Hz]:", "Gaussian gb[0..1], lb[Hz]<0:", "Fourier transform, # real points:"], t1);
                $async$goto = 3;
                return A._asyncAwait(A.Info_get("checkbox", "An advanced input dialog with check buttons.", labels, A._setArrayType([null, COMBO_SELECTIONS, null, null, null], type$.JSArray_nullable_List_String), A._setArrayType([defPars.$index(0, 0)[1], defPars.$index(0, 1)[1], defPars.$index(0, 2)[1], defPars.$index(0, 3)[1], "16384"], type$.JSArray_nullable_String), A._setArrayType([0, 7, 7, 7, 7], type$.JSArray_int), A._setArrayType([defPars.$index(0, 0)[0], defPars.$index(0, 1)[0], defPars.$index(0, 2)[0], defPars.$index(0, 3)[0], defPars.$index(0, 4)[0]], t1), false, null), $async$showAdvancedInputDialogCheckButtons);
              case 3:
                // returning from await.
                uin = $async$result;
                t1 = uin._buttonCode;
                $async$goto = t1 === "DIA_ACT_OK" ? 4 : 6;
                break;
              case 4:
                // then
                out = new A.StringBuffer("");
                out._contents = "" + "Collected user input<br><br>";
                for (i = 0; i < defPars.__js_helper$_length; ++i) {
                  if (!(i < 5)) {
                    $async$returnValue = A.ioore(labels, i);
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  }
                  out._contents += labels[i] + ": Check button state=" + A.S(uin.getCheckedState$1(i));
                  t1 = out._contents += ", Entered value=" + A.S(uin.getUserInput$1(i));
                  out._contents = t1 + "<br>";
                }
                $async$goto = 7;
                return A._asyncAwait(A.Info_show(out.toString$0(0)), $async$showAdvancedInputDialogCheckButtons);
              case 7:
                // returning from await.
                // goto join
                $async$goto = 5;
                break;
              case 6:
                // else
                if (t1 === "DIA_ACT_ABORT") {
                  A.ExampleDispatcher$();
                  // goto return
                  $async$goto = 1;
                  break;
                }
              case 5:
                // join
                $async$goto = 8;
                return A._asyncAwait(A.showAdvancedInputDialogCheckButtons(), $async$showAdvancedInputDialogCheckButtons);
              case 8:
                // returning from await.
              case 1:
                // return
                return A._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return A._asyncStartSync($async$showAdvancedInputDialogCheckButtons, $async$completer);
    },
    showAdvancedInputDialogRadioButtons() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, out, i, t1, COMBO_SELECTIONS_PEAK, COMBO_SELECTIONS_FIT, defPars, labels, uin;
      var $async$showAdvancedInputDialogRadioButtons = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = type$.JSArray_String;
                COMBO_SELECTIONS_PEAK = A._setArrayType(["positive", "negative", "pos+neg"], t1);
                COMBO_SELECTIONS_FIT = A._setArrayType(["Lorentz", "Gauss-Lorentz", "Fitting Options"], t1);
                defPars = A.LinkedHashMap_LinkedHashMap$_literal([0, A._setArrayType(["false", ""], t1), 1, A._setArrayType(["true", "3.14"], t1), 2, A._setArrayType(["false", "1.0"], t1), 3, A._setArrayType(["false", "positive"], t1), 4, A._setArrayType(["false", "Lorentz"], t1), 5, A._setArrayType(["false", ""], t1)], type$.int, type$.List_String);
                labels = A._setArrayType(["Remove all peaks in displayed region", "Auto-pick displayed region above threshold:", "Picking sensitivity (factor of sigma SD):", "Sign of picked peaks", "Fit the picked peaks of display area", "Show peak table"], t1);
                $async$goto = 3;
                return A._asyncAwait(A.Info_get("radio", "An advanced input dialog with radio buttons.", labels, A._setArrayType([null, null, null, COMBO_SELECTIONS_PEAK, COMBO_SELECTIONS_FIT, null], type$.JSArray_nullable_List_String), A._setArrayType([defPars.$index(0, 0)[1], defPars.$index(0, 1)[1], defPars.$index(0, 2)[1], defPars.$index(0, 3)[1], defPars.$index(0, 4)[1], defPars.$index(0, 5)[1]], type$.JSArray_nullable_String), A._setArrayType([0, 10, 10, 10, 10, 0], type$.JSArray_int), A._setArrayType([defPars.$index(0, 0)[0], defPars.$index(0, 1)[0], defPars.$index(0, 2)[0], defPars.$index(0, 3)[0], defPars.$index(0, 4)[0], defPars.$index(0, 5)[0]], t1), true, A._setArrayType(["Execute"], t1)), $async$showAdvancedInputDialogRadioButtons);
              case 3:
                // returning from await.
                uin = $async$result;
                t1 = uin._buttonCode;
                $async$goto = t1 === $.DiaAttr_DIA_ACT_BUT1 ? 4 : 6;
                break;
              case 4:
                // then
                out = new A.StringBuffer("");
                out._contents = "" + "Collected user input<br><br>";
                for (i = 0; i < defPars.__js_helper$_length; ++i) {
                  if (!(i < 6)) {
                    $async$returnValue = A.ioore(labels, i);
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  }
                  out._contents += labels[i] + ": Radio=" + A.S(uin.getCheckedState$1(i));
                  t1 = out._contents += ", Value=" + A.S(uin.getUserInput$1(i));
                  out._contents = t1 + "<br>";
                }
                $async$goto = 7;
                return A._asyncAwait(A.Info_show(out.toString$0(0)), $async$showAdvancedInputDialogRadioButtons);
              case 7:
                // returning from await.
                // goto join
                $async$goto = 5;
                break;
              case 6:
                // else
                if (t1 === "DIA_ACT_ABORT") {
                  A.ExampleDispatcher$();
                  // goto return
                  $async$goto = 1;
                  break;
                }
              case 5:
                // join
                $async$goto = 8;
                return A._asyncAwait(A.showAdvancedInputDialogRadioButtons(), $async$showAdvancedInputDialogRadioButtons);
              case 8:
                // returning from await.
              case 1:
                // return
                return A._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return A._asyncStartSync($async$showAdvancedInputDialogRadioButtons, $async$completer);
    },
    showAdvancedInputDialog2D() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, uin, out, i, val_checked, nvals, vals_col1, vals_col2, t1, COMBO_SELECTIONS_WIN, COMBO_SELECTIONS_FT, t2, t3, defPars, defParsCol2, labels;
      var $async$showAdvancedInputDialog2D = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = type$.JSArray_String;
                COMBO_SELECTIONS_WIN = A._setArrayType(["+||+No action", "Exponential", "Gaussian"], t1);
                COMBO_SELECTIONS_FT = A._setArrayType(["No action", "Complex"], t1);
                t2 = type$.int;
                t3 = type$.List_String;
                defPars = A.LinkedHashMap_LinkedHashMap$_literal([0, A._setArrayType(["false", ""], t1), 1, A._setArrayType(["true", "Exponential"], t1), 2, A._setArrayType(["", "0.3"], t1), 3, A._setArrayType(["", "0.5, -1.0"], t1), 4, A._setArrayType(["true", "Complex"], t1), 5, A._setArrayType(["", ""], t1)], t2, t3);
                defParsCol2 = A.LinkedHashMap_LinkedHashMap$_literal([0, A._setArrayType(["false", ""], t1), 1, A._setArrayType(["true", "Gaussian"], t1), 2, A._setArrayType(["", "0.5"], t1), 3, A._setArrayType(["", "0.1, -1.0"], t1), 4, A._setArrayType(["true", "Complex"], t1), 5, A._setArrayType(["", ""], t1)], t2, t3);
                labels = A._setArrayType(["Baseline offset correction", "Window function", "Exponential lb[Hz]:", "Gaussian gb[0..1], lb[Hz]<0:", "Fourier transform type", "Fourier transform, # real points:"], t1);
                t3 = type$.JSArray_nullable_List_String;
                $async$goto = 3;
                return A._asyncAwait(A.Info_get2D("checkbox", "Advanced input dialog with 2 input columns, e.g. for 2D data processing", labels, A.LinkedHashMap_LinkedHashMap$_literal([0, A._setArrayType([null, COMBO_SELECTIONS_WIN, null, null, COMBO_SELECTIONS_FT, null], t3), 1, A._setArrayType([null, COMBO_SELECTIONS_WIN, null, null, COMBO_SELECTIONS_FT, null], t3)], t2, type$.List_nullable_List_String), A.LinkedHashMap_LinkedHashMap$_literal([0, A._setArrayType([defPars.$index(0, 0)[1], defPars.$index(0, 1)[1], defPars.$index(0, 2)[1], defPars.$index(0, 3)[1], defPars.$index(0, 4)[1], "4096"], t1), 1, A._setArrayType([defParsCol2.$index(0, 0)[1], defParsCol2.$index(0, 1)[1], defParsCol2.$index(0, 2)[1], defParsCol2.$index(0, 3)[1], defPars.$index(0, 4)[1], "512"], t1)], t2, type$.nullable_List_String), A._setArrayType([0, 7, 7, 7, 7, 7], type$.JSArray_int), A._setArrayType([defPars.$index(0, 0)[0], defPars.$index(0, 1)[0], defPars.$index(0, 2)[0], defPars.$index(0, 3)[0], defPars.$index(0, 4)[0], defPars.$index(0, 5)[0]], t1), false, null), $async$showAdvancedInputDialog2D);
              case 3:
                // returning from await.
                uin = $async$result;
                t1 = uin._buttonCode;
                $async$goto = t1 === $.DiaAttr_DIA_ACT_BUT1 ? 4 : 6;
                break;
              case 4:
                // then
                out = new A.StringBuffer("");
                out._contents = "" + "Collected user input<br><br>";
                for (i = 0; i < defPars.__js_helper$_length; ++i) {
                  val_checked = uin.getCheckedState$1(i);
                  t1 = uin.getUserInput$1(i);
                  nvals = t1 == null ? null : t1.length;
                  if (nvals == null)
                    nvals = 0;
                  t1 = uin.getUserInput$1(i);
                  vals_col1 = t1 == null ? null : B.JSArray_methods.sublist$2(t1, 0, nvals);
                  t1 = uin.getUserInput$1(i);
                  vals_col2 = t1 == null ? null : B.JSArray_methods.sublist$1(t1, nvals);
                  if (!(i < 6)) {
                    $async$returnValue = A.ioore(labels, i);
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  }
                  out._contents += labels[i] + ": Radio=" + A.S(val_checked);
                  out._contents += ", Col1=" + A.S(vals_col1);
                  t1 = out._contents += ", Col2=" + A.S(vals_col2);
                  out._contents = t1 + "<br>";
                }
                $async$goto = 7;
                return A._asyncAwait(A.Info_show(out.toString$0(0)), $async$showAdvancedInputDialog2D);
              case 7:
                // returning from await.
                // goto join
                $async$goto = 5;
                break;
              case 6:
                // else
                if (t1 === "DIA_ACT_ABORT") {
                  A.ExampleDispatcher$();
                  // goto return
                  $async$goto = 1;
                  break;
                }
              case 5:
                // join
                $async$goto = 8;
                return A._asyncAwait(A.showAdvancedInputDialog2D(), $async$showAdvancedInputDialog2D);
              case 8:
                // returning from await.
              case 1:
                // return
                return A._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return A._asyncStartSync($async$showAdvancedInputDialog2D, $async$completer);
    },
    showNonModalDialog() {
      var buttonLabels, t2, _null = null,
        t1 = new A.showNonModalDialog_closeCallback('<span style="color:red">');
      A.showAdvancedInputDialog2D();
      buttonLabels = A._setArrayType([], type$.JSArray_String);
      t2 = document.createElement("table");
      t2.toString;
      t2 = new A.InputDialog(t2, A._setArrayType([], type$.JSArray_nullable_ActButton), t1);
      t2.__BaseDialog_isModal_A = false;
      t2.createShowDia$0();
      t2.InputDialog$noModal$10(_null, '<span style="color:red">This is a non-modal dialog displayed in addition to a modal one.You can still work inside the modal dialog', _null, _null, _null, _null, _null, t1, false, buttonLabels);
    },
    DialogAttributeChanger_changeDialogAttributes() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        t2, t3, t1;
      var $async$DialogAttributeChanger_changeDialogAttributes = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = new A.DialogAttributeChanger_changeDialogAttributes_reset();
              if ($.DialogAttributeChanger_dia_attr_saved == null) {
                if ($.DiaAttr__attr == null)
                  A.DiaAttr_initAttrFromDefaults();
                t2 = $.DiaAttr__attr;
                t2.toString;
                t3 = type$.String;
                $.DialogAttributeChanger_dia_attr_saved = A.LinkedHashMap_LinkedHashMap$from(t2, t3, t3);
              }
              if ($.DialogAttributeChanger_but_attr_saved == null) {
                t2 = $.ActButton_but_attr;
                if (t2 == null) {
                  t2 = type$.dynamic;
                  t2 = A.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
                }
                t3 = type$.String;
                $.DialogAttributeChanger_but_attr_saved = A.LinkedHashMap_LinkedHashMap$from(t2, t3, t3);
              }
              $async$goto = 2;
              return A._asyncAwait(A.Info_confirm("This example illustrates how to change some dialog attributes.<br>Please press a button.", A._setArrayType(["Change", "Reset", "Help"], type$.JSArray_String)), $async$DialogAttributeChanger_changeDialogAttributes);
            case 2:
              // returning from await.
              t2 = $async$result._buttonCode;
              $async$goto = t2 === $.DiaAttr_DIA_ACT_BUT1 ? 3 : 5;
              break;
            case 3:
              // then
              new A.DialogAttributeChanger_changeDialogAttributes_change().call$0();
              A.DialogAttributeChanger_changeDialogAttributes();
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$goto = t2 === $.DiaAttr_DIA_ACT_BUT2 ? 6 : 8;
              break;
            case 6:
              // then
              t1.call$0();
              A.DialogAttributeChanger_changeDialogAttributes();
              // goto join
              $async$goto = 7;
              break;
            case 8:
              // else
              $async$goto = t2 === "DIA_ACT_BUT3" ? 9 : 11;
              break;
            case 9:
              // then
              $async$goto = 12;
              return A._asyncAwait(A.Info_show("The available dialog attributes are defined in the file<br>'dia_attr.dart'.<br>The action button attributes are defined in<br>'dia_button.dart'."), $async$DialogAttributeChanger_changeDialogAttributes);
            case 12:
              // returning from await.
              A.DialogAttributeChanger_changeDialogAttributes();
              // goto join
              $async$goto = 10;
              break;
            case 11:
              // else
              if (t2 === "DIA_ACT_ABORT") {
                t1.call$0();
                A.ExampleDispatcher$();
              }
            case 10:
              // join
            case 7:
              // join
            case 4:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$DialogAttributeChanger_changeDialogAttributes, $async$completer);
    },
    showIconPanel() {
      return A.showIconPanel$body();
    },
    showIconPanel$body() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        t1, iconList;
      var $async$showIconPanel = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              iconList = A._setArrayType(["asterisk-D8F0E3-24.png", "divide-D8F0E3-24.png", "vreset-D8F0E3-24.png", "exactzoom-D8F0E3-24.png", "axis-white-24.png", "info-white-24.png"], type$.JSArray_String);
              t1.iconPanel = null;
              t1.iconPanel = A.IconPanel$($.ExampleDispatcher___app_div._readField$0(), "example panel", "icons", iconList, new A.showIconPanel_getIconCallbacks(t1, iconList), new A.showIconPanel_closeCallback(), 100, 20, 83, 20, 3, true);
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$showIconPanel, $async$completer);
    },
    showFileInputDialog() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic);
      var $async$showFileInputDialog = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              A.FileSelectionDialog$("A dialog providing access to the system's file selection dialog. Press the button below.", new A.showFileInputDialog_fileInputCallback());
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$showFileInputDialog, $async$completer);
    },
    showPopupMenu() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, popupAction, cui, _i, textAct, itemText, actionCode, t1, POPUP_ITEMS, t2, button_types, is_checked;
      var $async$showPopupMenu = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.JSArray_String;
              POPUP_ITEMS = A._setArrayType(['<span style="color:red">Example Popup||TITLE', "Popup Item 1||ACTION_1", "<span style='color:lightgrey'>Popup Item 2 (disabled)</span>||ACTION_2", "Popup Item 3||ACTION_3", "Popup Item 4||ACTION_4"], t1);
              t2 = type$.String;
              button_types = A.List_List$filled(5, "", false, t2);
              is_checked = A.List_List$filled(5, "", false, t2);
              B.JSArray_methods.$indexSet(button_types, 4, "checkbox");
              B.JSArray_methods.$indexSet(is_checked, 4, "true");
              $async$goto = 3;
              return A._asyncAwait(A.PopupMenu_show($.ExampleDispatcher___app_div._readField$0(), "", POPUP_ITEMS, button_types, is_checked, 100, 20, true), $async$showPopupMenu);
            case 3:
              // returning from await.
              popupAction = $async$result._buttonCode;
              _i = 0;
            case 4:
              // while condition
              if (!(_i < 5)) {
                cui = null;
                // goto after while
                $async$goto = 5;
                break;
              }
              textAct = POPUP_ITEMS[_i].split("||");
              t2 = textAct.length;
              if (0 >= t2) {
                $async$returnValue = A.ioore(textAct, 0);
                // goto return
                $async$goto = 1;
                break;
              }
              itemText = textAct[0];
              if (1 >= t2) {
                $async$returnValue = A.ioore(textAct, 1);
                // goto return
                $async$goto = 1;
                break;
              }
              actionCode = textAct[1];
              if (actionCode === "TITLE") {
                // goto break c$0
                $async$goto = 6;
                break;
              }
              $async$goto = popupAction === actionCode ? 7 : 8;
              break;
            case 7:
              // then
              $async$goto = 9;
              return A._asyncAwait(A.Info_confirm(itemText + "<br>was selected.", A._setArrayType(["Close"], t1)), $async$showPopupMenu);
            case 9:
              // returning from await.
              cui = $async$result;
              // goto after while
              $async$goto = 5;
              break;
            case 8:
              // join
            case 6:
              // break c$0
              ++_i;
              // goto while condition
              $async$goto = 4;
              break;
            case 5:
              // after while
              if ((cui == null ? null : cui._buttonCode) === "DIA_ACT_ABORT")
                A.ExampleDispatcher$();
              else
                A.showPopupMenu();
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$showPopupMenu, $async$completer);
    },
    showSimpleTable() {
      var infdia, t2,
        btable = A.BasicTable$($.ExampleData_TABLEDATA_SIMPLE, null),
        t1 = type$.String;
      A.DiaAttr_setAttr(A.LinkedHashMap_LinkedHashMap$_literal(["DIALOG_HEADER_TEXTALIGN", "left"], t1, t1));
      infdia = A.InfoDialog$($.ExampleData_TABLEDATA_SIMPLE[0][0], new A.showSimpleTable_closeCallback());
      t1 = infdia.__BaseDialog_dia_A;
      t1 === $ && A.throwLateFieldNI("dia");
      t1 = t1.style;
      t1.marginTop = "5px";
      t1 = infdia.__BaseDialog_dia_A;
      t2 = btable.__BasicTable_table_A;
      t2 === $ && A.throwLateFieldNI("table");
      t1.appendChild(t2).toString;
    },
    showInterActiveTable() {
      var padding, i, infdia, t1, t2,
        btable = A._Cell$named("btable");
      for (padding = "", i = 0; i < 100; ++i)
        padding += "&nbsp;";
      btable._value = A.BasicTable$($.ExampleData_TABLEDATA_INTERACTIVE, new A.showInterActiveTable_tableButtonClickListener(btable));
      infdia = A.InfoDialog$($.ExampleData_TABLEDATA_INTERACTIVE[0][0] + padding, new A.showInterActiveTable_closeCallback());
      t1 = infdia.__BaseDialog_dia_A;
      t1 === $ && A.throwLateFieldNI("dia");
      t1 = t1.style;
      t1.marginTop = "5px";
      t1 = infdia.__BaseDialog_dia_A;
      t2 = btable._readLocal$0().__BasicTable_table_A;
      t2 === $ && A.throwLateFieldNI("table");
      t1.appendChild(t2).toString;
    },
    showNonModalDialog_closeCallback: function showNonModalDialog_closeCallback(t0) {
      this.RED = t0;
    },
    DialogAttributeChanger_changeDialogAttributes_change: function DialogAttributeChanger_changeDialogAttributes_change() {
    },
    DialogAttributeChanger_changeDialogAttributes_reset: function DialogAttributeChanger_changeDialogAttributes_reset() {
    },
    showIconPanel_getIconCallbacks: function showIconPanel_getIconCallbacks(t0, t1) {
      this._box_0 = t0;
      this.iconList = t1;
    },
    showIconPanel_getIconCallbacks_out: function showIconPanel_getIconCallbacks_out(t0) {
      this._box_0 = t0;
    },
    showIconPanel_getIconCallbacks_asteriskCallback: function showIconPanel_getIconCallbacks_asteriskCallback(t0) {
      this.out = t0;
    },
    showIconPanel_getIconCallbacks_divideCallback: function showIconPanel_getIconCallbacks_divideCallback(t0) {
      this.out = t0;
    },
    showIconPanel_getIconCallbacks_vresetCallback: function showIconPanel_getIconCallbacks_vresetCallback(t0) {
      this.out = t0;
    },
    showIconPanel_getIconCallbacks_exactZoomCallback: function showIconPanel_getIconCallbacks_exactZoomCallback(t0) {
      this.out = t0;
    },
    showIconPanel_getIconCallbacks_axisCallback: function showIconPanel_getIconCallbacks_axisCallback(t0) {
      this.out = t0;
    },
    showIconPanel_getIconCallbacks_infoCallback: function showIconPanel_getIconCallbacks_infoCallback(t0) {
      this.out = t0;
    },
    showIconPanel_closeCallback: function showIconPanel_closeCallback() {
    },
    showFileInputDialog_fileInputCallback: function showFileInputDialog_fileInputCallback() {
    },
    showSimpleTable_closeCallback: function showSimpleTable_closeCallback() {
    },
    showInterActiveTable_closeCallback: function showInterActiveTable_closeCallback() {
    },
    showInterActiveTable_tableButtonClickListener: function showInterActiveTable_tableButtonClickListener(t0) {
      this.btable = t0;
    },
    main() {
      new A.ExampleDispatcher(A._setArrayType(["Info Dialog", "Confirm Dialog", "Single-Line Input Dialog", "Multi-Line Input Dialog", "Advanced Input Dialog with Check Buttons", "Advanced Input Dialog with Radio Buttons", string$.Advanc, "Non-Modal Dialog", "System's File Selection Dialog", "Change Dialog Attributes", "Icon Panel", "Popup Menu", "Simple Table", "Interactive Table"], type$.JSArray_String), A._setArrayType([A.examples__showInfoDialog$closure(), A.examples__showConfirmDialog$closure(), A.examples__showSingleLineInputDialog$closure(), A.examples__showMultiLineInputDialog$closure(), A.examples__showAdvancedInputDialogCheckButtons$closure(), A.examples__showAdvancedInputDialogRadioButtons$closure(), A.examples__showAdvancedInputDialog2D$closure(), A.examples__showNonModalDialog$closure(), A.examples__showFileInputDialog$closure(), A.examples_DialogAttributeChanger_changeDialogAttributes$closure(), A.examples__showIconPanel$closure(), A.examples__showPopupMenu$closure(), A.examples__showSimpleTable$closure(), A.examples__showInterActiveTable$closure()], type$.JSArray_Function)).showDialogExamples$0();
    },
    ExampleDispatcher$() {
      var t1 = new A.ExampleDispatcher(A._setArrayType(["Info Dialog", "Confirm Dialog", "Single-Line Input Dialog", "Multi-Line Input Dialog", "Advanced Input Dialog with Check Buttons", "Advanced Input Dialog with Radio Buttons", string$.Advanc, "Non-Modal Dialog", "System's File Selection Dialog", "Change Dialog Attributes", "Icon Panel", "Popup Menu", "Simple Table", "Interactive Table"], type$.JSArray_String), A._setArrayType([A.examples__showInfoDialog$closure(), A.examples__showConfirmDialog$closure(), A.examples__showSingleLineInputDialog$closure(), A.examples__showMultiLineInputDialog$closure(), A.examples__showAdvancedInputDialogCheckButtons$closure(), A.examples__showAdvancedInputDialogRadioButtons$closure(), A.examples__showAdvancedInputDialog2D$closure(), A.examples__showNonModalDialog$closure(), A.examples__showFileInputDialog$closure(), A.examples_DialogAttributeChanger_changeDialogAttributes$closure(), A.examples__showIconPanel$closure(), A.examples__showPopupMenu$closure(), A.examples__showSimpleTable$closure(), A.examples__showInterActiveTable$closure()], type$.JSArray_Function));
      t1.showDialogExamples$0();
      return t1;
    },
    ExampleDispatcher: function ExampleDispatcher(t0, t1) {
      this.items = t0;
      this.itemsFuncs = t1;
    },
    Device_userAgent() {
      var t1 = window.navigator.userAgent;
      t1.toString;
      return t1;
    },
    DiaAttr_initAttrFromDefaults() {
      var t1 = type$.String,
        t2 = type$.nullable_String;
      $.DiaAttr__attr = A.LinkedHashMap_LinkedHashMap$from($.$get$DiaAttr_ATTR_DIALOGS_DESKTOP(), t1, t2);
      if (A.DiaUtils_isPhone())
        $.DiaAttr__attr = A.LinkedHashMap_LinkedHashMap$from($.$get$DiaAttr_ATTR_DIALOGS_PHONE(), t1, t2);
      else if (A.DiaUtils_isTablet())
        $.DiaAttr__attr = A.LinkedHashMap_LinkedHashMap$from($.$get$DiaAttr_ATTR_DIALOGS_TABLET(), t1, t2);
    },
    DiaAttr_setAttr(myAttr) {
      var t1, t2, t3, t4, t5, t6;
      for (t1 = A.LinkedHashMapKeyIterator$(myAttr, myAttr._modifications, A._instanceType(myAttr)._precomputed1), t2 = type$.String, t3 = type$.nullable_String; t1.moveNext$0();) {
        t4 = t1.__js_helper$_current;
        if ($.DiaAttr__attr == null) {
          $.DiaAttr__attr = A.LinkedHashMap_LinkedHashMap$from($.$get$DiaAttr_ATTR_DIALOGS_DESKTOP(), t2, t3);
          t5 = window.navigator.userAgent;
          if (A.stringContainsUnchecked(t5.toLowerCase(), "iphone", 0)) {
            t5 = window.navigator.vendor;
            t5.toString;
            t5 = A.stringContainsUnchecked(t5, "Apple Computer", 0);
          } else
            t5 = false;
          if (t5 && true)
            $.DiaAttr__attr = A.LinkedHashMap_LinkedHashMap$from($.$get$DiaAttr_ATTR_DIALOGS_PHONE(), t2, t3);
          else if (A.DiaUtils_isTablet())
            $.DiaAttr__attr = A.LinkedHashMap_LinkedHashMap$from($.$get$DiaAttr_ATTR_DIALOGS_TABLET(), t2, t3);
        }
        t5 = $.DiaAttr__attr;
        t5.toString;
        t6 = myAttr.$index(0, t4);
        t6.toString;
        t5.$indexSet(0, t4, t6);
      }
    },
    DiaUtils_getBoolFromString(s) {
      if (s === "true")
        return true;
      return false;
    },
    DiaUtils_removePx(cssAttr) {
      var t1 = cssAttr.length;
      if (t1 === 0)
        return 28;
      return A.double_parse(A.stringReplaceFirstUnchecked(cssAttr, "px", "", 0));
    },
    DiaUtils_isTablet() {
      var isTablet,
        info = window.navigator.userAgent;
      if (B.JSString_methods.contains$1(info.toLowerCase(), "android") || B.JSString_methods.contains$1(info.toLowerCase(), "ipad") || B.JSString_methods.contains$1(info.toLowerCase(), "iphone"))
        isTablet = true;
      else
        isTablet = B.JSString_methods.contains$1(info.toLowerCase(), "touch") && true;
      return isTablet;
    },
    DiaUtils_isPhone() {
      if (B.JSString_methods.contains$1(window.navigator.userAgent.toLowerCase(), "iphone")) {
        var t1 = window.navigator.vendor;
        t1.toString;
        t1 = B.JSString_methods.contains$1(t1, "Apple Computer");
      } else
        t1 = false;
      return t1 && true;
    },
    DiaUtils_getTouchPoint(e) {
      var t1, t2, x, y, t3;
      if (type$.MouseEvent._is(e)) {
        t1 = e.pageX;
        t1.toString;
        t2 = e.pageY;
        t2.toString;
        x = B.JSNumber_methods.toInt$0(t1);
        y = B.JSNumber_methods.toInt$0(t2);
      } else {
        if (type$.TouchEvent._is(e)) {
          t1 = e.touches;
          t1 = t1 != null && t1.length !== 0;
        } else
          t1 = false;
        if (t1) {
          t1 = e.touches;
          if (0 >= t1.length)
            return A.ioore(t1, 0);
          t1 = t1[0];
          t2 = t1.pageX;
          t2.toString;
          t2 = B.JSNumber_methods.round$0(t2);
          t3 = t1.pageY;
          t3.toString;
          B.JSNumber_methods.round$0(t3);
          x = B.JSInt_methods.toInt$0(t2);
          t2 = t1.pageX;
          t2.toString;
          B.JSNumber_methods.round$0(t2);
          t1 = t1.pageY;
          t1.toString;
          y = B.JSInt_methods.toInt$0(B.JSNumber_methods.round$0(t1));
        } else {
          x = 0;
          y = 0;
        }
      }
      return new A.Point(x, y, type$.Point_int);
    },
    DiaUtils_getTouchPoints(e) {
      var tpoints, t2, i, t3, t4, x,
        t1 = e.touches;
      if (t1 == null || t1.length === 0)
        return A._setArrayType([], type$.JSArray_Point_int);
      t1 = t1.length;
      tpoints = A.List_List$filled(t1, null, false, type$.nullable_Point_int);
      for (t2 = type$.Point_int, i = 0; i < t1; ++i) {
        t3 = e.touches;
        if (!(i < t3.length))
          return A.ioore(t3, i);
        t3 = t3[i];
        t4 = t3.pageX;
        t4.toString;
        t4 = B.JSNumber_methods.round$0(t4);
        t3 = t3.pageY;
        t3.toString;
        B.JSNumber_methods.round$0(t3);
        x = B.JSInt_methods.floor$0(t4);
        t4 = e.touches;
        if (!(i < t4.length))
          return A.ioore(t4, i);
        t4 = t4[i];
        t3 = t4.pageX;
        t3.toString;
        B.JSNumber_methods.round$0(t3);
        t4 = t4.pageY;
        t4.toString;
        B.JSArray_methods.$indexSet(tpoints, i, new A.Point(x, B.JSInt_methods.floor$0(B.JSNumber_methods.round$0(t4)), t2));
      }
      return type$.List_Point_int._as(tpoints);
    }
  },
  J = {
    makeDispatchRecord(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    getNativeInterceptor(object) {
      var proto, objectProto, $constructor, interceptor, t1,
        record = object[init.dispatchPropertyName];
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          A.initNativeDispatch();
          record = object[init.dispatchPropertyName];
        }
      if (record != null) {
        proto = record.p;
        if (false === proto)
          return record.i;
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return record.i;
        if (record.e === objectProto)
          throw A.wrapException(A.UnimplementedError$("Return interceptor for " + A.S(proto(object, record))));
      }
      $constructor = object.constructor;
      if ($constructor == null)
        interceptor = null;
      else {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        interceptor = $constructor[t1];
      }
      if (interceptor != null)
        return interceptor;
      interceptor = A.lookupAndCacheInterceptor(object);
      if (interceptor != null)
        return interceptor;
      if (typeof object == "function")
        return B.JavaScriptFunction_methods;
      proto = Object.getPrototypeOf(object);
      if (proto == null)
        return B.PlainJavaScriptObject_methods;
      if (proto === Object.prototype)
        return B.PlainJavaScriptObject_methods;
      if (typeof $constructor == "function") {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        Object.defineProperty($constructor, t1, {value: B.UnknownJavaScriptObject_methods, enumerable: false, writable: true, configurable: true});
        return B.UnknownJavaScriptObject_methods;
      }
      return B.UnknownJavaScriptObject_methods;
    },
    JSArray_JSArray$fixed($length, $E) {
      if ($length < 0 || $length > 4294967295)
        throw A.wrapException(A.RangeError$range($length, 0, 4294967295, "length", null));
      return J.JSArray_JSArray$markFixed(new Array($length), $E);
    },
    JSArray_JSArray$growable($length, $E) {
      if ($length < 0)
        throw A.wrapException(A.ArgumentError$("Length must be a non-negative integer: " + $length, null));
      return A._setArrayType(new Array($length), $E._eval$1("JSArray<0>"));
    },
    JSArray_JSArray$markFixed(allocation, $E) {
      return J.JSArray_markFixedList(A._setArrayType(allocation, $E._eval$1("JSArray<0>")), $E);
    },
    JSArray_markFixedList(list, $T) {
      list.fixed$length = Array;
      return list;
    },
    JSString__isWhitespace(codeUnit) {
      if (codeUnit < 256)
        switch (codeUnit) {
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
          case 133:
          case 160:
            return true;
          default:
            return false;
        }
      switch (codeUnit) {
        case 5760:
        case 8192:
        case 8193:
        case 8194:
        case 8195:
        case 8196:
        case 8197:
        case 8198:
        case 8199:
        case 8200:
        case 8201:
        case 8202:
        case 8232:
        case 8233:
        case 8239:
        case 8287:
        case 12288:
        case 65279:
          return true;
        default:
          return false;
      }
    },
    JSString__skipLeadingWhitespace(string, index) {
      var t1, codeUnit;
      for (t1 = string.length; index < t1;) {
        codeUnit = string.charCodeAt(index);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
        ++index;
      }
      return index;
    },
    JSString__skipTrailingWhitespace(string, index) {
      var t1, index0, codeUnit;
      for (t1 = string.length; index > 0; index = index0) {
        index0 = index - 1;
        if (!(index0 < t1))
          return A.ioore(string, index0);
        codeUnit = string.charCodeAt(index0);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
      }
      return index;
    },
    getInterceptor$(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSNumNotInt.prototype;
      }
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return J.JSNull.prototype;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ansx(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$asx(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ax(receiver) {
      if (receiver == null)
        return receiver;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$s(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$x(receiver) {
      if (receiver == null)
        return receiver;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    set$type$x(receiver, value) {
      return J.getInterceptor$x(receiver).set$type(receiver, value);
    },
    get$hashCode$(receiver) {
      return J.getInterceptor$(receiver).get$hashCode(receiver);
    },
    get$iterator$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$iterator(receiver);
    },
    get$length$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$length(receiver);
    },
    get$runtimeType$(receiver) {
      return J.getInterceptor$(receiver).get$runtimeType(receiver);
    },
    get$value$x(receiver) {
      return J.getInterceptor$x(receiver).get$value(receiver);
    },
    $add$ansx(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver + a0;
      return J.getInterceptor$ansx(receiver).$add(receiver, a0);
    },
    $eq$(receiver, a0) {
      if (receiver == null)
        return a0 == null;
      if (typeof receiver != "object")
        return a0 != null && receiver === a0;
      return J.getInterceptor$(receiver).$eq(receiver, a0);
    },
    $index$asx(receiver, a0) {
      if (typeof a0 === "number")
        if (Array.isArray(receiver) || typeof receiver == "string" || A.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
          if (a0 >>> 0 === a0 && a0 < receiver.length)
            return receiver[a0];
      return J.getInterceptor$asx(receiver).$index(receiver, a0);
    },
    addEventListener$3$x(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).addEventListener$3(receiver, a0, a1, a2);
    },
    containsPoint$1$x(receiver, a0) {
      return J.getInterceptor$x(receiver).containsPoint$1(receiver, a0);
    },
    elementAt$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
    },
    querySelector$1$x(receiver, a0) {
      return J.getInterceptor$x(receiver).querySelector$1(receiver, a0);
    },
    sublist$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).sublist$1(receiver, a0);
    },
    substring$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).substring$1(receiver, a0);
    },
    toString$0$(receiver) {
      return J.getInterceptor$(receiver).toString$0(receiver);
    },
    Interceptor: function Interceptor() {
    },
    JSBool: function JSBool() {
    },
    JSNull: function JSNull() {
    },
    JavaScriptObject: function JavaScriptObject() {
    },
    LegacyJavaScriptObject: function LegacyJavaScriptObject() {
    },
    PlainJavaScriptObject: function PlainJavaScriptObject() {
    },
    UnknownJavaScriptObject: function UnknownJavaScriptObject() {
    },
    JavaScriptFunction: function JavaScriptFunction() {
    },
    JSArray: function JSArray(t0) {
      this.$ti = t0;
    },
    JSUnmodifiableArray: function JSUnmodifiableArray(t0) {
      this.$ti = t0;
    },
    ArrayIterator: function ArrayIterator(t0, t1, t2) {
      var _ = this;
      _._iterable = t0;
      _._length = t1;
      _._index = 0;
      _._current = null;
      _.$ti = t2;
    },
    JSNumber: function JSNumber() {
    },
    JSInt: function JSInt() {
    },
    JSNumNotInt: function JSNumNotInt() {
    },
    JSString: function JSString() {
    }
  },
  B = {};
  var holders = [A, J, B];
  var $ = {};
  A.JS_CONST.prototype = {};
  J.Interceptor.prototype = {
    $eq(receiver, other) {
      return receiver === other;
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    toString$0(receiver) {
      return "Instance of '" + A.Primitives_objectTypeName(receiver) + "'";
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(A._instanceTypeFromConstructor(this));
    }
  };
  J.JSBool.prototype = {
    toString$0(receiver) {
      return String(receiver);
    },
    get$hashCode(receiver) {
      return receiver ? 519018 : 218159;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.bool);
    },
    $isTrustedGetRuntimeType: 1,
    $isbool: 1
  };
  J.JSNull.prototype = {
    $eq(receiver, other) {
      return null == other;
    },
    toString$0(receiver) {
      return "null";
    },
    get$hashCode(receiver) {
      return 0;
    },
    $isTrustedGetRuntimeType: 1,
    $isNull: 1
  };
  J.JavaScriptObject.prototype = {};
  J.LegacyJavaScriptObject.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    toString$0(receiver) {
      return String(receiver);
    }
  };
  J.PlainJavaScriptObject.prototype = {};
  J.UnknownJavaScriptObject.prototype = {};
  J.JavaScriptFunction.prototype = {
    toString$0(receiver) {
      var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
      if (dartClosure == null)
        return this.super$LegacyJavaScriptObject$toString(receiver);
      return "JavaScript function for " + J.toString$0$(dartClosure);
    },
    $isFunction: 1
  };
  J.JSArray.prototype = {
    add$1(receiver, value) {
      A._arrayInstanceType(receiver)._precomputed1._as(value);
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("add"));
      receiver.push(value);
    },
    sublist$2(receiver, start, end) {
      var end0 = receiver.length;
      if (start > end0)
        throw A.wrapException(A.RangeError$range(start, 0, end0, "start", null));
      if (end == null)
        end = end0;
      else if (end < start || end > end0)
        throw A.wrapException(A.RangeError$range(end, start, end0, "end", null));
      if (start === end)
        return A._setArrayType([], A._arrayInstanceType(receiver));
      return A._setArrayType(receiver.slice(start, end), A._arrayInstanceType(receiver));
    },
    sublist$1($receiver, start) {
      return this.sublist$2($receiver, start, null);
    },
    get$last(receiver) {
      var t1 = receiver.length;
      if (t1 > 0)
        return receiver[t1 - 1];
      throw A.wrapException(A.IterableElementError_noElement());
    },
    toString$0(receiver) {
      return A.Iterable_iterableToFullString(receiver, "[", "]");
    },
    get$iterator(receiver) {
      return new J.ArrayIterator(receiver, receiver.length, A._arrayInstanceType(receiver)._eval$1("ArrayIterator<1>"));
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      A._arrayInstanceType(receiver)._precomputed1._as(value);
      if (!!receiver.immutable$list)
        A.throwExpression(A.UnsupportedError$("indexed set"));
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      receiver[index] = value;
    },
    $isIterable: 1,
    $isList: 1
  };
  J.JSUnmodifiableArray.prototype = {};
  J.ArrayIterator.prototype = {
    get$current() {
      var t1 = this._current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this._iterable,
        $length = t1.length;
      if (_this._length !== $length) {
        t1 = A.throwConcurrentModificationError(t1);
        throw A.wrapException(t1);
      }
      t2 = _this._index;
      if (t2 >= $length) {
        _this.set$_current(null);
        return false;
      }
      _this.set$_current(t1[t2]);
      ++_this._index;
      return true;
    },
    set$_current(_current) {
      this._current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  J.JSNumber.prototype = {
    toInt$0(receiver) {
      var t1;
      if (receiver >= -2147483648 && receiver <= 2147483647)
        return receiver | 0;
      if (isFinite(receiver)) {
        t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
        return t1 + 0;
      }
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".toInt()"));
    },
    floor$0(receiver) {
      var truncated, d;
      if (receiver >= 0) {
        if (receiver <= 2147483647)
          return receiver | 0;
      } else if (receiver >= -2147483648) {
        truncated = receiver | 0;
        return receiver === truncated ? truncated : truncated - 1;
      }
      d = Math.floor(receiver);
      if (isFinite(d))
        return d;
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".floor()"));
    },
    round$0(receiver) {
      if (receiver > 0) {
        if (receiver !== 1 / 0)
          return Math.round(receiver);
      } else if (receiver > -1 / 0)
        return 0 - Math.round(0 - receiver);
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".round()"));
    },
    toString$0(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    },
    get$hashCode(receiver) {
      var absolute, floorLog2, factor, scaled,
        intValue = receiver | 0;
      if (receiver === intValue)
        return intValue & 536870911;
      absolute = Math.abs(receiver);
      floorLog2 = Math.log(absolute) / 0.6931471805599453 | 0;
      factor = Math.pow(2, floorLog2);
      scaled = absolute < 1 ? absolute / factor : factor / absolute;
      return ((scaled * 9007199254740992 | 0) + (scaled * 3542243181176521 | 0)) * 599197 + floorLog2 * 1259 & 536870911;
    },
    $tdiv(receiver, other) {
      if ((receiver | 0) === receiver)
        if (other >= 1 || false)
          return receiver / other | 0;
      return this._tdivSlow$1(receiver, other);
    },
    _tdivFast$1(receiver, other) {
      return (receiver | 0) === receiver ? receiver / other | 0 : this._tdivSlow$1(receiver, other);
    },
    _tdivSlow$1(receiver, other) {
      var quotient = receiver / other;
      if (quotient >= -2147483648 && quotient <= 2147483647)
        return quotient | 0;
      if (quotient > 0) {
        if (quotient !== 1 / 0)
          return Math.floor(quotient);
      } else if (quotient > -1 / 0)
        return Math.ceil(quotient);
      throw A.wrapException(A.UnsupportedError$("Result of truncating division is " + A.S(quotient) + ": " + A.S(receiver) + " ~/ " + other));
    },
    _shrOtherPositive$1(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = this._shrBothPositive$1(receiver, other);
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    _shrBothPositive$1(receiver, other) {
      return other > 31 ? 0 : receiver >>> other;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.num);
    },
    $isnum: 1
  };
  J.JSInt.prototype = {
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.int);
    },
    $isTrustedGetRuntimeType: 1,
    $isint: 1
  };
  J.JSNumNotInt.prototype = {
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.double);
    },
    $isTrustedGetRuntimeType: 1
  };
  J.JSString.prototype = {
    $add(receiver, other) {
      return receiver + other;
    },
    startsWith$1(receiver, pattern) {
      var t1 = receiver.length,
        otherLength = pattern.length;
      if (otherLength > t1)
        return false;
      return pattern === receiver.substring(0, otherLength);
    },
    substring$2(receiver, start, end) {
      return receiver.substring(start, A.RangeError_checkValidRange(start, end, receiver.length));
    },
    substring$1($receiver, start) {
      return this.substring$2($receiver, start, null);
    },
    trim$0(receiver) {
      var startIndex, t1, endIndex0,
        result = receiver.trim(),
        endIndex = result.length;
      if (endIndex === 0)
        return result;
      if (0 >= endIndex)
        return A.ioore(result, 0);
      if (result.charCodeAt(0) === 133) {
        startIndex = J.JSString__skipLeadingWhitespace(result, 1);
        if (startIndex === endIndex)
          return "";
      } else
        startIndex = 0;
      t1 = endIndex - 1;
      if (!(t1 >= 0))
        return A.ioore(result, t1);
      endIndex0 = result.charCodeAt(t1) === 133 ? J.JSString__skipTrailingWhitespace(result, t1) : endIndex;
      if (startIndex === 0 && endIndex0 === endIndex)
        return result;
      return result.substring(startIndex, endIndex0);
    },
    contains$2(receiver, other, startIndex) {
      var t1 = receiver.length;
      if (startIndex > t1)
        throw A.wrapException(A.RangeError$range(startIndex, 0, t1, null, null));
      return A.stringContainsUnchecked(receiver, other, startIndex);
    },
    contains$1($receiver, other) {
      return this.contains$2($receiver, other, 0);
    },
    toString$0(receiver) {
      return receiver;
    },
    get$hashCode(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = hash + receiver.charCodeAt(i) & 536870911;
        hash = hash + ((hash & 524287) << 10) & 536870911;
        hash ^= hash >> 6;
      }
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.String);
    },
    get$length(receiver) {
      return receiver.length;
    },
    $isTrustedGetRuntimeType: 1,
    $isPattern: 1,
    $isString: 1
  };
  A.LateError.prototype = {
    toString$0(_) {
      return "LateInitializationError: " + this._message;
    }
  };
  A.SentinelValue.prototype = {};
  A.EfficientLengthIterable.prototype = {};
  A.ListIterable.prototype = {
    get$iterator(_) {
      var _this = this;
      return new A.ListIterator(_this, _this.get$length(_this), A._instanceType(_this)._eval$1("ListIterator<ListIterable.E>"));
    }
  };
  A.SubListIterable.prototype = {
    get$_endIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        endOrLength = this._endOrLength;
      if (endOrLength > $length)
        return $length;
      return endOrLength;
    },
    get$_startIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 > $length)
        return $length;
      return t1;
    },
    get$length(_) {
      var endOrLength,
        $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 >= $length)
        return 0;
      endOrLength = this._endOrLength;
      if (endOrLength >= $length)
        return $length - t1;
      return endOrLength - t1;
    },
    elementAt$1(_, index) {
      var _this = this,
        realIndex = _this.get$_startIndex() + index,
        t1 = _this.get$_endIndex();
      if (realIndex >= t1)
        throw A.wrapException(A.IndexError$withLength(index, _this.get$length(_this), _this, "index"));
      return J.elementAt$1$ax(_this.__internal$_iterable, realIndex);
    }
  };
  A.ListIterator.prototype = {
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t3, _this = this,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        $length = t2.get$length(t1);
      if (_this.__internal$_length !== $length)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      t3 = _this.__internal$_index;
      if (t3 >= $length) {
        _this.set$__internal$_current(null);
        return false;
      }
      _this.set$__internal$_current(t2.elementAt$1(t1, t3));
      ++_this.__internal$_index;
      return true;
    },
    set$__internal$_current(_current) {
      this.__internal$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.TypeErrorDecoder.prototype = {
    matchTypeError$1(message) {
      var result, t1, _this = this,
        match = new RegExp(_this._pattern).exec(message);
      if (match == null)
        return null;
      result = Object.create(null);
      t1 = _this._arguments;
      if (t1 !== -1)
        result.arguments = match[t1 + 1];
      t1 = _this._argumentsExpr;
      if (t1 !== -1)
        result.argumentsExpr = match[t1 + 1];
      t1 = _this._expr;
      if (t1 !== -1)
        result.expr = match[t1 + 1];
      t1 = _this._method;
      if (t1 !== -1)
        result.method = match[t1 + 1];
      t1 = _this._receiver;
      if (t1 !== -1)
        result.receiver = match[t1 + 1];
      return result;
    }
  };
  A.NullError.prototype = {
    toString$0(_) {
      var t1 = this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + this.__js_helper$_message;
      return "NoSuchMethodError: method not found: '" + t1 + "' on null";
    }
  };
  A.JsNoSuchMethodError.prototype = {
    toString$0(_) {
      var t2, _this = this,
        _s38_ = "NoSuchMethodError: method not found: '",
        t1 = _this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + _this.__js_helper$_message;
      t2 = _this._receiver;
      if (t2 == null)
        return _s38_ + t1 + "' (" + _this.__js_helper$_message + ")";
      return _s38_ + t1 + "' on '" + t2 + "' (" + _this.__js_helper$_message + ")";
    }
  };
  A.UnknownJsTypeError.prototype = {
    toString$0(_) {
      var t1 = this.__js_helper$_message;
      return t1.length === 0 ? "Error" : "Error: " + t1;
    }
  };
  A.NullThrownFromJavaScriptException.prototype = {
    toString$0(_) {
      return "Throw of null ('" + (this._irritant === null ? "null" : "undefined") + "' from JavaScript)";
    }
  };
  A.ExceptionAndStackTrace.prototype = {};
  A._StackTrace.prototype = {
    toString$0(_) {
      var trace,
        t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = t1 !== null && typeof t1 === "object" ? t1.stack : null;
      return this._trace = trace == null ? "" : trace;
    },
    $isStackTrace: 1
  };
  A.Closure.prototype = {
    toString$0(_) {
      var $constructor = this.constructor,
        $name = $constructor == null ? null : $constructor.name;
      return "Closure '" + A.unminifyOrTag($name == null ? "unknown" : $name) + "'";
    },
    $isFunction: 1,
    get$$call() {
      return this;
    },
    "call*": "call$1",
    $requiredArgCount: 1,
    $defaultValues: null
  };
  A.Closure0Args.prototype = {"call*": "call$0", $requiredArgCount: 0};
  A.Closure2Args.prototype = {"call*": "call$2", $requiredArgCount: 2};
  A.TearOffClosure.prototype = {};
  A.StaticClosure.prototype = {
    toString$0(_) {
      var $name = this.$static_name;
      if ($name == null)
        return "Closure of unknown static method";
      return "Closure '" + A.unminifyOrTag($name) + "'";
    }
  };
  A.BoundClosure.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!(other instanceof A.BoundClosure))
        return false;
      return this.$_target === other.$_target && this._receiver === other._receiver;
    },
    get$hashCode(_) {
      return (A.objectHashCode(this._receiver) ^ A.Primitives_objectHashCode(this.$_target)) >>> 0;
    },
    toString$0(_) {
      return "Closure '" + this.$_name + "' of " + ("Instance of '" + A.Primitives_objectTypeName(this._receiver) + "'");
    }
  };
  A._CyclicInitializationError.prototype = {
    toString$0(_) {
      return "Reading static variable '" + this.variableName + "' during its initialization";
    }
  };
  A.RuntimeError.prototype = {
    toString$0(_) {
      return "RuntimeError: " + this.message;
    }
  };
  A.JsLinkedHashMap.prototype = {
    get$length(_) {
      return this.__js_helper$_length;
    },
    get$keys() {
      return new A.LinkedHashMapKeyIterable(this, A._instanceType(this)._eval$1("LinkedHashMapKeyIterable<1>"));
    },
    $index(_, key) {
      var strings, cell, t1, nums, _null = null;
      if (typeof key == "string") {
        strings = this._strings;
        if (strings == null)
          return _null;
        cell = strings[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return _null;
        cell = nums[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else
        return this.internalGet$1(key);
    },
    internalGet$1(key) {
      var bucket, index,
        rest = this.__js_helper$_rest;
      if (rest == null)
        return null;
      bucket = rest[this.internalComputeHashCode$1(key)];
      index = this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      return bucket[index].hashMapCellValue;
    },
    $indexSet(_, key, value) {
      var strings, nums, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      if (typeof key == "string") {
        strings = _this._strings;
        _this._addHashTableEntry$3(strings == null ? _this._strings = _this._newHashTable$0() : strings, key, value);
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = _this._nums;
        _this._addHashTableEntry$3(nums == null ? _this._nums = _this._newHashTable$0() : nums, key, value);
      } else
        _this.internalSet$2(key, value);
    },
    internalSet$2(key, value) {
      var rest, hash, bucket, index, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      rest = _this.__js_helper$_rest;
      if (rest == null)
        rest = _this.__js_helper$_rest = _this._newHashTable$0();
      hash = _this.internalComputeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._newLinkedCell$2(key, value)];
      else {
        index = _this.internalFindBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index].hashMapCellValue = value;
        else
          bucket.push(_this._newLinkedCell$2(key, value));
      }
    },
    forEach$1(_, action) {
      var cell, modifications, _this = this;
      A._instanceType(_this)._eval$1("~(1,2)")._as(action);
      cell = _this._first;
      modifications = _this._modifications;
      for (; cell != null;) {
        action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);
        if (modifications !== _this._modifications)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        cell = cell._next;
      }
    },
    _addHashTableEntry$3(table, key, value) {
      var cell,
        t1 = A._instanceType(this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      cell = table[key];
      if (cell == null)
        table[key] = this._newLinkedCell$2(key, value);
      else
        cell.hashMapCellValue = value;
    },
    _modified$0() {
      this._modifications = this._modifications + 1 & 1073741823;
    },
    _newLinkedCell$2(key, value) {
      var _this = this,
        t1 = A._instanceType(_this),
        cell = new A.LinkedHashMapCell(t1._precomputed1._as(key), t1._rest[1]._as(value));
      if (_this._first == null)
        _this._first = _this._last = cell;
      else {
        t1 = _this._last;
        t1.toString;
        cell._previous = t1;
        _this._last = t1._next = cell;
      }
      ++_this.__js_helper$_length;
      _this._modified$0();
      return cell;
    },
    internalComputeHashCode$1(key) {
      return J.get$hashCode$(key) & 0x3fffffff;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    _newHashTable$0() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    $isLinkedHashMap: 1
  };
  A.LinkedHashMapCell.prototype = {};
  A.LinkedHashMapKeyIterable.prototype = {
    get$length(_) {
      return this._map.__js_helper$_length;
    },
    get$iterator(_) {
      var t1 = this._map,
        t2 = new A.LinkedHashMapKeyIterator(t1, t1._modifications, this.$ti._eval$1("LinkedHashMapKeyIterator<1>"));
      t2._cell = t1._first;
      return t2;
    }
  };
  A.LinkedHashMapKeyIterator.prototype = {
    get$current() {
      return this.__js_helper$_current;
    },
    moveNext$0() {
      var cell, _this = this,
        t1 = _this._map;
      if (_this._modifications !== t1._modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      cell = _this._cell;
      if (cell == null) {
        _this.set$__js_helper$_current(null);
        return false;
      } else {
        _this.set$__js_helper$_current(cell.hashMapCellKey);
        _this._cell = cell._next;
        return true;
      }
    },
    set$__js_helper$_current(_current) {
      this.__js_helper$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.initHooks_closure.prototype = {
    call$1(o) {
      return this.getTag(o);
    },
    $signature: 14
  };
  A.initHooks_closure0.prototype = {
    call$2(o, tag) {
      return this.getUnknownTag(o, tag);
    },
    $signature: 15
  };
  A.initHooks_closure1.prototype = {
    call$1(tag) {
      return this.prototypeForTag(A._asString(tag));
    },
    $signature: 16
  };
  A.StringMatch.prototype = {$isMatch: 1};
  A._StringAllMatchesIterator.prototype = {
    moveNext$0() {
      var index, end, _this = this,
        t1 = _this.__js_helper$_index,
        t2 = _this._pattern,
        t3 = t2.length,
        t4 = _this._input,
        t5 = t4.length;
      if (t1 + t3 > t5) {
        _this.__js_helper$_current = null;
        return false;
      }
      index = t4.indexOf(t2, t1);
      if (index < 0) {
        _this.__js_helper$_index = t5 + 1;
        _this.__js_helper$_current = null;
        return false;
      }
      end = index + t3;
      _this.__js_helper$_current = new A.StringMatch(index, t2);
      _this.__js_helper$_index = end === _this.__js_helper$_index ? end + 1 : end;
      return true;
    },
    get$current() {
      var t1 = this.__js_helper$_current;
      t1.toString;
      return t1;
    },
    $isIterator: 1
  };
  A._Cell.prototype = {
    _readLocal$0() {
      var t1 = this._value;
      if (t1 === this)
        throw A.wrapException(new A.LateError("Local '" + this._name + "' has not been initialized."));
      return t1;
    },
    _readField$0() {
      var t1 = this._value;
      if (t1 === this)
        throw A.wrapException(A.LateError$fieldNI(this._name));
      return t1;
    }
  };
  A.Rti.prototype = {
    _eval$1(recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, this, recipe);
    },
    _bind$1(typeOrTuple) {
      return A._Universe_bind(init.typeUniverse, this, typeOrTuple);
    }
  };
  A._FunctionParameters.prototype = {};
  A._Type.prototype = {
    toString$0(_) {
      return A._rtiToString(this._rti, null);
    }
  };
  A._Error.prototype = {
    toString$0(_) {
      return this.__rti$_message;
    }
  };
  A._TypeError.prototype = {$isTypeError: 1};
  A._AsyncRun__initializeScheduleImmediate_internalCallback.prototype = {
    call$1(_) {
      var t1 = this._box_0,
        f = t1.storedCallback;
      t1.storedCallback = null;
      f.call$0();
    },
    $signature: 11
  };
  A._AsyncRun__initializeScheduleImmediate_closure.prototype = {
    call$1(callback) {
      var t1, t2;
      this._box_0.storedCallback = type$.void_Function._as(callback);
      t1 = this.div;
      t2 = this.span;
      t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);
    },
    $signature: 17
  };
  A._AsyncRun__scheduleImmediateJsOverride_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 12
  };
  A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 12
  };
  A._TimerImpl.prototype = {
    _TimerImpl$2(milliseconds, callback) {
      if (self.setTimeout != null)
        self.setTimeout(A.convertDartClosureToJS(new A._TimerImpl_internalCallback(this, callback), 0), milliseconds);
      else
        throw A.wrapException(A.UnsupportedError$("`setTimeout()` not found."));
    }
  };
  A._TimerImpl_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 0
  };
  A._AsyncAwaitCompleter.prototype = {
    complete$1(_, value) {
      var t2, _this = this,
        t1 = _this.$ti;
      t1._eval$1("1/?")._as(value);
      if (value == null)
        value = t1._precomputed1._as(value);
      if (!_this.isSync)
        _this._future._asyncComplete$1(value);
      else {
        t2 = _this._future;
        if (t1._eval$1("Future<1>")._is(value))
          t2._chainFuture$1(value);
        else
          t2._completeWithValue$1(value);
      }
    },
    completeError$2(e, st) {
      var t1 = this._future;
      if (this.isSync)
        t1._completeError$2(e, st);
      else
        t1._asyncCompleteError$2(e, st);
    }
  };
  A._awaitOnObject_closure.prototype = {
    call$1(result) {
      return this.bodyFunction.call$2(0, result);
    },
    $signature: 18
  };
  A._awaitOnObject_closure0.prototype = {
    call$2(error, stackTrace) {
      this.bodyFunction.call$2(1, new A.ExceptionAndStackTrace(error, type$.StackTrace._as(stackTrace)));
    },
    $signature: 19
  };
  A._wrapJsFunctionForAsync_closure.prototype = {
    call$2(errorCode, result) {
      this.$protected(A._asInt(errorCode), result);
    },
    $signature: 20
  };
  A.AsyncError.prototype = {
    toString$0(_) {
      return A.S(this.error);
    },
    $isError: 1,
    get$stackTrace() {
      return this.stackTrace;
    }
  };
  A._Completer.prototype = {
    completeError$2(error, stackTrace) {
      var t1;
      A.checkNotNullable(error, "error", type$.Object);
      t1 = this.future;
      if ((t1._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      t1._asyncCompleteError$2(error, stackTrace);
    }
  };
  A._AsyncCompleter.prototype = {
    complete$1(_, value) {
      var t2,
        t1 = this.$ti;
      t1._eval$1("1/?")._as(value);
      t2 = this.future;
      if ((t2._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      t2._asyncComplete$1(t1._eval$1("1/")._as(value));
    }
  };
  A._FutureListener.prototype = {
    matchesErrorTest$1(asyncError) {
      if ((this.state & 15) !== 6)
        return true;
      return this.result._zone.runUnary$2$2(type$.bool_Function_Object._as(this.callback), asyncError.error, type$.bool, type$.Object);
    },
    handleError$1(asyncError) {
      var exception, _this = this,
        errorCallback = _this.errorCallback,
        result = null,
        t1 = type$.dynamic,
        t2 = type$.Object,
        t3 = asyncError.error,
        t4 = _this.result._zone;
      if (type$.dynamic_Function_Object_StackTrace._is(errorCallback))
        result = t4.runBinary$3$3(errorCallback, t3, asyncError.stackTrace, t1, t2, type$.StackTrace);
      else
        result = t4.runUnary$2$2(type$.dynamic_Function_Object._as(errorCallback), t3, t1, t2);
      try {
        t1 = _this.$ti._eval$1("2/")._as(result);
        return t1;
      } catch (exception) {
        if (type$.TypeError._is(A.unwrapException(exception))) {
          if ((_this.state & 1) !== 0)
            throw A.wrapException(A.ArgumentError$("The error handler of Future.then must return a value of the returned future's type", "onError"));
          throw A.wrapException(A.ArgumentError$("The error handler of Future.catchError must return a value of the future's type", "onError"));
        } else
          throw exception;
      }
    }
  };
  A._Future.prototype = {
    _setChained$1(source) {
      this._state = this._state & 1 | 4;
      this._resultOrListeners = source;
    },
    then$1$2$onError(f, onError, $R) {
      var currentZone, result, t2,
        t1 = this.$ti;
      t1._bind$1($R)._eval$1("1/(2)")._as(f);
      currentZone = $.Zone__current;
      if (currentZone === B.C__RootZone) {
        if (onError != null && !type$.dynamic_Function_Object_StackTrace._is(onError) && !type$.dynamic_Function_Object._is(onError))
          throw A.wrapException(A.ArgumentError$value(onError, "onError", string$.Error_));
      } else {
        $R._eval$1("@<0/>")._bind$1(t1._precomputed1)._eval$1("1(2)")._as(f);
        if (onError != null)
          onError = A._registerErrorHandler(onError, currentZone);
      }
      result = new A._Future(currentZone, $R._eval$1("_Future<0>"));
      t2 = onError == null ? 1 : 3;
      this._addListener$1(new A._FutureListener(result, t2, f, onError, t1._eval$1("@<1>")._bind$1($R)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    then$1$1(f, $R) {
      return this.then$1$2$onError(f, null, $R);
    },
    _thenAwait$1$2(f, onError, $E) {
      var result,
        t1 = this.$ti;
      t1._bind$1($E)._eval$1("1/(2)")._as(f);
      result = new A._Future($.Zone__current, $E._eval$1("_Future<0>"));
      this._addListener$1(new A._FutureListener(result, 3, f, onError, t1._eval$1("@<1>")._bind$1($E)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    _setErrorObject$1(error) {
      this._state = this._state & 1 | 16;
      this._resultOrListeners = error;
    },
    _cloneResult$1(source) {
      this._state = source._state & 30 | this._state & 1;
      this._resultOrListeners = source._resultOrListeners;
    },
    _addListener$1(listener) {
      var source, _this = this,
        t1 = _this._state;
      if (t1 <= 3) {
        listener._nextListener = type$.nullable__FutureListener_dynamic_dynamic._as(_this._resultOrListeners);
        _this._resultOrListeners = listener;
      } else {
        if ((t1 & 4) !== 0) {
          source = type$._Future_dynamic._as(_this._resultOrListeners);
          if ((source._state & 24) === 0) {
            source._addListener$1(listener);
            return;
          }
          _this._cloneResult$1(source);
        }
        A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__addListener_closure(_this, listener)));
      }
    },
    _prependListeners$1(listeners) {
      var t1, existingListeners, next, cursor, next0, source, _this = this, _box_0 = {};
      _box_0.listeners = listeners;
      if (listeners == null)
        return;
      t1 = _this._state;
      if (t1 <= 3) {
        existingListeners = type$.nullable__FutureListener_dynamic_dynamic._as(_this._resultOrListeners);
        _this._resultOrListeners = listeners;
        if (existingListeners != null) {
          next = listeners._nextListener;
          for (cursor = listeners; next != null; cursor = next, next = next0)
            next0 = next._nextListener;
          cursor._nextListener = existingListeners;
        }
      } else {
        if ((t1 & 4) !== 0) {
          source = type$._Future_dynamic._as(_this._resultOrListeners);
          if ((source._state & 24) === 0) {
            source._prependListeners$1(listeners);
            return;
          }
          _this._cloneResult$1(source);
        }
        _box_0.listeners = _this._reverseListeners$1(listeners);
        A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__prependListeners_closure(_box_0, _this)));
      }
    },
    _removeListeners$0() {
      var current = type$.nullable__FutureListener_dynamic_dynamic._as(this._resultOrListeners);
      this._resultOrListeners = null;
      return this._reverseListeners$1(current);
    },
    _reverseListeners$1(listeners) {
      var current, prev, next;
      for (current = listeners, prev = null; current != null; prev = current, current = next) {
        next = current._nextListener;
        current._nextListener = prev;
      }
      return prev;
    },
    _chainForeignFuture$1(source) {
      var e, s, exception, _this = this;
      _this._state ^= 2;
      try {
        source.then$1$2$onError(new A._Future__chainForeignFuture_closure(_this), new A._Future__chainForeignFuture_closure0(_this), type$.Null);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A.scheduleMicrotask(new A._Future__chainForeignFuture_closure1(_this, e, s));
      }
    },
    _completeWithValue$1(value) {
      var listeners, _this = this;
      _this.$ti._precomputed1._as(value);
      listeners = _this._removeListeners$0();
      _this._state = 8;
      _this._resultOrListeners = value;
      A._Future__propagateToListeners(_this, listeners);
    },
    _completeError$2(error, stackTrace) {
      var listeners;
      type$.StackTrace._as(stackTrace);
      listeners = this._removeListeners$0();
      this._setErrorObject$1(A.AsyncError$(error, stackTrace));
      A._Future__propagateToListeners(this, listeners);
    },
    _asyncComplete$1(value) {
      var t1 = this.$ti;
      t1._eval$1("1/")._as(value);
      if (t1._eval$1("Future<1>")._is(value)) {
        this._chainFuture$1(value);
        return;
      }
      this._asyncCompleteWithValue$1(value);
    },
    _asyncCompleteWithValue$1(value) {
      var _this = this;
      _this.$ti._precomputed1._as(value);
      _this._state ^= 2;
      A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__asyncCompleteWithValue_closure(_this, value)));
    },
    _chainFuture$1(value) {
      var t1 = this.$ti;
      t1._eval$1("Future<1>")._as(value);
      if (t1._is(value)) {
        A._Future__chainCoreFutureAsync(value, this);
        return;
      }
      this._chainForeignFuture$1(value);
    },
    _asyncCompleteError$2(error, stackTrace) {
      this._state ^= 2;
      A._rootScheduleMicrotask(null, null, this._zone, type$.void_Function._as(new A._Future__asyncCompleteError_closure(this, error, stackTrace)));
    },
    $isFuture: 1
  };
  A._Future__addListener_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this.listener);
    },
    $signature: 0
  };
  A._Future__prependListeners_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this._box_0.listeners);
    },
    $signature: 0
  };
  A._Future__chainForeignFuture_closure.prototype = {
    call$1(value) {
      var error, stackTrace, exception,
        t1 = this.$this;
      t1._state ^= 2;
      try {
        t1._completeWithValue$1(t1.$ti._precomputed1._as(value));
      } catch (exception) {
        error = A.unwrapException(exception);
        stackTrace = A.getTraceFromException(exception);
        t1._completeError$2(error, stackTrace);
      }
    },
    $signature: 11
  };
  A._Future__chainForeignFuture_closure0.prototype = {
    call$2(error, stackTrace) {
      this.$this._completeError$2(type$.Object._as(error), type$.StackTrace._as(stackTrace));
    },
    $signature: 21
  };
  A._Future__chainForeignFuture_closure1.prototype = {
    call$0() {
      this.$this._completeError$2(this.e, this.s);
    },
    $signature: 0
  };
  A._Future__chainCoreFutureAsync_closure.prototype = {
    call$0() {
      A._Future__chainCoreFutureSync(this._box_0.source, this.target);
    },
    $signature: 0
  };
  A._Future__asyncCompleteWithValue_closure.prototype = {
    call$0() {
      this.$this._completeWithValue$1(this.value);
    },
    $signature: 0
  };
  A._Future__asyncCompleteError_closure.prototype = {
    call$0() {
      this.$this._completeError$2(this.error, this.stackTrace);
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback.prototype = {
    call$0() {
      var e, s, t1, exception, t2, originalSource, _this = this, completeResult = null;
      try {
        t1 = _this._box_0.listener;
        completeResult = t1.result._zone.run$1$1(type$.dynamic_Function._as(t1.callback), type$.dynamic);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = _this.hasError && type$.AsyncError._as(_this._box_1.source._resultOrListeners).error === e;
        t2 = _this._box_0;
        if (t1)
          t2.listenerValueOrError = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        else
          t2.listenerValueOrError = A.AsyncError$(e, s);
        t2.listenerHasError = true;
        return;
      }
      if (completeResult instanceof A._Future && (completeResult._state & 24) !== 0) {
        if ((completeResult._state & 16) !== 0) {
          t1 = _this._box_0;
          t1.listenerValueOrError = type$.AsyncError._as(completeResult._resultOrListeners);
          t1.listenerHasError = true;
        }
        return;
      }
      if (completeResult instanceof A._Future) {
        originalSource = _this._box_1.source;
        t1 = _this._box_0;
        t1.listenerValueOrError = completeResult.then$1$1(new A._Future__propagateToListeners_handleWhenCompleteCallback_closure(originalSource), type$.dynamic);
        t1.listenerHasError = false;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback_closure.prototype = {
    call$1(_) {
      return this.originalSource;
    },
    $signature: 22
  };
  A._Future__propagateToListeners_handleValueCallback.prototype = {
    call$0() {
      var e, s, t1, t2, t3, t4, t5, exception;
      try {
        t1 = this._box_0;
        t2 = t1.listener;
        t3 = t2.$ti;
        t4 = t3._precomputed1;
        t5 = t4._as(this.sourceResult);
        t1.listenerValueOrError = t2.result._zone.runUnary$2$2(t3._eval$1("2/(1)")._as(t2.callback), t5, t3._eval$1("2/"), t4);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = this._box_0;
        t1.listenerValueOrError = A.AsyncError$(e, s);
        t1.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleError.prototype = {
    call$0() {
      var asyncError, e, s, t1, exception, t2, _this = this;
      try {
        asyncError = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        t1 = _this._box_0;
        if (t1.listener.matchesErrorTest$1(asyncError) && t1.listener.errorCallback != null) {
          t1.listenerValueOrError = t1.listener.handleError$1(asyncError);
          t1.listenerHasError = false;
        }
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        t2 = _this._box_0;
        if (t1.error === e)
          t2.listenerValueOrError = t1;
        else
          t2.listenerValueOrError = A.AsyncError$(e, s);
        t2.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._AsyncCallbackEntry.prototype = {};
  A.Stream.prototype = {
    get$length(_) {
      var t2, t3, _this = this, t1 = {},
        future = new A._Future($.Zone__current, type$._Future_int);
      t1.count = 0;
      t2 = A._instanceType(_this);
      t3 = t2._eval$1("~(1)?")._as(new A.Stream_length_closure(t1, _this));
      type$.nullable_void_Function._as(new A.Stream_length_closure0(t1, future));
      A._EventStreamSubscription$(_this._target, _this._eventType, t3, false, t2._precomputed1);
      return future;
    }
  };
  A.Stream_length_closure.prototype = {
    call$1(_) {
      A._instanceType(this.$this)._precomputed1._as(_);
      ++this._box_0.count;
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(1)");
    }
  };
  A.Stream_length_closure0.prototype = {
    call$0() {
      var t1 = this.future,
        t2 = t1.$ti,
        t3 = t2._eval$1("1/")._as(this._box_0.count),
        listeners = t1._removeListeners$0();
      t2._precomputed1._as(t3);
      t1._state = 8;
      t1._resultOrListeners = t3;
      A._Future__propagateToListeners(t1, listeners);
    },
    $signature: 0
  };
  A._StreamIterator.prototype = {};
  A._Zone.prototype = {$isZone: 1};
  A._rootHandleError_closure.prototype = {
    call$0() {
      A.Error_throwWithStackTrace(this.error, this.stackTrace);
    },
    $signature: 0
  };
  A._RootZone.prototype = {
    runGuarded$1(f) {
      var e, s, exception;
      type$.void_Function._as(f);
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$0();
          return;
        }
        A._rootRun(null, null, this, f, type$.void);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    runUnaryGuarded$1$2(f, arg, $T) {
      var e, s, exception;
      $T._eval$1("~(0)")._as(f);
      $T._as(arg);
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$1(arg);
          return;
        }
        A._rootRunUnary(null, null, this, f, arg, type$.void, $T);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    bindCallbackGuarded$1(f) {
      return new A._RootZone_bindCallbackGuarded_closure(this, type$.void_Function._as(f));
    },
    bindUnaryCallbackGuarded$1$1(f, $T) {
      return new A._RootZone_bindUnaryCallbackGuarded_closure(this, $T._eval$1("~(0)")._as(f), $T);
    },
    run$1$1(f, $R) {
      $R._eval$1("0()")._as(f);
      if ($.Zone__current === B.C__RootZone)
        return f.call$0();
      return A._rootRun(null, null, this, f, $R);
    },
    runUnary$2$2(f, arg, $R, $T) {
      $R._eval$1("@<0>")._bind$1($T)._eval$1("1(2)")._as(f);
      $T._as(arg);
      if ($.Zone__current === B.C__RootZone)
        return f.call$1(arg);
      return A._rootRunUnary(null, null, this, f, arg, $R, $T);
    },
    runBinary$3$3(f, arg1, arg2, $R, T1, T2) {
      $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(f);
      T1._as(arg1);
      T2._as(arg2);
      if ($.Zone__current === B.C__RootZone)
        return f.call$2(arg1, arg2);
      return A._rootRunBinary(null, null, this, f, arg1, arg2, $R, T1, T2);
    },
    registerBinaryCallback$3$1(f, $R, T1, T2) {
      return $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(f);
    }
  };
  A._RootZone_bindCallbackGuarded_closure.prototype = {
    call$0() {
      return this.$this.runGuarded$1(this.f);
    },
    $signature: 0
  };
  A._RootZone_bindUnaryCallbackGuarded_closure.prototype = {
    call$1(arg) {
      var t1 = this.T;
      return this.$this.runUnaryGuarded$1$2(this.f, t1._as(arg), t1);
    },
    $signature() {
      return this.T._eval$1("~(0)");
    }
  };
  A.LinkedHashMap_LinkedHashMap$from_closure.prototype = {
    call$2(k, v) {
      this.result.$indexSet(0, this.K._as(k), this.V._as(v));
    },
    $signature: 23
  };
  A.ListBase.prototype = {
    get$iterator(receiver) {
      return new A.ListIterator(receiver, this.get$length(receiver), A.instanceType(receiver)._eval$1("ListIterator<ListBase.E>"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    sublist$2(receiver, start, end) {
      var t1,
        listLength = this.get$length(receiver);
      A.RangeError_checkValidRange(start, listLength, listLength);
      A.RangeError_checkValidRange(start, listLength, this.get$length(receiver));
      t1 = A.instanceType(receiver);
      A.RangeError_checkNotNegative(start, "start");
      A.RangeError_checkNotNegative(listLength, "end");
      if (start > listLength)
        A.throwExpression(A.RangeError$range(start, 0, listLength, "start", null));
      return A.List_List$from(new A.SubListIterable(receiver, start, listLength, t1._eval$1("SubListIterable<ListBase.E>")), t1._eval$1("ListBase.E"));
    },
    sublist$1($receiver, start) {
      return this.sublist$2($receiver, start, null);
    },
    toString$0(receiver) {
      return A.Iterable_iterableToFullString(receiver, "[", "]");
    },
    $isIterable: 1,
    $isList: 1
  };
  A.MapBase.prototype = {
    forEach$1(_, action) {
      var t2, key, t3,
        t1 = A._instanceType(this);
      t1._eval$1("~(MapBase.K,MapBase.V)")._as(action);
      for (t2 = J.get$iterator$ax(this.get$keys()), t1 = t1._eval$1("MapBase.V"); t2.moveNext$0();) {
        key = t2.get$current();
        t3 = this.$index(0, key);
        action.call$2(key, t3 == null ? t1._as(t3) : t3);
      }
    },
    get$length(_) {
      return J.get$length$asx(this.get$keys());
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    $isMap: 1
  };
  A.MapBase_mapToString_closure.prototype = {
    call$2(k, v) {
      var t2,
        t1 = this._box_0;
      if (!t1.first)
        this.result._contents += ", ";
      t1.first = false;
      t1 = this.result;
      t2 = t1._contents += A.S(k);
      t1._contents = t2 + ": ";
      t1._contents += A.S(v);
    },
    $signature: 24
  };
  A.Error.prototype = {
    get$stackTrace() {
      return A.getTraceFromException(this.$thrownJsError);
    }
  };
  A.AssertionError.prototype = {
    toString$0(_) {
      var t1 = this.message;
      if (t1 != null)
        return "Assertion failed: " + A.Error_safeToString(t1);
      return "Assertion failed";
    }
  };
  A.TypeError.prototype = {};
  A.ArgumentError.prototype = {
    get$_errorName() {
      return "Invalid argument" + (!this._hasValue ? "(s)" : "");
    },
    get$_errorExplanation() {
      return "";
    },
    toString$0(_) {
      var _this = this,
        $name = _this.name,
        nameString = $name == null ? "" : " (" + $name + ")",
        message = _this.message,
        messageString = message == null ? "" : ": " + message,
        prefix = _this.get$_errorName() + nameString + messageString;
      if (!_this._hasValue)
        return prefix;
      return prefix + _this.get$_errorExplanation() + ": " + A.Error_safeToString(_this.get$invalidValue());
    },
    get$invalidValue() {
      return this.invalidValue;
    }
  };
  A.RangeError.prototype = {
    get$invalidValue() {
      return A._asNumQ(this.invalidValue);
    },
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      var explanation,
        start = this.start,
        end = this.end;
      if (start == null)
        explanation = end != null ? ": Not less than or equal to " + A.S(end) : "";
      else if (end == null)
        explanation = ": Not greater than or equal to " + A.S(start);
      else if (end > start)
        explanation = ": Not in inclusive range " + A.S(start) + ".." + A.S(end);
      else
        explanation = end < start ? ": Valid value range is empty" : ": Only valid value is " + A.S(start);
      return explanation;
    }
  };
  A.IndexError.prototype = {
    get$invalidValue() {
      return A._asInt(this.invalidValue);
    },
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      if (A._asInt(this.invalidValue) < 0)
        return ": index must not be negative";
      var t1 = this.length;
      if (t1 === 0)
        return ": no indices are valid";
      return ": index should be less than " + t1;
    },
    get$length(receiver) {
      return this.length;
    }
  };
  A.UnsupportedError.prototype = {
    toString$0(_) {
      return "Unsupported operation: " + this.message;
    }
  };
  A.UnimplementedError.prototype = {
    toString$0(_) {
      return "UnimplementedError: " + this.message;
    }
  };
  A.StateError.prototype = {
    toString$0(_) {
      return "Bad state: " + this.message;
    }
  };
  A.ConcurrentModificationError.prototype = {
    toString$0(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + A.Error_safeToString(t1) + ".";
    }
  };
  A.StackOverflowError.prototype = {
    toString$0(_) {
      return "Stack Overflow";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A._Exception.prototype = {
    toString$0(_) {
      return "Exception: " + this.message;
    }
  };
  A.FormatException.prototype = {
    toString$0(_) {
      var message = this.message,
        report = "" !== message ? "FormatException: " + message : "FormatException",
        source = this.source;
      if (typeof source == "string") {
        if (source.length > 78)
          source = B.JSString_methods.substring$2(source, 0, 75) + "...";
        return report + "\n" + source;
      } else
        return report;
    }
  };
  A.Iterable.prototype = {
    get$length(_) {
      var count,
        it = this.get$iterator(this);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    elementAt$1(_, index) {
      var iterator, skipCount;
      A.RangeError_checkNotNegative(index, "index");
      iterator = this.get$iterator(this);
      for (skipCount = index; iterator.moveNext$0();) {
        if (skipCount === 0)
          return iterator.get$current();
        --skipCount;
      }
      throw A.wrapException(A.IndexError$withLength(index, index - skipCount, this, "index"));
    },
    toString$0(_) {
      return A.Iterable_iterableToShortString(this, "(", ")");
    }
  };
  A.Null.prototype = {
    get$hashCode(_) {
      return A.Object.prototype.get$hashCode.call(this, this);
    },
    toString$0(_) {
      return "null";
    }
  };
  A.Object.prototype = {$isObject: 1,
    $eq(_, other) {
      return this === other;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(this);
    },
    toString$0(_) {
      return "Instance of '" + A.Primitives_objectTypeName(this) + "'";
    },
    get$runtimeType(_) {
      return A.getRuntimeTypeOfDartObject(this);
    },
    toString() {
      return this.toString$0(this);
    }
  };
  A._StringStackTrace.prototype = {
    toString$0(_) {
      return "";
    },
    $isStackTrace: 1
  };
  A.StringBuffer.prototype = {
    get$length(_) {
      return this._contents.length;
    },
    toString$0(_) {
      var t1 = this._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.HtmlElement.prototype = {};
  A.AnchorElement.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.AreaElement.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.Blob.prototype = {};
  A.ButtonElement.prototype = {
    get$value(receiver) {
      var t1 = receiver.value;
      t1.toString;
      return t1;
    },
    $isButtonElement: 1
  };
  A.CharacterData.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.CssStyleDeclaration.prototype = {
    _browserPropertyName$1(receiver, propertyName) {
      var t1 = $.$get$CssStyleDeclaration__propertyCache(),
        $name = t1[propertyName];
      if (typeof $name == "string")
        return $name;
      $name = this._supportedBrowserPropertyName$1(receiver, propertyName);
      t1[propertyName] = $name;
      return $name;
    },
    _supportedBrowserPropertyName$1(receiver, propertyName) {
      var prefixed,
        t1 = propertyName.replace(/^-ms-/, "ms-").replace(/-([\da-z])/ig, function(_, letter) {
          return letter.toUpperCase();
        });
      t1.toString;
      t1 = t1 in receiver;
      t1.toString;
      if (t1)
        return propertyName;
      prefixed = $.$get$Device_cssPrefix() + propertyName;
      t1 = prefixed in receiver;
      t1.toString;
      if (t1)
        return prefixed;
      return propertyName;
    },
    _setPropertyHelper$3(receiver, propertyName, value, priority) {
      receiver.setProperty(propertyName, value, priority);
    },
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    }
  };
  A.CssStyleDeclarationBase.prototype = {};
  A.DataElement.prototype = {
    get$value(receiver) {
      return receiver.value;
    }
  };
  A.DivElement.prototype = {$isDivElement: 1};
  A.DomException.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.DomRectReadOnly.prototype = {
    toString$0(receiver) {
      var t2, t3, t4,
        t1 = receiver.left;
      t1.toString;
      t2 = receiver.top;
      t2.toString;
      t3 = receiver.width;
      t3.toString;
      t4 = receiver.height;
      t4.toString;
      return "Rectangle (" + A.S(t1) + ", " + A.S(t2) + ") " + A.S(t3) + " x " + A.S(t4);
    },
    $eq(receiver, other) {
      var t1, t2;
      if (other == null)
        return false;
      if (type$.Rectangle_num._is(other)) {
        t1 = receiver.left;
        t1.toString;
        t2 = J.getInterceptor$x(other);
        if (t1 === t2.get$left(other)) {
          t1 = receiver.top;
          t1.toString;
          if (t1 === t2.get$top(other)) {
            t1 = receiver.width;
            t1.toString;
            if (t1 === t2.get$width(other)) {
              t1 = receiver.height;
              t1.toString;
              t2 = t1 === t2.get$height(other);
              t1 = t2;
            } else
              t1 = false;
          } else
            t1 = false;
        } else
          t1 = false;
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(receiver) {
      var t2, t3, t4,
        t1 = receiver.left;
      t1.toString;
      t2 = receiver.top;
      t2.toString;
      t3 = receiver.width;
      t3.toString;
      t4 = receiver.height;
      t4.toString;
      return A.Object_hash(t1, t2, t3, t4);
    },
    containsPoint$1(receiver, another) {
      var t1, t2, t3;
      type$.Point_num._as(another);
      t1 = another.x;
      t2 = receiver.left;
      t2.toString;
      if (t1 >= t2) {
        t3 = receiver.width;
        t3.toString;
        if (t1 <= t2 + t3) {
          t1 = another.y;
          t2 = receiver.top;
          t2.toString;
          if (t1 >= t2) {
            t3 = receiver.height;
            t3.toString;
            t3 = t1 <= t2 + t3;
            t1 = t3;
          } else
            t1 = false;
        } else
          t1 = false;
      } else
        t1 = false;
      return t1;
    },
    get$bottom(receiver) {
      var t1 = receiver.bottom;
      t1.toString;
      return t1;
    },
    get$height(receiver) {
      var t1 = receiver.height;
      t1.toString;
      return t1;
    },
    get$left(receiver) {
      var t1 = receiver.left;
      t1.toString;
      return t1;
    },
    get$right(receiver) {
      var t1 = receiver.right;
      t1.toString;
      return t1;
    },
    get$top(receiver) {
      var t1 = receiver.top;
      t1.toString;
      return t1;
    },
    get$width(receiver) {
      var t1 = receiver.width;
      t1.toString;
      return t1;
    },
    $isRectangle: 1
  };
  A.Element.prototype = {
    toString$0(receiver) {
      var t1 = receiver.localName;
      t1.toString;
      return t1;
    },
    insertAdjacentHtml$4$treeSanitizer$validator(receiver, where, html, treeSanitizer, validator) {
      receiver.insertAdjacentHTML(where, html);
    },
    set$id(receiver, value) {
      receiver.id = value;
    },
    querySelector$1(receiver, selectors) {
      return receiver.querySelector(selectors);
    },
    $isElement: 1
  };
  A.Event.prototype = {$isEvent: 1};
  A.EventTarget.prototype = {
    addEventListener$3(receiver, type, listener, useCapture) {
      type$.nullable_dynamic_Function_Event._as(listener);
      if (listener != null)
        this._addEventListener$3(receiver, type, listener, useCapture);
    },
    addEventListener$2($receiver, type, listener) {
      return this.addEventListener$3($receiver, type, listener, null);
    },
    _addEventListener$3(receiver, type, listener, options) {
      return receiver.addEventListener(type, A.convertDartClosureToJS(type$.nullable_dynamic_Function_Event._as(listener), 1), options);
    },
    $isEventTarget: 1
  };
  A.File.prototype = {$isFile: 1};
  A.FileList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.FormElement.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.HtmlCollection.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.ImageElement.prototype = {$isImageElement: 1};
  A.InputElement.prototype = {
    set$checked(receiver, value) {
      receiver.checked = value;
    },
    set$disabled(receiver, value) {
      receiver.disabled = true;
    },
    set$multiple(receiver, value) {
      receiver.multiple = true;
    },
    set$name(receiver, value) {
      receiver.name = value;
    },
    set$readOnly(receiver, value) {
      receiver.readOnly = value;
    },
    set$size(receiver, value) {
      receiver.size = value;
    },
    set$type(receiver, value) {
      receiver.type = value;
    },
    get$value(receiver) {
      return receiver.value;
    },
    set$value(receiver, value) {
      receiver.value = value;
    },
    $isInputElement: 1,
    $isTextInputElement: 1
  };
  A.KeyboardEvent.prototype = {$isKeyboardEvent: 1};
  A.LIElement.prototype = {
    get$value(receiver) {
      var t1 = receiver.value;
      t1.toString;
      return t1;
    }
  };
  A.Location.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.MeterElement.prototype = {
    get$value(receiver) {
      return receiver.value;
    }
  };
  A.MouseEvent.prototype = {$isMouseEvent: 1};
  A.Node.prototype = {
    remove$0(receiver) {
      var t1 = receiver.parentNode;
      if (t1 != null)
        t1.removeChild(receiver).toString;
    },
    toString$0(receiver) {
      var value = receiver.nodeValue;
      return value == null ? this.super$Interceptor$toString(receiver) : value;
    },
    $isNode: 1
  };
  A.NodeList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.OptionElement.prototype = {
    get$value(receiver) {
      var t1 = receiver.value;
      t1.toString;
      return t1;
    }
  };
  A.OutputElement.prototype = {
    get$value(receiver) {
      return receiver.value;
    }
  };
  A.ParamElement.prototype = {
    get$value(receiver) {
      var t1 = receiver.value;
      t1.toString;
      return t1;
    }
  };
  A.ProgressElement.prototype = {
    get$value(receiver) {
      var t1 = receiver.value;
      t1.toString;
      return t1;
    }
  };
  A.SelectElement.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    get$value(receiver) {
      return receiver.value;
    }
  };
  A.TableCellElement.prototype = {$isTableCellElement: 1};
  A.TableElement.prototype = {$isTableElement: 1};
  A.TableRowElement.prototype = {$isTableRowElement: 1};
  A.TextAreaElement.prototype = {
    get$value(receiver) {
      return receiver.value;
    },
    set$value(receiver, value) {
      receiver.value = value;
    }
  };
  A.Touch.prototype = {$isTouch: 1};
  A.TouchEvent.prototype = {$isTouchEvent: 1};
  A.TouchList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.UIEvent.prototype = {$isUIEvent: 1};
  A.Window.prototype = {
    scrollTo$2(receiver, options_OR_x, y) {
      this._scrollTo_3$2(receiver, options_OR_x, y);
      return;
    },
    _scrollTo_3$2(receiver, x, y) {
      return receiver.scrollTo(x, y);
    },
    $isWindowBase: 1
  };
  A._DomRect.prototype = {
    toString$0(receiver) {
      var t2, t3, t4,
        t1 = receiver.left;
      t1.toString;
      t2 = receiver.top;
      t2.toString;
      t3 = receiver.width;
      t3.toString;
      t4 = receiver.height;
      t4.toString;
      return "Rectangle (" + A.S(t1) + ", " + A.S(t2) + ") " + A.S(t3) + " x " + A.S(t4);
    },
    $eq(receiver, other) {
      var t1, t2;
      if (other == null)
        return false;
      if (type$.Rectangle_num._is(other)) {
        t1 = receiver.left;
        t1.toString;
        t2 = J.getInterceptor$x(other);
        if (t1 === t2.get$left(other)) {
          t1 = receiver.top;
          t1.toString;
          if (t1 === t2.get$top(other)) {
            t1 = receiver.width;
            t1.toString;
            if (t1 === t2.get$width(other)) {
              t1 = receiver.height;
              t1.toString;
              t2 = t1 === t2.get$height(other);
              t1 = t2;
            } else
              t1 = false;
          } else
            t1 = false;
        } else
          t1 = false;
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(receiver) {
      var t2, t3, t4,
        t1 = receiver.left;
      t1.toString;
      t2 = receiver.top;
      t2.toString;
      t3 = receiver.width;
      t3.toString;
      t4 = receiver.height;
      t4.toString;
      return A.Object_hash(t1, t2, t3, t4);
    },
    containsPoint$1(receiver, another) {
      var t1, t2, t3;
      type$.Point_num._as(another);
      t1 = another.x;
      t2 = receiver.left;
      t2.toString;
      if (t1 >= t2) {
        t3 = receiver.width;
        t3.toString;
        if (t1 <= t2 + t3) {
          t1 = another.y;
          t2 = receiver.top;
          t2.toString;
          if (t1 >= t2) {
            t3 = receiver.height;
            t3.toString;
            t3 = t1 <= t2 + t3;
            t1 = t3;
          } else
            t1 = false;
        } else
          t1 = false;
      } else
        t1 = false;
      return t1;
    },
    get$height(receiver) {
      var t1 = receiver.height;
      t1.toString;
      return t1;
    },
    get$width(receiver) {
      var t1 = receiver.width;
      t1.toString;
      return t1;
    }
  };
  A._NamedNodeMap.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.EventStreamProvider.prototype = {};
  A._EventStream.prototype = {};
  A._ElementEventStreamImpl.prototype = {};
  A._EventStreamSubscription.prototype = {$isStreamSubscription: 1};
  A._EventStreamSubscription_closure.prototype = {
    call$1(e) {
      return this.onData.call$1(type$.Event._as(e));
    },
    $signature: 5
  };
  A.ImmutableListMixin.prototype = {
    get$iterator(receiver) {
      return new A.FixedSizeListIterator(receiver, this.get$length(receiver), A.instanceType(receiver)._eval$1("FixedSizeListIterator<ImmutableListMixin.E>"));
    }
  };
  A._WrappedList.prototype = {
    get$iterator(_) {
      var t1 = this._list;
      return new A._WrappedIterator(new A.FixedSizeListIterator(t1, t1.length, A.instanceType(t1)._eval$1("FixedSizeListIterator<ImmutableListMixin.E>")), this.$ti._eval$1("_WrappedIterator<1>"));
    },
    get$length(_) {
      return this._list.length;
    },
    $index(_, index) {
      var t1 = this._list;
      if (!(index >= 0 && index < t1.length))
        return A.ioore(t1, index);
      return this.$ti._precomputed1._as(t1[index]);
    }
  };
  A._WrappedIterator.prototype = {
    moveNext$0() {
      return this._iterator.moveNext$0();
    },
    get$current() {
      var t1 = this._iterator,
        t2 = t1._html$_current;
      t1 = t2 == null ? t1.$ti._precomputed1._as(t2) : t2;
      return this.$ti._precomputed1._as(t1);
    },
    $isIterator: 1
  };
  A.FixedSizeListIterator.prototype = {
    moveNext$0() {
      var _this = this,
        nextPosition = _this._position + 1,
        t1 = _this._html$_length;
      if (nextPosition < t1) {
        _this.set$_html$_current(J.$index$asx(_this._array, nextPosition));
        _this._position = nextPosition;
        return true;
      }
      _this.set$_html$_current(null);
      _this._position = t1;
      return false;
    },
    get$current() {
      var t1 = this._html$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    set$_html$_current(_current) {
      this._html$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A._DOMWindowCrossFrame.prototype = {$isEventTarget: 1, $isWindowBase: 1};
  A._TrustedHtmlTreeSanitizer.prototype = {$isNodeTreeSanitizer: 1};
  A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase.prototype = {};
  A._FileList_JavaScriptObject_ListMixin.prototype = {};
  A._FileList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._HtmlCollection_JavaScriptObject_ListMixin.prototype = {};
  A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._NodeList_JavaScriptObject_ListMixin.prototype = {};
  A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._TouchList_JavaScriptObject_ListMixin.prototype = {};
  A._TouchList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.__NamedNodeMap_JavaScriptObject_ListMixin.prototype = {};
  A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.Point.prototype = {
    toString$0(_) {
      return "Point(" + A.S(this.x) + ", " + A.S(this.y) + ")";
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Point && this.x === other.x && this.y === other.y;
    },
    get$hashCode(_) {
      return A.SystemHash_hash2(B.JSNumber_methods.get$hashCode(this.x), B.JSNumber_methods.get$hashCode(this.y), 0);
    }
  };
  A._RectangleBase.prototype = {
    get$right(_) {
      return this.$ti._precomputed1._as(this.left + this.width);
    },
    get$bottom(_) {
      return this.$ti._precomputed1._as(this.top + this.height);
    },
    toString$0(_) {
      var _this = this;
      return "Rectangle (" + A.S(_this.left) + ", " + A.S(_this.top) + ") " + _this.width + " x " + _this.height;
    },
    $eq(_, other) {
      var t1, t2, t3, t4, _this = this;
      if (other == null)
        return false;
      if (type$.Rectangle_num._is(other)) {
        t1 = _this.left;
        t2 = J.getInterceptor$x(other);
        if (t1 === t2.get$left(other)) {
          t3 = _this.top;
          if (t3 === t2.get$top(other)) {
            t4 = _this.$ti._precomputed1;
            t1 = t4._as(t1 + _this.width) === t2.get$right(other) && t4._as(t3 + _this.height) === t2.get$bottom(other);
          } else
            t1 = false;
        } else
          t1 = false;
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.left,
        t2 = _this.top,
        t3 = _this.$ti._precomputed1;
      return A.SystemHash_hash4(B.JSNumber_methods.get$hashCode(t1), B.JSNumber_methods.get$hashCode(t2), B.JSNumber_methods.get$hashCode(t3._as(t1 + _this.width)), B.JSNumber_methods.get$hashCode(t3._as(t2 + _this.height)), 0);
    },
    containsPoint$1(_, another) {
      var t1, t2, _this = this;
      type$.Point_num._as(another);
      t1 = another.x;
      t2 = _this.left;
      if (t1 >= t2)
        if (t1 <= t2 + _this.width) {
          t1 = another.y;
          t2 = _this.top;
          t1 = t1 >= t2 && t1 <= t2 + _this.height;
        } else
          t1 = false;
      else
        t1 = false;
      return t1;
    }
  };
  A.Rectangle.prototype = {
    get$left(receiver) {
      return this.left;
    },
    get$top(receiver) {
      return this.top;
    },
    get$width(receiver) {
      return this.width;
    },
    get$height(receiver) {
      return this.height;
    }
  };
  A.BaseDialog.prototype = {
    createShowDia$0() {
      var t3, _this = this, _s1_ = "0", _s4_ = "100%",
        _s8_ = "absolute",
        t1 = document,
        t2 = t1.createElement("div");
      t2.toString;
      _this.__BaseDialog_dia_A = t2;
      if ($.DiaAttr__attr == null)
        A.DiaAttr_initAttrFromDefaults();
      t2 = t2.style;
      t2.toString;
      if ($.DiaAttr__attr == null)
        A.DiaAttr_initAttrFromDefaults();
      t3 = A._asStringQ($.DiaAttr__attr.$index(0, "DIALOG_BACKGROUND"));
      t2.background = t3 == null ? "" : t3;
      t2.textAlign = "center";
      t2.padding = "1.0em";
      t2.paddingTop = "0.5em";
      t2.margin = "1em auto";
      t2.border = _s1_;
      if ($.DiaAttr__attr == null)
        A.DiaAttr_initAttrFromDefaults();
      t3 = A.S($.DiaAttr__attr.$index(0, "DIALOG_TOPBAR_COLOR"));
      t2.borderTop = "1px solid " + t3;
      if ($.DiaAttr__attr == null)
        A.DiaAttr_initAttrFromDefaults();
      t3 = A.S($.DiaAttr__attr.$index(0, "DIALOG_BORDER_RADIUS"));
      B.CssStyleDeclaration_methods._setPropertyHelper$3(t2, B.CssStyleDeclaration_methods._browserPropertyName$1(t2, "border-radius"), t3 + "px", "");
      if ($.DiaAttr__attr == null)
        A.DiaAttr_initAttrFromDefaults();
      t3 = $.DiaAttr__attr.$index(0, "DIALOG_BOX_SHADOW");
      t3.toString;
      A._asString(t3);
      B.CssStyleDeclaration_methods._setPropertyHelper$3(t2, B.CssStyleDeclaration_methods._browserPropertyName$1(t2, "box-shadow"), t3, "");
      if ($.DiaAttr__attr == null)
        A.DiaAttr_initAttrFromDefaults();
      t3 = A.S($.DiaAttr__attr.$index(0, "DIALOG_TEXT_FONTSIZE"));
      t2.fontSize = t3 + "px";
      t2.lineHeight = _s4_;
      if ($.DiaAttr__attr == null)
        A.DiaAttr_initAttrFromDefaults();
      t3 = $.DiaAttr__attr.$index(0, "DIALOG_WIN_OPACITY");
      t3.toString;
      A._asString(t3);
      B.CssStyleDeclaration_methods._setPropertyHelper$3(t2, B.CssStyleDeclaration_methods._browserPropertyName$1(t2, "opacity"), t3, "");
      t2 = _this.__BaseDialog_isModal_A;
      t2 === $ && A.throwLateFieldNI("isModal");
      if (t2) {
        t2 = t1.createElement("div");
        t2.toString;
        _this.diaContainer = t2;
        t2 = t2.style;
        t2.position = _s8_;
        t2.top = _s1_;
        t2.left = _s1_;
        t2.bottom = _s1_;
        t2.right = _s1_;
        t2.width = _s4_;
        t2.height = _s4_;
        t2.margin = "-50";
        t2.padding = _s1_;
        B.CssStyleDeclaration_methods._setPropertyHelper$3(t2, B.CssStyleDeclaration_methods._browserPropertyName$1(t2, "user-select"), "none", "");
        t2.zIndex = "90000000";
        B.CssStyleDeclaration_methods._setPropertyHelper$3(t2, B.CssStyleDeclaration_methods._browserPropertyName$1(t2, "overflow-y"), "auto", "");
        t1 = t1.body;
        t1.toString;
        t2 = _this.diaContainer;
        t2.toString;
        t1.appendChild(t2).toString;
        t2 = _this.__BaseDialog_dia_A.style;
        t2.toString;
        if ($.DiaAttr__attr == null)
          A.DiaAttr_initAttrFromDefaults();
        t1 = A._asStringQ($.DiaAttr__attr.$index(0, "DIALOG_TEXT_COLOR"));
        t2.color = t1 == null ? "" : t1;
        _this.diaContainer.appendChild(_this.__BaseDialog_dia_A).toString;
      } else {
        t2 = _this.__BaseDialog_dia_A.style;
        t2.position = _s8_;
        t2.top = _s1_;
        t2.left = _s1_;
        t2.width = "300px";
        t1.body.appendChild(_this.__BaseDialog_dia_A).toString;
      }
      t1 = _this.__BaseDialog_dia_A.style;
      t1.zIndex = "90000001";
      _this.isopen = true;
    },
    close$1(_, userInput) {
      var _this = this,
        t1 = _this.isopen = false,
        t2 = _this.__BaseDialog_dia_A;
      t2 === $ && A.throwLateFieldNI("dia");
      B.DivElement_methods.remove$0(t2);
      t2 = _this.__BaseDialog_isModal_A;
      t2 === $ && A.throwLateFieldNI("isModal");
      if (t2 ? _this.diaContainer != null : t1) {
        t1 = _this.diaContainer;
        t1.toString;
        B.DivElement_methods.remove$0(t1);
      }
      t1 = _this.closeCallback;
      if (t1 != null)
        t1.call$1(userInput == null ? new A.UserInput("", null) : userInput);
    }
  };
  A.UserInput.prototype = {
    getUserInput$1(line) {
      var t1 = this.fields;
      if (t1 == null)
        t1 = null;
      else {
        t1 = t1.$index(0, line);
        t1 = t1 == null ? null : J.sublist$1$ax(t1, 1);
      }
      return t1;
    },
    getCheckedState$1(line) {
      var t1 = this.fields;
      if (t1 == null)
        t1 = null;
      else {
        t1 = t1.$index(0, line);
        t1 = t1 == null ? null : J.$index$asx(t1, 0);
      }
      return t1;
    }
  };
  A.ActButton.prototype = {
    setButtonStyle$0() {
      var t2, _this = this,
        t1 = _this.__ActButton_but_A;
      t1 === $ && A.throwLateFieldNI("but");
      t1 = t1.style;
      t1.toString;
      t2 = A._asStringQ($.ActButton_but_attr.$index(0, "BUT_DISPLAY"));
      t1.display = t2 == null ? "" : t2;
      t2 = $.ActButton_but_attr.$index(0, "BUT_BORDER_RADIUS");
      t2.toString;
      A._asString(t2);
      B.CssStyleDeclaration_methods._setPropertyHelper$3(t1, B.CssStyleDeclaration_methods._browserPropertyName$1(t1, "border-radius"), t2, "");
      t2 = A._asStringQ($.ActButton_but_attr.$index(0, "BUT_BORDER"));
      t1.border = t2 == null ? "" : t2;
      t2 = A._asStringQ($.ActButton_but_attr.$index(0, "BUT_FONT_SIZE"));
      t1.fontSize = t2 == null ? "" : t2;
      t2 = A._asStringQ($.ActButton_but_attr.$index(0, "BUT_PADDING"));
      t1.padding = t2 == null ? "" : t2;
      t2 = A._asStringQ($.ActButton_but_attr.$index(0, "BUT_BACKGROUND"));
      t1.background = t2 == null ? "" : t2;
      t2 = A._asStringQ($.ActButton_but_attr.$index(0, "BUT_COLOR"));
      t1.color = t2 == null ? "" : t2;
      t2 = A._asStringQ($.ActButton_but_attr.$index(0, "BUT_BORDER_BOTTOM"));
      t1.borderBottom = t2 == null ? "" : t2;
      t2 = $.ActButton_but_attr.$index(0, "BUT_FONT_SMOOTHING");
      t2.toString;
      A._asString(t2);
      B.CssStyleDeclaration_methods._setPropertyHelper$3(t1, B.CssStyleDeclaration_methods._browserPropertyName$1(t1, "font-smoothing"), t2, "");
      t2 = A._asStringQ($.ActButton_but_attr.$index(0, "BUT_FONT_WEIGHT"));
      t1.fontWeight = t2 == null ? "" : t2;
      t2 = A._asStringQ($.ActButton_but_attr.$index(0, "BUT_MARGIN"));
      t1.margin = t2 == null ? "" : t2;
      t2 = A._asStringQ($.ActButton_but_attr.$index(0, "BUT_TEXT_ALIGN"));
      t1.textAlign = t2 == null ? "" : t2;
      t2 = $.ActButton_but_attr.$index(0, "BUT_OPACITY_LEAVE");
      t2.toString;
      A._asString(t2);
      B.CssStyleDeclaration_methods._setPropertyHelper$3(t1, B.CssStyleDeclaration_methods._browserPropertyName$1(t1, "opacity"), t2, "");
      t2 = type$._ElementEventStreamImpl_MouseEvent;
      t1 = t2._eval$1("~(1)?");
      t2 = t2._precomputed1;
      A._EventStreamSubscription$(_this.__ActButton_but_A, "mouseover", t1._as(new A.ActButton_setButtonStyle_closure(_this)), false, t2);
      A._EventStreamSubscription$(_this.__ActButton_but_A, "mouseleave", t1._as(new A.ActButton_setButtonStyle_closure0(_this)), false, t2);
      t2 = type$._ElementEventStreamImpl_Event;
      t1 = t2._eval$1("~(1)?");
      t2 = t2._precomputed1;
      A._EventStreamSubscription$(_this.__ActButton_but_A, "focus", t1._as(new A.ActButton_setButtonStyle_closure1(_this)), false, t2);
      A._EventStreamSubscription$(_this.__ActButton_but_A, "blur", t1._as(new A.ActButton_setButtonStyle_closure2(_this)), false, t2);
    }
  };
  A.ActButton_setButtonStyle_closure.prototype = {
    call$1(e) {
      var t1, t2;
      type$.MouseEvent._as(e);
      t1 = this.$this.__ActButton_but_A;
      t1 === $ && A.throwLateFieldNI("but");
      t1 = t1.style;
      t1.toString;
      t2 = $.ActButton_but_attr.$index(0, "BUT_OPACITY_OVER");
      t2.toString;
      A._asString(t2);
      B.CssStyleDeclaration_methods._setPropertyHelper$3(t1, B.CssStyleDeclaration_methods._browserPropertyName$1(t1, "opacity"), t2, "");
      t2 = A._asStringQ($.ActButton_but_attr.$index(0, "BUT_CURSOR_POINTER"));
      t1.cursor = t2 == null ? "" : t2;
    },
    $signature: 3
  };
  A.ActButton_setButtonStyle_closure0.prototype = {
    call$1(e) {
      var t1, t2;
      type$.MouseEvent._as(e);
      t1 = this.$this.__ActButton_but_A;
      t1 === $ && A.throwLateFieldNI("but");
      t1 = t1.style;
      t1.toString;
      t2 = $.ActButton_but_attr.$index(0, "BUT_OPACITY_LEAVE");
      t2.toString;
      A._asString(t2);
      B.CssStyleDeclaration_methods._setPropertyHelper$3(t1, B.CssStyleDeclaration_methods._browserPropertyName$1(t1, "opacity"), t2, "");
      t2 = A._asStringQ($.ActButton_but_attr.$index(0, "BUT_CURSOR_AUTO"));
      t1.cursor = t2 == null ? "" : t2;
    },
    $signature: 3
  };
  A.ActButton_setButtonStyle_closure1.prototype = {
    call$1(e) {
      var t2,
        t1 = this.$this.__ActButton_but_A;
      t1 === $ && A.throwLateFieldNI("but");
      t1 = t1.style;
      t1.toString;
      t2 = $.ActButton_but_attr.$index(0, "BUT_OPACITY_OVER");
      t2.toString;
      A._asString(t2);
      B.CssStyleDeclaration_methods._setPropertyHelper$3(t1, B.CssStyleDeclaration_methods._browserPropertyName$1(t1, "opacity"), t2, "");
      t2 = A._asStringQ($.ActButton_but_attr.$index(0, "BUT_CURSOR_POINTER"));
      t1.cursor = t2 == null ? "" : t2;
    },
    $signature: 5
  };
  A.ActButton_setButtonStyle_closure2.prototype = {
    call$1(e) {
      var t2,
        t1 = this.$this.__ActButton_but_A;
      t1 === $ && A.throwLateFieldNI("but");
      t1 = t1.style;
      t1.toString;
      t2 = $.ActButton_but_attr.$index(0, "BUT_OPACITY_LEAVE");
      t2.toString;
      A._asString(t2);
      B.CssStyleDeclaration_methods._setPropertyHelper$3(t1, B.CssStyleDeclaration_methods._browserPropertyName$1(t1, "opacity"), t2, "");
      t2 = A._asStringQ($.ActButton_but_attr.$index(0, "BUT_CURSOR_AUTO"));
      t1.cursor = t2 == null ? "" : t2;
    },
    $signature: 5
  };
  A.FileSelectionDialog.prototype = {
    FileSelectionDialog$2(htmlInfoText, fileSelectionCallback) {
      var t1, t2, table, t3, t4, t5, t6, t7, t8, delIconSize, fontsizeTxT, inputBut, form, marginTop, _this = this,
        _s9_ = "beforeend";
      if ($.DiaAttr__attr == null)
        A.DiaAttr_initAttrFromDefaults();
      t1 = $.DiaAttr__attr;
      t1.toString;
      t2 = document;
      table = t2.createElement("table");
      t3 = table.style;
      t3.padding = "0px";
      t3.margin = "0px";
      t3.width = "100%";
      t3.borderCollapse = "collapse";
      t3 = t2.createElement("tr");
      t3.toString;
      t4 = t2.createElement("tr");
      t4.toString;
      t5 = t2.createElement("tr");
      t5.toString;
      table.appendChild(t3).toString;
      table.appendChild(t4).toString;
      table.appendChild(t5).toString;
      t6 = t2.createElement("td");
      t6.toString;
      t7 = t2.createElement("td");
      t7.toString;
      t8 = t2.createElement("td");
      t8.toString;
      t3.appendChild(t6).toString;
      t4.appendChild(t7).toString;
      t5.appendChild(t8).toString;
      t5 = _this.__BaseDialog_dia_A;
      t5 === $ && A.throwLateFieldNI("dia");
      t5.appendChild(table).toString;
      t5 = t1.$index(0, "DIALOG_CROSS_FONTSIZE");
      t5.toString;
      delIconSize = A.int_parse(t5);
      t5 = t6.style;
      t5.color = "red";
      t5.fontSize = "" + delIconSize + "px";
      t5.textAlign = "right";
      t5.cursor = "pointer";
      B.TableCellElement_methods.insertAdjacentHtml$4$treeSanitizer$validator(t6, _s9_, "\u2715", B.C__TrustedHtmlTreeSanitizer, null);
      t3 = type$._ElementEventStreamImpl_MouseEvent;
      A._EventStreamSubscription$(t6, "click", t3._eval$1("~(1)?")._as(new A.FileSelectionDialog_closure(_this, fileSelectionCallback)), false, t3._precomputed1);
      t3 = t1.$index(0, "DIALOG_HELP_TEXT_FONTSIZE");
      t3.toString;
      fontsizeTxT = A.int_parse(t3);
      t3 = t7.style;
      t3.paddingTop = "12px";
      t3.paddingBottom = "16px";
      t3.fontSize = "" + fontsizeTxT;
      B.TableCellElement_methods.insertAdjacentHtml$4$treeSanitizer$validator(t7, _s9_, htmlInfoText, B.C__TrustedHtmlTreeSanitizer, null);
      t3 = _this.__BaseDialog_dia_A.style;
      t3.toString;
      t4 = A.S(t1.$index(0, "DIALOG_TEXT_COLOR"));
      t3.color = t4;
      inputBut = A.InputElement_InputElement("file");
      B.InputElement_methods.set$multiple(inputBut, true);
      t3 = inputBut.style;
      t3.toString;
      t1 = A.S(t1.$index(0, "DIALOG_BUTTON_FONTSIZE"));
      t3.fontSize = t1 + "px";
      t1 = type$._ElementEventStreamImpl_Event;
      A._EventStreamSubscription$(inputBut, "change", t1._eval$1("~(1)?")._as(new A.FileSelectionDialog_closure0(_this, fileSelectionCallback, inputBut)), false, t1._precomputed1);
      form = t2.createElement("form");
      form.appendChild(inputBut).toString;
      t8.appendChild(form).toString;
      t8 = _this.diaContainer;
      if (t8 == null)
        t1 = null;
      else {
        t1 = t8.clientHeight;
        t1.toString;
      }
      t1 = B.JSInt_methods._tdivFast$1(t1 == null ? 0 : t1, 2);
      t3 = _this.__BaseDialog_dia_A.clientHeight;
      t3.toString;
      marginTop = t1 - B.JSInt_methods._tdivFast$1(t3, 2);
      marginTop -= B.JSNumber_methods.round$0(marginTop * 0.2);
      if (A.DiaUtils_isTablet())
        marginTop = 0;
      t1 = _this.__BaseDialog_dia_A.style;
      t1.toString;
      t3 = inputBut.clientWidth;
      t3.toString;
      t1.width = "" + (t3 + 30) + "px";
      t1.marginTop = "" + marginTop + "px";
      A._EventStreamSubscription$(t2, "keydown", type$.nullable_void_Function_KeyboardEvent._as(new A.FileSelectionDialog_closure1(_this)), false, type$.KeyboardEvent);
    }
  };
  A.FileSelectionDialog_closure.prototype = {
    call$1(e) {
      type$.UIEvent._as(e);
      this.$this.close$1(0, new A.UserInput("DIA_ACT_ABORT", null));
      this.fileSelectionCallback.call$1(null);
    },
    $signature: 2
  };
  A.FileSelectionDialog_closure0.prototype = {
    call$1(e) {
      this.$this.close$1(0, new A.UserInput("DIA_ACT_ABORT", null));
      this.fileSelectionCallback.call$1(this.inputBut.files);
    },
    $signature: 5
  };
  A.FileSelectionDialog_closure1.prototype = {
    call$1(e) {
      var t1 = type$.KeyboardEvent._as(e).keyCode;
      t1.toString;
      if (t1 === 27)
        this.$this.close$1(0, new A.UserInput("DIA_ACT_ABORT", null));
    },
    $signature: 7
  };
  A.InputDialog.prototype = {
    InputDialog$10(buttontype, htmlTitleText, textLabels, comboInfo, defaultInputTexts, widths, isChecked, closeCallback, alternateRowColor, buttonLabels) {
      var t1 = type$.int;
      this.init$9(buttontype, htmlTitleText, textLabels, A.LinkedHashMap_LinkedHashMap$_literal([0, comboInfo], t1, type$.nullable_List_nullable_List_String), A.LinkedHashMap_LinkedHashMap$_literal([0, defaultInputTexts], t1, type$.nullable_List_nullable_String), widths, isChecked, alternateRowColor, buttonLabels);
    },
    InputDialog$twoD$10(buttontype, htmlTitleText, defaultInputTexts, comboInfoND, defaultInputTextsND, sizes, isChecked, closeCallback, alternateRowColor, buttonLabels) {
      this.init$9(buttontype, htmlTitleText, defaultInputTexts, comboInfoND, defaultInputTextsND, sizes, isChecked, false, buttonLabels);
    },
    InputDialog$noModal$10(buttontype, htmlTitleText, inputTextLabelInfo, comboInfo, defaultInputTexts, sizes, isChecked, closeCallback, alternateRowColor, buttonLabels) {
      var t1 = type$.int;
      this.init$9(buttontype, htmlTitleText, inputTextLabelInfo, A.LinkedHashMap_LinkedHashMap$_literal([0, comboInfo], t1, type$.nullable_List_nullable_List_String), A.LinkedHashMap_LinkedHashMap$_literal([0, defaultInputTexts], t1, type$.nullable_List_nullable_String), sizes, isChecked, false, buttonLabels);
    },
    init$9(buttontype, htmlTitleText, inputTextLabelInfo, comboInfoND, defaultInputTextsND, sizes, isChecked, alternateRowColor, buttonLabels) {
      var t1, comboInfo1D, comboInfo2D, t2, _i, defaultInputTexts, defaultInputTexts2D, delIconSize, fakeCells, alignCross, t3, t4, i, executeButton, t5, textfontSize, fontsize, textalign, t6, nrows, t7, t8, t9, t10, cbox, t11, t12, t13, actbut, form, marginTop, width, _this = this, _null = null, _s4_ = "left",
        _s9_ = "beforeend",
        _box_1 = {};
      type$.nullable_List_String._as(inputTextLabelInfo);
      type$.nullable_Map_of_int_and_nullable_List_nullable_List_String._as(comboInfoND);
      type$.nullable_Map_of_int_and_nullable_List_nullable_String._as(defaultInputTextsND);
      type$.nullable_List_int._as(sizes);
      t1 = type$.nullable_List_nullable_String;
      t1._as(isChecked);
      t1._as(buttonLabels);
      _box_1.defaultInputTexts2D = null;
      if ($.DiaAttr__attr == null)
        A.DiaAttr_initAttrFromDefaults();
      t1 = $.DiaAttr__attr;
      t1.toString;
      _box_1.hasDim1Combo = false;
      comboInfo1D = comboInfoND.$index(0, 0);
      comboInfo2D = comboInfoND.$index(0, 1);
      if (comboInfo1D != null)
        for (t2 = comboInfo1D.length, _i = 0; _i < t2; ++_i)
          if (comboInfo1D[_i] != null) {
            _box_1.hasDim1Combo = true;
            break;
          }
      _box_1.dim = 1;
      defaultInputTexts = defaultInputTextsND.$index(0, 0);
      defaultInputTexts2D = defaultInputTextsND.$index(0, 1);
      _box_1.defaultInputTexts2D = defaultInputTexts2D;
      if (defaultInputTexts2D != null)
        _box_1.dim = 2;
      if (B.JSString_methods.contains$1(window.navigator.userAgent.toLowerCase(), "ipad") || B.JSString_methods.contains$1(window.navigator.userAgent.toLowerCase(), "iphone")) {
        t2 = window.navigator.vendor;
        t2.toString;
        t2 = B.JSString_methods.contains$1(t2, "Apple Computer");
      } else
        t2 = false;
      if (t2 && true)
        _this.redcross_left = true;
      _box_1.NCOLS = 4;
      if (_box_1.dim === 2)
        _box_1.NCOLS = 6;
      t2 = t1.$index(0, "DIALOG_CROSS_FONTSIZE");
      t2.toString;
      delIconSize = A.int_parse(t2);
      _box_1.delCell = null;
      t2 = _box_1.NCOLS - 1;
      fakeCells = A.List_List$filled(t2, _null, false, type$.nullable_TableCellElement);
      alignCross = _this.redcross_left ? _s4_ : "right";
      t3 = document;
      t4 = t3.createElement("td");
      t4.toString;
      _box_1.delCell = t4;
      for (i = 0; i < _box_1.NCOLS - 1; ++i) {
        t4 = t3.createElement("td");
        t4.toString;
        B.JSArray_methods.$indexSet(fakeCells, i, t4);
      }
      t4 = _box_1.delCell.style;
      t4.color = "red";
      t4.fontSize = "" + delIconSize + "px";
      t4.textAlign = alignCross;
      t4.cursor = "pointer";
      B.TableCellElement_methods.insertAdjacentHtml$4$treeSanitizer$validator(_box_1.delCell, _s9_, "\u2715", B.C__TrustedHtmlTreeSanitizer, _null);
      t4 = type$._ElementEventStreamImpl_MouseEvent;
      A._EventStreamSubscription$(type$.Element._as(_box_1.delCell), "click", t4._eval$1("~(1)?")._as(new A.InputDialog_init_closure(_box_1, _this, delIconSize)), false, t4._precomputed1);
      _box_1.cell = _box_1.row = null;
      _box_1.nrows = 0;
      _box_1.tinputFields2D = _box_1.tinputFields = _box_1.checkBoxes = null;
      executeButton = new A.InputDialog_init_executeButton(_this, new A.InputDialog_init_getResults(_box_1));
      t4 = t3.createElement("tr");
      t4.toString;
      _box_1.row = t4;
      if (!_this.redcross_left)
        for (i = 0; i < t2; ++i) {
          t4 = _box_1.row;
          t5 = fakeCells[i];
          t5.toString;
          t4.appendChild(t5).toString;
        }
      _box_1.row.appendChild(_box_1.delCell).toString;
      t2 = _this.diaTable;
      t2.appendChild(_box_1.row).toString;
      t4 = t1.$index(0, "DIALOG_TEXT_FONTSIZE");
      t4.toString;
      textfontSize = A.int_parse(t4);
      t4 = t3.createElement("tr");
      t4.toString;
      _box_1.row = t4;
      t4 = t3.createElement("td");
      t4.toString;
      _box_1.cell = t4;
      B.TableCellElement_methods.insertAdjacentHtml$4$treeSanitizer$validator(t4, _s9_, htmlTitleText, B.C__TrustedHtmlTreeSanitizer, _null);
      t4 = t1.$index(0, "DIALOG_HEADER_TEXTALIGN");
      t4.toString;
      t5 = buttonLabels == null;
      if (!t5 && buttonLabels.length === 0 && inputTextLabelInfo == null && buttontype === "ALIGN_LEFT") {
        t4 = t1.$index(0, "DIALOG_HELP_TEXT_FONTSIZE");
        t4.toString;
        fontsize = A.int_parse(t4);
        textalign = _s4_;
      } else {
        t6 = t1.$index(0, "DIALOG_HEADER_FONTSIZE");
        t6.toString;
        fontsize = A.int_parse(t6);
        textalign = t4;
      }
      _box_1.cell.colSpan = _box_1.NCOLS;
      t4 = _box_1.cell.style;
      t4.textAlign = textalign;
      t6 = A._asStringQ(t1.$index(0, "DIALOG_HEADER_COLOR"));
      t4.color = t6 == null ? "" : t6;
      t4.fontSize = "" + fontsize + "px";
      t4.paddingTop = "10px";
      if (A.DiaUtils_isPhone()) {
        t4 = _box_1.cell.style;
        t4.paddingTop = "6px";
      }
      t4 = inputTextLabelInfo != null;
      if (t4) {
        t6 = _box_1.cell.style;
        t6.textDecoration = "underline";
      }
      _box_1.row.appendChild(_box_1.cell).toString;
      t2.appendChild(_box_1.row).toString;
      new A.InputDialog_init_addEmptyTableRow(_box_1, _this).call$0();
      if (t4) {
        nrows = inputTextLabelInfo.length;
        _box_1.nrows = nrows;
        t6 = type$.nullable_InputElement;
        _box_1.checkBoxes = A.List_List$filled(nrows, _null, false, t6);
        _box_1.tinputFields = A.List_List$filled(_box_1.nrows, _null, false, t6);
        if (_box_1.dim === 2)
          _box_1.tinputFields2D = A.List_List$filled(_box_1.nrows, _null, false, t6);
        for (t6 = defaultInputTexts == null, t7 = isChecked != null, t8 = buttontype === "radio", t9 = "" + textfontSize + "px", i = 0; i < _box_1.nrows; ++i) {
          t10 = t3.createElement("tr");
          t10.toString;
          _box_1.row = t10;
          t10 = t3.createElement("td");
          t10.toString;
          _box_1.cell = t10;
          if (t7) {
            if (!(i < isChecked.length))
              return A.ioore(isChecked, i);
            t10 = isChecked[i];
            t10 = t10 === "true" || t10 === "false";
          } else
            t10 = false;
          if (t10) {
            cbox = A.InputElement_InputElement(buttontype);
            if (!(i < isChecked.length))
              return A.ioore(isChecked, i);
            B.InputElement_methods.set$checked(cbox, A.DiaUtils_getBoolFromString(isChecked[i]));
            t10 = cbox.style;
            t10.fontSize = t9;
            if (t8)
              B.InputElement_methods.set$name(cbox, "radiogroup1");
            _box_1.cell.appendChild(cbox).toString;
          } else
            cbox = _null;
          t10 = _box_1.checkBoxes;
          (t10 && B.JSArray_methods).$indexSet(t10, i, cbox);
          _box_1.row.appendChild(_box_1.cell).toString;
          t10 = t3.createElement("td");
          t10.toString;
          _box_1.cell = t10;
          if (!(i < inputTextLabelInfo.length))
            return A.ioore(inputTextLabelInfo, i);
          B.TableCellElement_methods.insertAdjacentHtml$4$treeSanitizer$validator(t10, _s9_, inputTextLabelInfo[i], B.C__TrustedHtmlTreeSanitizer, _null);
          t10 = _box_1.cell.style;
          t10.textAlign = _s4_;
          t11 = A._asStringQ(t1.$index(0, "DIALOG_TEXT_COLOR"));
          t10.color = t11 == null ? "" : t11;
          if ((i & 1) !== 0 && alternateRowColor) {
            t10 = _box_1.cell.style;
            t10.toString;
            t11 = A._asStringQ(t1.$index(0, "DIALOG_TEXT_COLOR2"));
            t10.color = t11 == null ? "" : t11;
          }
          _box_1.row.appendChild(_box_1.cell).toString;
          t10 = new A.InputDialog_init_appendTextInputField(_box_1, _this, sizes, i, textfontSize, t1, executeButton);
          t11 = _box_1.tinputFields;
          if (t6)
            t12 = _null;
          else {
            if (!(i < defaultInputTexts.length))
              return A.ioore(defaultInputTexts, i);
            t12 = defaultInputTexts[i];
          }
          (t11 && B.JSArray_methods).$indexSet(t11, i, t10.call$1(t12));
          t12 = new A.InputDialog_init_appendComboBox(_box_1, _this, i, textfontSize);
          t12.call$2(comboInfo1D, _box_1.tinputFields);
          if (_box_1.dim === 2) {
            t11 = _box_1.tinputFields2D;
            t11.toString;
            t13 = _box_1.defaultInputTexts2D;
            if (!(i < t13.length))
              return A.ioore(t13, i);
            B.JSArray_methods.$indexSet(t11, i, t10.call$1(t13[i]));
            comboInfo2D.toString;
            t12.call$2(comboInfo2D, _box_1.tinputFields2D);
          }
          t2.appendChild(_box_1.row).toString;
        }
        t6 = t2.style;
        t6.paddingBottom = "10px";
      }
      if (t5)
        buttonLabels = A._setArrayType(["OK"], type$.JSArray_nullable_String);
      _this.set$actButs(A.List_List$filled(buttonLabels.length, _null, false, type$.nullable_ActButton));
      t1 = t1.$index(0, "DIALOG_BUTTON_FONTSIZE");
      t1.toString;
      for (t5 = type$.nullable_dynamic_Function_Event, t1 = "" + A.int_parse(t1) + "px", t6 = type$.String, i = 0; i < buttonLabels.length; ++i) {
        actbut = new A.ActButton();
        if ($.ActButton_but_attr == null)
          $.ActButton_but_attr = A.LinkedHashMap_LinkedHashMap$from($.$get$ActButton_ATTR_BUTTONS(), t6, t6);
        t7 = t3.createElement("button");
        t7.toString;
        actbut.__ActButton_but_A = t7;
        actbut.setButtonStyle$0();
        t7 = actbut.__ActButton_but_A;
        if (!(i < buttonLabels.length))
          return A.ioore(buttonLabels, i);
        t8 = buttonLabels[i];
        t8 = t3.createTextNode(t8);
        t8.toString;
        t7.appendChild(t8).toString;
        t8 = actbut.__ActButton_but_A.style;
        t8.fontSize = t1;
        B.ButtonElement_methods._addEventListener$3(actbut.__ActButton_but_A, "click", t5._as(new A.InputDialog_init_closure0(executeButton, i)), _null);
        B.JSArray_methods.$indexSet(_this.actButs, i, actbut);
      }
      A._EventStreamSubscription$(t3, "keydown", type$.nullable_void_Function_KeyboardEvent._as(new A.InputDialog_init_closure1(executeButton)), false, type$.KeyboardEvent);
      form = t3.createElement("form");
      form.appendChild(t2).toString;
      for (i = 0; t1 = _this.actButs, i < t1.length; ++i) {
        t1 = t1[i];
        if (t1 != null) {
          t1 = t1.__ActButton_but_A;
          t1 === $ && A.throwLateFieldNI("but");
          form.appendChild(t1).toString;
        }
      }
      t1 = _this.__BaseDialog_dia_A;
      t1 === $ && A.throwLateFieldNI("dia");
      t1.appendChild(form).toString;
      t1 = _this.diaContainer;
      if (t1 == null)
        return;
      t1 = t1.clientHeight;
      t1.toString;
      t1 = B.JSInt_methods._tdivFast$1(t1, 2);
      t3 = _this.__BaseDialog_dia_A.clientHeight;
      t3.toString;
      marginTop = t1 - B.JSInt_methods._tdivFast$1(t3, 2);
      if (marginTop < 0)
        marginTop = 0;
      marginTop -= B.JSNumber_methods.round$0(marginTop * 0.2);
      if (A.DiaUtils_isTablet() && t4)
        marginTop = 5;
      t1 = t2.clientWidth;
      t1.toString;
      t2 = _this.actButs;
      t3 = t2.length;
      if (t3 !== 0) {
        if (0 >= t3)
          return A.ioore(t2, 0);
        t2 = t2[0];
        if (t2 != null) {
          t2 = t2.__ActButton_but_A;
          t2 === $ && A.throwLateFieldNI("but");
          t2 = t2.clientWidth;
          t2.toString;
          t2 = t1 < t2;
        } else
          t2 = false;
      } else
        t2 = false;
      if (t2) {
        if (0 >= buttonLabels.length)
          return A.ioore(buttonLabels, 0);
        t1 = buttonLabels[0].length;
        t2 = _this.__BaseDialog_dia_A.style.fontSize;
        t2.toString;
        width = t1 * B.JSNumber_methods.round$0(A.DiaUtils_removePx(t2));
      } else
        width = t1;
      t1 = _this.__BaseDialog_dia_A.style;
      t1.width = "" + width + "px";
      t1.marginTop = "" + marginTop + "px";
    },
    set$actButs(actButs) {
      this.actButs = type$.List_nullable_ActButton._as(actButs);
    }
  };
  A.InputDialog_init_closure.prototype = {
    call$1(e) {
      var t1, tpoint, t2, t3, t4, t5, t6, iconRect;
      type$.UIEvent._as(e);
      t1 = this._box_1.delCell.getBoundingClientRect();
      t1.toString;
      tpoint = A.DiaUtils_getTouchPoint(e);
      t2 = t1.right;
      t2.toString;
      t3 = this.delIconSize;
      t4 = t1.top;
      t4.toString;
      t5 = t3 < 0;
      if (t5)
        t6 = t3 === -1 / 0 ? 0 : -t3 * 0;
      else
        t6 = t3;
      if (t5)
        t5 = t3 === -1 / 0 ? 0 : -t3 * 0;
      else
        t5 = t3;
      iconRect = new A.Rectangle(t2 - t3, t4, t6, t5, type$.Rectangle_num);
      t2 = this.$this;
      if (t2.redcross_left)
        iconRect = t1;
      if (J.containsPoint$1$x(iconRect, tpoint)) {
        t2.close$1(0, new A.UserInput("DIA_ACT_ABORT", null));
        if (A.DiaUtils_isTablet()) {
          t1 = window;
          t1.toString;
          B.Window_methods.scrollTo$2(t1, 0, 0);
        }
      }
    },
    $signature: 2
  };
  A.InputDialog_init_addEmptyTableRow.prototype = {
    call$0() {
      var t3,
        t1 = document,
        t2 = t1.createElement("tr");
      t2.toString;
      t3 = this._box_1;
      t3.row = t2;
      t1 = t1.createElement("td");
      t1.toString;
      t3.cell = t1;
      B.TableCellElement_methods.insertAdjacentHtml$4$treeSanitizer$validator(t1, "beforeend", "&nbsp;", B.C__TrustedHtmlTreeSanitizer, null);
      t3.cell.colSpan = t3.NCOLS;
      t3.row.appendChild(t3.cell).toString;
      this.$this.diaTable.appendChild(t3.row).toString;
    },
    $signature: 0
  };
  A.InputDialog_init_getResults.prototype = {
    call$0() {
      var t1, t2, i, resultLine, t3, cbox, cboxResult, t4, inputResult, inputResult2D, _s4_ = "null",
        results = new A.JsLinkedHashMap(type$.JsLinkedHashMap_of_int_and_List_nullable_String);
      for (t1 = this._box_1, t2 = type$.JSArray_String, i = 0; i < t1.nrows; ++i) {
        resultLine = A._setArrayType([], t2);
        t3 = t1.checkBoxes;
        if (t3 == null)
          cbox = null;
        else {
          if (!(i < t3.length))
            return A.ioore(t3, i);
          cbox = t3[i];
        }
        cboxResult = cbox != null ? A.S(cbox.checked) : _s4_;
        t3 = t1.tinputFields;
        if (t3 == null)
          t4 = null;
        else {
          if (!(i < t3.length))
            return A.ioore(t3, i);
          t4 = t3[i];
        }
        if (t4 != null) {
          if (!(i < t3.length))
            return A.ioore(t3, i);
          inputResult = t3[i].value;
        } else
          inputResult = _s4_;
        B.JSArray_methods.add$1(resultLine, cboxResult);
        B.JSArray_methods.add$1(resultLine, inputResult);
        if (t1.dim === 2) {
          t3 = t1.tinputFields2D;
          if (t3 == null)
            t4 = null;
          else {
            if (!(i < t3.length))
              return A.ioore(t3, i);
            t4 = t3[i];
          }
          if (t4 != null) {
            if (!(i < t3.length))
              return A.ioore(t3, i);
            inputResult2D = t3[i].value;
          } else
            inputResult2D = _s4_;
          B.JSArray_methods.add$1(resultLine, inputResult2D);
        }
        results.$indexSet(0, i, resultLine);
      }
      return results;
    },
    $signature: 25
  };
  A.InputDialog_init_executeButton.prototype = {
    call$2(i, e) {
      var t1;
      e.preventDefault();
      t1 = this.$this;
      if (i === -1)
        t1.close$1(0, new A.UserInput("DIA_ACT_ABORT", null));
      else {
        if (!(i >= 0 && i < 3))
          return A.ioore($.DiaAttr_DIA_ACTIONS, i);
        t1.close$1(0, new A.UserInput($.DiaAttr_DIA_ACTIONS[i], this.getResults.call$0()));
      }
      if (A.DiaUtils_isTablet()) {
        t1 = window;
        t1.toString;
        B.Window_methods.scrollTo$2(t1, 0, 0);
      }
    },
    $signature: 26
  };
  A.InputDialog_init_appendTextInputField.prototype = {
    call$1(text) {
      var t2, readOnly, t3, textinputField, t4, _this = this,
        t1 = _this.sizes;
      if (t1 != null) {
        t2 = _this.i;
        if (!(t2 < t1.length))
          return A.ioore(t1, t2);
        t2 = t1[t2] > 0;
      } else
        t2 = false;
      if (t2) {
        if (text != null && B.JSString_methods.startsWith$1(text, "||++++||")) {
          text = J.substring$1$s(text, 8);
          readOnly = true;
        } else
          readOnly = false;
        t2 = document.createElement("td");
        t2.toString;
        t3 = _this._box_1;
        t3.cell = t2;
        textinputField = A.InputElement_InputElement("text");
        B.InputElement_methods.set$value(textinputField, text);
        t2 = _this.i;
        if (!(t2 < t1.length))
          return A.ioore(t1, t2);
        B.InputElement_methods.set$size(textinputField, t1[t2]);
        if (readOnly)
          B.InputElement_methods.set$readOnly(textinputField, true);
        t1 = textinputField.style;
        t1.fontSize = "" + (_this.textfontSize - 1) + "px";
        t4 = A._asStringQ(_this.attr.$index(0, "DIALOG_INPUT_BG"));
        t1.background = t4 == null ? "" : t4;
        t3.cell.appendChild(textinputField).toString;
        t1 = type$._ElementEventStreamImpl_MouseEvent;
        A._EventStreamSubscription$(textinputField, "mousedown", t1._eval$1("~(1)?")._as(new A.InputDialog_init_appendTextInputField_closure(t3, _this.$this, t2)), false, t1._precomputed1);
        t1 = type$._ElementEventStreamImpl_KeyboardEvent;
        A._EventStreamSubscription$(textinputField, "keypress", t1._eval$1("~(1)?")._as(new A.InputDialog_init_appendTextInputField_closure0(_this.executeButton)), false, t1._precomputed1);
      } else
        textinputField = null;
      t1 = _this._box_1;
      t1.row.appendChild(t1.cell).toString;
      return textinputField;
    },
    $signature: 27
  };
  A.InputDialog_init_appendTextInputField_closure.prototype = {
    call$1(e) {
      var t1, t2;
      type$.UIEvent._as(e);
      t1 = this._box_1.checkBoxes;
      t2 = this.i;
      if (!(t2 < t1.length))
        return A.ioore(t1, t2);
      t2 = t1[t2];
      if (t2 != null && t2.name === "radiogroup1") {
        t2.toString;
        B.InputElement_methods.set$checked(t2, true);
      }
    },
    $signature: 2
  };
  A.InputDialog_init_appendTextInputField_closure0.prototype = {
    call$1(e) {
      var t1;
      type$.KeyboardEvent._as(e);
      t1 = e.keyCode;
      t1.toString;
      if (t1 === 13 || t1 === 3) {
        e.preventDefault();
        e.stopPropagation();
        if (A.DiaUtils_isTablet())
          this.executeButton.call$2(0, e);
      }
    },
    $signature: 7
  };
  A.InputDialog_init_appendComboBox.prototype = {
    call$2(comboInfo, textInFields) {
      var t2, t3, t4, t5, firstItem, disableTextInputCombo, t6, _this = this, _s4_ = "none",
        _s10_ = "table-cell",
        t1 = {};
      type$.nullable_List_nullable_List_String._as(comboInfo);
      type$.nullable_List_nullable_TextInputElement._as(textInFields);
      if (comboInfo != null) {
        t2 = _this.i;
        if (!(t2 < comboInfo.length))
          return A.ioore(comboInfo, t2);
        t2 = comboInfo[t2];
        t2 = t2 != null && t2.length !== 0;
      } else
        t2 = false;
      if (t2) {
        t2 = document;
        t3 = t2.createElement("td");
        t3.toString;
        t4 = A.ActButton$().__ActButton_but_A;
        t4 === $ && A.throwLateFieldNI("but");
        t2 = t2.createTextNode("\u25bc");
        t2.toString;
        t4.appendChild(t2).toString;
        t2 = t4.style;
        t2.padding = _s4_;
        t2.margin = _s4_;
        t2.verticalAlign = "middle";
        t2.textAlign = "left";
        t2.display = _s10_;
        t2.fontSize = "" + (_this.textfontSize - 6) + "px";
        t2 = _this.i;
        if (!(t2 < comboInfo.length))
          return A.ioore(comboInfo, t2);
        t5 = comboInfo[t2];
        if (0 >= t5.length)
          return A.ioore(t5, 0);
        firstItem = t5[0];
        disableTextInputCombo = !B.JSString_methods.startsWith$1(firstItem, "+||+") || false;
        t5 = t1.disableComboSelection = false;
        if (B.JSString_methods.contains$1(firstItem, "?||?"))
          t1.disableComboSelection = true;
        t6 = _this._box_1;
        B.ButtonElement_methods.addEventListener$2(t4, "click", new A.InputDialog_init_appendComboBox_closure(t6, t1, _this.$this, t2, comboInfo, textInFields));
        if (disableTextInputCombo) {
          if (textInFields == null)
            t1 = null;
          else {
            if (!(t2 < textInFields.length))
              return A.ioore(textInFields, t2);
            t1 = textInFields[t2];
          }
          t1 = t1 != null;
        } else
          t1 = t5;
        if (t1) {
          if (!(t2 < textInFields.length))
            return A.ioore(textInFields, t2);
          t1 = textInFields[t2];
          t1.toString;
          B.InputElement_methods.set$disabled(t1, true);
        }
        t3.appendChild(t4).toString;
        t6.row.appendChild(t3).toString;
      } else {
        t1 = _this._box_1;
        if (t1.dim === 2)
          if (t1.hasDim1Combo) {
            t2 = t1.defaultInputTexts2D;
            if (t2 != null) {
              t3 = _this.i;
              if (!(t3 < t2.length))
                return A.ioore(t2, t3);
              t3 = t2[t3] != null;
              t2 = t3;
            } else
              t2 = false;
          } else
            t2 = false;
        else
          t2 = false;
        if (t2) {
          t2 = document;
          t3 = t2.createElement("td");
          t3.toString;
          t4 = A.ActButton$().__ActButton_but_A;
          t4 === $ && A.throwLateFieldNI("but");
          t2 = t2.createTextNode("\u25bc");
          t2.toString;
          t4.appendChild(t2).toString;
          t2 = t4.style;
          t2.background = "white";
          t2.padding = _s4_;
          t2.margin = _s4_;
          t2.verticalAlign = "middle";
          t2.textAlign = "left";
          t2.display = _s10_;
          t2.fontSize = "" + (_this.textfontSize - 6) + "px";
          t2.cursor = "auto";
          B.CssStyleDeclaration_methods._setPropertyHelper$3(t2, B.CssStyleDeclaration_methods._browserPropertyName$1(t2, "opacity"), "0.0", "");
          B.ButtonElement_methods.addEventListener$2(t4, "click", new A.InputDialog_init_appendComboBox_closure0());
          t3.appendChild(t4).toString;
          t1.row.appendChild(t3).toString;
        }
      }
    },
    $signature: 28
  };
  A.InputDialog_init_appendComboBox_closure.prototype = {
    call$1(e) {
      var t1, t2, t3, combo_popup, k, t4, out, t5, tpoint, y, nitems, t6, HEIGHT15, preventDefault, _this = this;
      type$.Event._as(e);
      e.preventDefault();
      e.stopPropagation();
      t1 = _this._box_1;
      t2 = t1.checkBoxes;
      t3 = _this.i;
      if (!(t3 < t2.length))
        return A.ioore(t2, t3);
      t2 = t2[t3];
      if (t2 != null && t2.name === "radiogroup1") {
        t2.toString;
        B.InputElement_methods.set$checked(t2, true);
      }
      combo_popup = A._setArrayType([], type$.JSArray_String);
      t2 = _this.comboInfo;
      k = 0;
      while (true) {
        if (!(t3 < t2.length))
          return A.ioore(t2, t3);
        t4 = t2[t3];
        if (!(k < t4.length))
          break;
        out = t4[k];
        if (B.JSString_methods.startsWith$1(out, "+||+"))
          out = B.JSString_methods.substring$1(out, 4);
        B.JSArray_methods.add$1(combo_popup, (B.JSString_methods.startsWith$1(out, "?||?") ? B.JSString_methods.substring$1(out, 4) : out) + "||" + k);
        ++k;
      }
      t4 = _this.$this;
      t5 = t4.popup;
      if (t5 == null || !t5.isopen) {
        tpoint = A.DiaUtils_getTouchPoint(type$.UIEvent._as(e));
        t5 = B.JSNumber_methods.floor$0(tpoint.x);
        y = B.JSNumber_methods.floor$0(tpoint.y) + 12;
        if (!(t3 < t2.length))
          return A.ioore(t2, t3);
        nitems = t2[t3].length;
        t6 = t4.diaContainer.clientHeight;
        t6.toString;
        HEIGHT15 = B.JSNumber_methods.round$0(t6 * 0.75);
        if (nitems > 10 && nitems <= 15)
          y = 0;
        t6 = nitems > 15;
        if (t6) {
          y = 10;
          preventDefault = false;
        } else
          preventDefault = true;
        t1 = A.PopupMenu$(t4.diaTable, "", combo_popup, null, null, new A.InputDialog_init_appendComboBox__closure(_this._box_0, t1, t2, t3, _this.textInFields), t5 + 12, y, preventDefault);
        t4.popup = t1;
        if (t6 && true) {
          t1 = t1.__BaseDialog_dia_A;
          t1 === $ && A.throwLateFieldNI("dia");
          t1 = t1.style;
          t1.toString;
          B.CssStyleDeclaration_methods._setPropertyHelper$3(t1, B.CssStyleDeclaration_methods._browserPropertyName$1(t1, "overflow-y"), "scroll", "");
          t1.width = "250px";
          t1.height = "" + HEIGHT15 + "px";
        }
      } else
        t5.close$1(0, null);
    },
    $signature: 8
  };
  A.InputDialog_init_appendComboBox__closure.prototype = {
    call$1(results) {
      var t1, t2, t3, pattern, _this = this,
        actionCode = results._buttonCode;
      if (actionCode.length !== 0) {
        t1 = _this.comboInfo;
        t2 = _this.i;
        if (!(t2 < t1.length))
          return A.ioore(t1, t2);
        t1 = t1[t2];
        t1.toString;
        t3 = A.int_parse(actionCode);
        if (!(t3 >= 0 && t3 < t1.length))
          return A.ioore(t1, t3);
        pattern = t1[t3];
        if (B.JSString_methods.startsWith$1(pattern, "+||+"))
          pattern = B.JSString_methods.substring$1(pattern, 4);
        if (!_this._box_0.disableComboSelection) {
          t1 = _this.textInFields;
          if (t1 != null) {
            if (!(t2 < t1.length))
              return A.ioore(t1, t2);
            t1 = t1[t2];
            if (t1 != null)
              B.InputElement_methods.set$value(t1, pattern);
          }
        }
        t1 = _this._box_1.checkBoxes;
        if (t1 != null)
          t3 = t2 < t1.length;
        else
          t3 = false;
        if (t3) {
          if (!(t2 < t1.length))
            return A.ioore(t1, t2);
          t1 = t1[t2];
          t1.toString;
          B.InputElement_methods.set$checked(t1, true);
        }
      }
    },
    $signature: 4
  };
  A.InputDialog_init_appendComboBox_closure0.prototype = {
    call$1(e) {
      type$.Event._as(e);
      e.preventDefault();
      e.stopPropagation();
    },
    $signature: 8
  };
  A.InputDialog_init_closure0.prototype = {
    call$1(e) {
      this.executeButton.call$2(this.i, type$.Event._as(e));
    },
    $signature: 8
  };
  A.InputDialog_init_closure1.prototype = {
    call$1(e) {
      var t1;
      type$.KeyboardEvent._as(e);
      t1 = e.keyCode;
      t1.toString;
      if (t1 === 27)
        this.executeButton.call$2(-1, e);
    },
    $signature: 7
  };
  A.InputDialog_show_closeCallback.prototype = {
    call$1(results) {
      this.cpl.complete$1(0, results);
    },
    $signature: 4
  };
  A.InputDialog_show2D_closeCallback.prototype = {
    call$1(results) {
      this.cpl.complete$1(0, results);
    },
    $signature: 4
  };
  A.InfoDialog.prototype = {};
  A.InfoDialog_show_closeCallback.prototype = {
    call$1(results) {
      this.cpl.complete$1(0, results);
    },
    $signature: 4
  };
  A.IconPanel.prototype = {
    IconPanel$12($parent, id, iconPath, iconNames, getIconCallbacks, closeCallback, x, y, panelWidth, iconSize, ncols, preventDefault, _box_0) {
      var t2, t3, t4, t5, nrows, rows, t6, t7, t8, iconcount, i, t9, t10, row, t11, handleTouchStart, executIconFunction, handleTouchEnd, iconCells, k, iconName, cell, _this = this,
        _s20_ = "ICONPANEL_BACKGROUND",
        _s7_ = "pointer",
        _s3_ = "0px",
        t1 = "" + (iconSize - 4);
      _this.__IconPanel__iconStyle_A = '    alt="" align="top"\n      border="none" height="' + t1 + '" width="' + t1 + '"\n    ';
      t1 = _this.__BaseDialog_dia_A;
      t1 === $ && A.throwLateFieldNI("dia");
      t1.id = id;
      t1 = _this.__BaseDialog_dia_A.style;
      t1.toString;
      if ($.DiaAttr__attr == null)
        A.DiaAttr_initAttrFromDefaults();
      t2 = A._asStringQ($.DiaAttr__attr.$index(0, _s20_));
      t1.backgroundColor = t2 == null ? "" : t2;
      if ($.DiaAttr__attr == null)
        A.DiaAttr_initAttrFromDefaults();
      t2 = A._asStringQ($.DiaAttr__attr.$index(0, _s20_));
      t1.background = t2 == null ? "" : t2;
      t1.textAlign = "center";
      t1.padding = "0.3em";
      t1.margin = "1em auto";
      t1.border = "0";
      if ($.DiaAttr__attr == null)
        A.DiaAttr_initAttrFromDefaults();
      t2 = A.S($.DiaAttr__attr.$index(0, "DIALOG_TOPBAR_COLOR"));
      t1.borderTop = "1px solid " + t2;
      B.CssStyleDeclaration_methods._setPropertyHelper$3(t1, B.CssStyleDeclaration_methods._browserPropertyName$1(t1, "border-radius"), "8px", "");
      B.CssStyleDeclaration_methods._setPropertyHelper$3(t1, B.CssStyleDeclaration_methods._browserPropertyName$1(t1, "box-shadow"), "0 6px 10px rgba(0, 0, 0, 0.4)", "");
      if ($.DiaAttr__attr == null)
        A.DiaAttr_initAttrFromDefaults();
      t2 = A.S($.DiaAttr__attr.$index(0, "DIALOG_POPUP_FONTSIZE2"));
      t1.fontSize = t2 + "px";
      t1.lineHeight = "110%";
      t1.zIndex = "80000000";
      if ($.DiaAttr__attr == null)
        A.DiaAttr_initAttrFromDefaults();
      t1 = $.DiaAttr__attr;
      t1.toString;
      $parent.appendChild(_this.__BaseDialog_dia_A).toString;
      t2 = _this.diaTable;
      t3 = t2.style;
      t3.cursor = _s7_;
      t4 = A._asStringQ(t1.$index(0, _s20_));
      t3.backgroundColor = t4 == null ? "" : t4;
      t4 = A._asStringQ(t1.$index(0, _s20_));
      t3.background = t4 == null ? "" : t4;
      t3.marginTop = "6px";
      t3.marginBottom = _s3_;
      t3 = _this.__BaseDialog_dia_A;
      t3.appendChild(t2).toString;
      t4 = type$._ElementEventStreamImpl_TouchEvent;
      t5 = t4._eval$1("~(1)?");
      t4 = t4._precomputed1;
      A._EventStreamSubscription$(t3, "touchmove", t5._as(new A.IconPanel_closure(true)), false, t4);
      nrows = B.JSInt_methods.$tdiv(6, ncols);
      if (6 % ncols > 0)
        ++nrows;
      rows = A.List_List$filled(nrows, null, false, type$.nullable_TableRowElement);
      _box_0.iconCallback = null;
      for (t3 = type$._ElementEventStreamImpl_MouseEvent, t6 = t3._eval$1("~(1)?"), t3 = t3._precomputed1, t7 = '<img src="' + iconPath + "/", t8 = type$.nullable_TableCellElement, iconcount = 0, i = 0; i < nrows; ++i) {
        t9 = document;
        t10 = t9.createElement("tr");
        t10.toString;
        B.JSArray_methods.$indexSet(rows, i, t10);
        row = rows[i];
        t10 = row.style;
        t10.toString;
        t11 = A._asStringQ(t1.$index(0, "DIALOG_TEXT_COLOR"));
        t10.color = t11 == null ? "" : t11;
        t10.cursor = _s7_;
        t11 = A._asStringQ(t1.$index(0, _s20_));
        t10.backgroundColor = t11 == null ? "" : t11;
        handleTouchStart = new A.IconPanel_handleTouchStart(_this);
        executIconFunction = new A.IconPanel_executIconFunction(_box_0, getIconCallbacks, iconNames);
        handleTouchEnd = new A.IconPanel_handleTouchEnd(_this, executIconFunction);
        iconCells = A.List_List$filled(ncols, null, false, t8);
        for (k = 0; k < ncols; ++k) {
          if (!(iconcount >= 0 && iconcount < 6))
            return A.ioore(iconNames, iconcount);
          iconName = iconNames[iconcount];
          t10 = t9.createElement("td");
          t10.toString;
          B.JSArray_methods.$indexSet(iconCells, k, t10);
          cell = iconCells[k];
          cell.id = "" + iconcount;
          B.TableCellElement_methods.insertAdjacentHtml$4$treeSanitizer$validator(cell, "beforeend", t7 + iconName + '" ' + _this.__IconPanel__iconStyle_A + ">", B.C__TrustedHtmlTreeSanitizer, null);
          t10 = cell.style;
          t10.cursor = _s7_;
          t11 = A._asStringQ(t1.$index(0, _s20_));
          t10.backgroundColor = t11 == null ? "" : t11;
          t10.padding = "5px";
          A._EventStreamSubscription$(cell, "mouseenter", t6._as(new A.IconPanel_closure0(iconCells, k, t1)), false, t3);
          A._EventStreamSubscription$(cell, "mouseleave", t6._as(new A.IconPanel_closure1(iconCells, k, t1)), false, t3);
          if (A.DiaUtils_isTablet()) {
            A._EventStreamSubscription$(cell, "touchstart", t5._as(new A.IconPanel_closure2(handleTouchStart)), false, t4);
            A._EventStreamSubscription$(cell, "touchend", t5._as(new A.IconPanel_closure3(handleTouchEnd)), false, t4);
          } else
            A._EventStreamSubscription$(cell, "click", t6._as(new A.IconPanel_closure4(executIconFunction)), false, t3);
          row.appendChild(cell).toString;
          t2.appendChild(row).toString;
          if (iconcount >= 5)
            break;
          ++iconcount;
        }
      }
      t1 = _this.__BaseDialog_dia_A.style;
      t1.position = "fixed";
      t1.left = "" + x + "px";
      t1.top = "" + y + "px";
      t1.marginLeft = _s3_;
      t1.marginTop = _s3_;
      t1.paddingTop = _s3_;
      t1.paddingLeft = _s3_;
      t1.width = "" + panelWidth + "px";
      B.CssStyleDeclaration_methods._setPropertyHelper$3(t1, B.CssStyleDeclaration_methods._browserPropertyName$1(t1, "opacity"), "1", "");
    },
    set$_lastTouchPoints(_lastTouchPoints) {
      this._lastTouchPoints = type$.nullable_List_Point_int._as(_lastTouchPoints);
    }
  };
  A.IconPanel_closure.prototype = {
    call$1(e) {
      type$.TouchEvent._as(e).preventDefault();
    },
    $signature: 1
  };
  A.IconPanel_handleTouchStart.prototype = {
    call$1(e) {
      this.$this.set$_lastTouchPoints(A.DiaUtils_getTouchPoints(e));
    },
    $signature: 1
  };
  A.IconPanel_executIconFunction.prototype = {
    call$1(e) {
      var eventCell, touchedIconNo, iconCallback,
        t1 = e.target,
        t2 = type$.ImageElement;
      if (t2._is(A._convertNativeToDart_EventTarget(t1))) {
        t1 = A._convertNativeToDart_EventTarget(t1);
        t1.toString;
        t1 = t2._as(t1).parentElement;
        t1.toString;
        type$.TableCellElement._as(t1);
        eventCell = t1;
      } else {
        t2 = type$.TableCellElement;
        if (t2._is(A._convertNativeToDart_EventTarget(t1)))
          eventCell = t2._as(A._convertNativeToDart_EventTarget(t1));
        else
          return;
      }
      t1 = eventCell.id;
      t1.toString;
      touchedIconNo = A.int_parse(t1);
      iconCallback = J.$index$asx(this.getIconCallbacks.call$0(), touchedIconNo);
      this._box_0.iconCallback = iconCallback;
      if (iconCallback != null)
        iconCallback.call$1(e);
    },
    $signature: 2
  };
  A.IconPanel_handleTouchEnd.prototype = {
    call$1(e) {
      var t2, t3, lastx, t4, lasty,
        t1 = e.changedTouches;
      if (t1 == null)
        return;
      if (t1.length === 0)
        return;
      t2 = this.$this._lastTouchPoints;
      t3 = t2 == null;
      if (t3)
        lastx = null;
      else {
        if (0 >= t2.length)
          return A.ioore(t2, 0);
        t4 = t2[0].x;
        lastx = t4;
      }
      if (lastx == null)
        lastx = 0;
      if (t3)
        lasty = null;
      else {
        if (0 >= t2.length)
          return A.ioore(t2, 0);
        t2 = t2[0].y;
        lasty = t2;
      }
      if (lasty == null)
        lasty = 0;
      t2 = B.TouchList_methods.get$first(t1);
      t3 = t2.pageX;
      t3.toString;
      t3 = B.JSNumber_methods.round$0(t3);
      t2 = t2.pageY;
      t2.toString;
      B.JSNumber_methods.round$0(t2);
      if (Math.abs(lastx - t3) <= 30) {
        t1 = B.TouchList_methods.get$first(t1);
        t2 = t1.pageX;
        t2.toString;
        B.JSNumber_methods.round$0(t2);
        t1 = t1.pageY;
        t1.toString;
        t1 = Math.abs(lasty - B.JSNumber_methods.round$0(t1)) > 20;
      } else
        t1 = true;
      if (t1)
        return;
      this.executIconFunction.call$1(e);
    },
    $signature: 1
  };
  A.IconPanel_closure0.prototype = {
    call$1($event) {
      var t1, t2;
      type$.MouseEvent._as($event);
      t1 = this.iconCells;
      t2 = this.k;
      if (!(t2 < t1.length))
        return A.ioore(t1, t2);
      t2 = t1[t2].style;
      t2.toString;
      t1 = A._asStringQ(this.attr.$index(0, "POPUP_SELECTION_COLOR"));
      t2.backgroundColor = t1 == null ? "" : t1;
    },
    $signature: 3
  };
  A.IconPanel_closure1.prototype = {
    call$1($event) {
      var t1, t2;
      type$.MouseEvent._as($event);
      t1 = this.iconCells;
      t2 = this.k;
      if (!(t2 < t1.length))
        return A.ioore(t1, t2);
      t2 = t1[t2].style;
      t2.toString;
      t1 = A._asStringQ(this.attr.$index(0, "ICONPANEL_BACKGROUND"));
      t2.backgroundColor = t1 == null ? "" : t1;
    },
    $signature: 3
  };
  A.IconPanel_closure2.prototype = {
    call$1(e) {
      this.handleTouchStart.call$1(type$.TouchEvent._as(e));
    },
    $signature: 1
  };
  A.IconPanel_closure3.prototype = {
    call$1(e) {
      this.handleTouchEnd.call$1(type$.TouchEvent._as(e));
    },
    $signature: 1
  };
  A.IconPanel_closure4.prototype = {
    call$1(e) {
      this.executIconFunction.call$1(type$.MouseEvent._as(e));
    },
    $signature: 3
  };
  A.PopupMenu.prototype = {
    PopupMenu$9($parent, id, htmlItemTexts, buttontypes, isChecked, popupCallback, x, y, preventDefault, _box_0) {
      var t2, t3, t4, t5, rows, displayedText, t6, itemstart, t7, t8, i, t9, t10, row, t11, actionCode, cell, cbox, t12, t13, _this = this,
        _s16_ = "POPUP_BACKGROUND",
        _s22_ = "DIALOG_POPUP_FONTSIZE2",
        _s3_ = "0px", _s2_ = "||",
        _s9_ = "beforeend",
        _s30_ = "DIALOG_POPUP_TEXT_CELL_PADDING",
        _s10_ = "touchstart",
        _s8_ = "touchend",
        nitems = htmlItemTexts.length,
        t1 = _this.__BaseDialog_dia_A;
      t1 === $ && A.throwLateFieldNI("dia");
      t1.id = id;
      t1 = _this.__BaseDialog_dia_A.style;
      t1.toString;
      if ($.DiaAttr__attr == null)
        A.DiaAttr_initAttrFromDefaults();
      t2 = A._asStringQ($.DiaAttr__attr.$index(0, _s16_));
      t1.backgroundColor = t2 == null ? "" : t2;
      t1.textAlign = "center";
      t1.padding = "0.3em";
      t1.margin = "1em auto";
      t1.border = "0";
      if ($.DiaAttr__attr == null)
        A.DiaAttr_initAttrFromDefaults();
      t2 = A.S($.DiaAttr__attr.$index(0, "DIALOG_TOPBAR_COLOR"));
      t1.borderTop = "1px solid " + t2;
      B.CssStyleDeclaration_methods._setPropertyHelper$3(t1, B.CssStyleDeclaration_methods._browserPropertyName$1(t1, "border-radius"), "8px", "");
      B.CssStyleDeclaration_methods._setPropertyHelper$3(t1, B.CssStyleDeclaration_methods._browserPropertyName$1(t1, "box-shadow"), "0 6px 10px rgba(0, 0, 0, 0.4)", "");
      if ($.DiaAttr__attr == null)
        A.DiaAttr_initAttrFromDefaults();
      t2 = A.S($.DiaAttr__attr.$index(0, _s22_));
      t1.fontSize = t2 + "px";
      t1.lineHeight = "110%";
      if ($.DiaAttr__attr == null)
        A.DiaAttr_initAttrFromDefaults();
      t2 = $.DiaAttr__attr.$index(0, "DIALOG_WIN_OPACITY");
      t2.toString;
      A._asString(t2);
      B.CssStyleDeclaration_methods._setPropertyHelper$3(t1, B.CssStyleDeclaration_methods._browserPropertyName$1(t1, "opacity"), t2, "");
      t1.zIndex = "100000000";
      if ($.DiaAttr__attr == null)
        A.DiaAttr_initAttrFromDefaults();
      t1 = $.DiaAttr__attr;
      t1.toString;
      $parent.appendChild(_this.__BaseDialog_dia_A).toString;
      t2 = _this.diaTable;
      t3 = t2.style;
      t3.borderCollapse = "collapse";
      t3.marginTop = "6px";
      t3.marginBottom = _s3_;
      t3 = _this.__BaseDialog_dia_A;
      t3.appendChild(t2).toString;
      t4 = type$._ElementEventStreamImpl_TouchEvent;
      t5 = t4._eval$1("~(1)?");
      t4 = t4._precomputed1;
      A._EventStreamSubscription$(t3, "touchmove", t5._as(new A.PopupMenu_closure(preventDefault)), false, t4);
      _box_0.cell = null;
      rows = A._setArrayType([], type$.JSArray_TableRowElement);
      if (0 >= htmlItemTexts.length)
        return A.ioore(htmlItemTexts, 0);
      t3 = htmlItemTexts[0].split(_s2_);
      if (0 >= t3.length)
        return A.ioore(t3, 0);
      displayedText = t3[0];
      if (0 >= htmlItemTexts.length)
        return A.ioore(htmlItemTexts, 0);
      t3 = htmlItemTexts[0].split(_s2_);
      if (1 >= t3.length)
        return A.ioore(t3, 1);
      if (t3[1] === "TITLE") {
        t3 = document;
        t6 = t3.createElement("tr");
        t6.toString;
        B.JSArray_methods.add$1(rows, t6);
        t3 = t3.createElement("td");
        t3.toString;
        _box_0.cell = t3;
        B.TableCellElement_methods.insertAdjacentHtml$4$treeSanitizer$validator(t3, _s9_, displayedText, B.C__TrustedHtmlTreeSanitizer, null);
        _box_0.cell.colSpan = 2;
        t3 = _box_0.cell.style;
        t3.textAlign = "center";
        t6 = A._asStringQ(t1.$index(0, "DIALOG_HEADER_COLOR"));
        t3.color = t6 == null ? "" : t6;
        t6 = A.S(t1.$index(0, "DIALOG_HEADER_FONTSIZE"));
        t3.fontSize = t6 + "px";
        B.JSArray_methods.get$last(rows).appendChild(_box_0.cell).toString;
        t2.appendChild(B.JSArray_methods.get$last(rows)).toString;
        new A.PopupMenu_addEmptyTableRow(_box_0, _this, rows, 2).call$0();
        itemstart = 1;
      } else
        itemstart = 0;
      for (t3 = type$._ElementEventStreamImpl_MouseEvent, t6 = t3._eval$1("~(1)?"), t3 = t3._precomputed1, t7 = buttontypes != null, t8 = isChecked != null, i = itemstart; i < nitems; ++i) {
        t9 = document;
        t10 = t9.createElement("tr");
        t10.toString;
        B.JSArray_methods.add$1(rows, t10);
        row = B.JSArray_methods.get$last(rows);
        t10 = row.style;
        t10.toString;
        t11 = A._asStringQ(t1.$index(0, "DIALOG_TEXT_COLOR"));
        t10.color = t11 == null ? "" : t11;
        A._EventStreamSubscription$(row, "mouseenter", t6._as(new A.PopupMenu_closure0(row, t1)), false, t3);
        A._EventStreamSubscription$(row, "mouseleave", t6._as(new A.PopupMenu_closure1(row, t1)), false, t3);
        if (!(i < htmlItemTexts.length))
          return A.ioore(htmlItemTexts, i);
        t10 = htmlItemTexts[i].split(_s2_);
        if (0 >= t10.length)
          return A.ioore(t10, 0);
        displayedText = t10[0];
        if (!(i < htmlItemTexts.length))
          return A.ioore(htmlItemTexts, i);
        t10 = htmlItemTexts[i].split(_s2_);
        if (1 >= t10.length)
          return A.ioore(t10, 1);
        actionCode = t10[1];
        cell = t9.createElement("td");
        cell.id = actionCode;
        if (t7 && t8) {
          if (!(i < buttontypes.length))
            return A.ioore(buttontypes, i);
          if (buttontypes[i] === "checkbox") {
            if (!(i < isChecked.length))
              return A.ioore(isChecked, i);
            t10 = isChecked[i];
            t10 = t10 === "true" || t10 === "false";
          } else
            t10 = false;
          if (t10) {
            cbox = A.InputElement_InputElement("checkbox");
            if (!(i < isChecked.length))
              return A.ioore(isChecked, i);
            B.InputElement_methods.set$checked(cbox, A.DiaUtils_getBoolFromString(isChecked[i]));
            t10 = cbox.style;
            t10.toString;
            t11 = A.S(t1.$index(0, _s22_));
            t10.fontSize = t11 + "px";
            cell.appendChild(cbox).toString;
          }
        } else {
          t10 = t9.createTextNode("");
          t10.toString;
          cell.appendChild(t10).toString;
          t10 = cell.style;
          t10.textAlign = "left";
          t10.cursor = "pointer";
          t10.padding = "7px";
          t10.margin = ".5em 1em";
        }
        t10 = new A.PopupMenu_execute(_this, displayedText);
        t11 = new A.PopupMenu_handleTouchStart(_this);
        t12 = new A.PopupMenu_handleTouchEnd(_this, t10);
        if (A.DiaUtils_isTablet()) {
          A._EventStreamSubscription$(cell, _s10_, t5._as(new A.PopupMenu_closure2(t11)), false, t4);
          A._EventStreamSubscription$(cell, _s8_, t5._as(new A.PopupMenu_closure3(t12)), false, t4);
        } else
          A._EventStreamSubscription$(cell, "click", t6._as(new A.PopupMenu_closure4(t10)), false, t3);
        row.appendChild(cell).toString;
        cell = t9.createElement("td");
        cell.id = actionCode;
        B.TableCellElement_methods.insertAdjacentHtml$4$treeSanitizer$validator(cell, _s9_, displayedText, B.C__TrustedHtmlTreeSanitizer, null);
        t9 = cell.style;
        t9.textAlign = "left";
        t9.cursor = "pointer";
        t13 = A._asStringQ(t1.$index(0, _s30_));
        t9.paddingBottom = t13 == null ? "" : t13;
        t13 = A._asStringQ(t1.$index(0, _s30_));
        t9.paddingTop = t13 == null ? "" : t13;
        t13 = A.S(t1.$index(0, _s22_));
        t9.fontSize = t13 + "px";
        B.TableCellElement_methods.insertAdjacentHtml$4$treeSanitizer$validator(cell, _s9_, "<br>", B.C__TrustedHtmlTreeSanitizer, null);
        if (A.DiaUtils_isTablet()) {
          A._EventStreamSubscription$(cell, _s10_, t5._as(new A.PopupMenu_closure5(t11)), false, t4);
          A._EventStreamSubscription$(cell, _s8_, t5._as(new A.PopupMenu_closure6(t12)), false, t4);
        } else
          A._EventStreamSubscription$(cell, "click", t6._as(new A.PopupMenu_closure7(t10)), false, t3);
        row.appendChild(cell).toString;
        t2.appendChild(row).toString;
      }
      t3 = _this.__BaseDialog_dia_A.style;
      t3.toString;
      t4 = A._asStringQ(t1.$index(0, _s16_));
      t3.backgroundColor = t4 == null ? "" : t4;
      t1 = A._asStringQ(t1.$index(0, _s16_));
      t3.background = t1 == null ? "" : t1;
      t3.position = "fixed";
      t3.left = "" + x + "px";
      t3.top = "" + y + "px";
      t3.marginLeft = _s3_;
      t3.marginTop = _s3_;
      t3.paddingTop = _s3_;
      t3.paddingLeft = _s3_;
      t1 = t2.clientWidth;
      t1.toString;
      t3.width = "" + (t1 + 6) + "px";
      B.CssStyleDeclaration_methods._setPropertyHelper$3(t3, B.CssStyleDeclaration_methods._browserPropertyName$1(t3, "opacity"), "1", "");
      t3.zIndex = "10000000";
    },
    set$lastTouchPoints(lastTouchPoints) {
      this.lastTouchPoints = type$.nullable_List_Point_int._as(lastTouchPoints);
    }
  };
  A.PopupMenu_closure.prototype = {
    call$1(e) {
      type$.TouchEvent._as(e);
      if (this.preventDefault)
        e.preventDefault();
    },
    $signature: 1
  };
  A.PopupMenu_addEmptyTableRow.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.rows,
        t2 = document,
        t3 = t2.createElement("tr");
      t3.toString;
      B.JSArray_methods.add$1(t1, t3);
      t2 = t2.createElement("td");
      t2.toString;
      t3 = _this._box_0;
      t3.cell = t2;
      B.TableCellElement_methods.insertAdjacentHtml$4$treeSanitizer$validator(t2, "beforeend", "&nbsp;", B.C__TrustedHtmlTreeSanitizer, null);
      t3.cell.colSpan = _this.NCOLS;
      B.JSArray_methods.get$last(t1).appendChild(t3.cell).toString;
      _this.$this.diaTable.appendChild(B.JSArray_methods.get$last(t1)).toString;
    },
    $signature: 0
  };
  A.PopupMenu_closure0.prototype = {
    call$1($event) {
      var t1, t2;
      type$.MouseEvent._as($event);
      t1 = this.row.style;
      t1.toString;
      t2 = A._asStringQ(this.attr.$index(0, "POPUP_SELECTION_COLOR"));
      t1.backgroundColor = t2 == null ? "" : t2;
      t1.color = "white";
    },
    $signature: 3
  };
  A.PopupMenu_closure1.prototype = {
    call$1($event) {
      var t1, t2, t3;
      type$.MouseEvent._as($event);
      t1 = this.row.style;
      t1.toString;
      t2 = this.attr;
      t3 = A._asStringQ(t2.$index(0, "POPUP_BACKGROUND"));
      t1.backgroundColor = t3 == null ? "" : t3;
      t2 = A._asStringQ(t2.$index(0, "DIALOG_TEXT_COLOR"));
      t1.color = t2 == null ? "" : t2;
    },
    $signature: 3
  };
  A.PopupMenu_execute.prototype = {
    call$1(curaction) {
      if (!B.JSString_methods.contains$1(this.displayedText, "<span style='color:lightgrey'>"))
        this.$this.close$1(0, new A.UserInput(curaction, null));
    },
    $signature: 13
  };
  A.PopupMenu_handleTouchStart.prototype = {
    call$1(e) {
      this.$this.set$lastTouchPoints(A.DiaUtils_getTouchPoints(e));
    },
    $signature: 1
  };
  A.PopupMenu_handleTouchEnd.prototype = {
    call$1(e) {
      var t2, t3, t4, lastx, t5, lasty,
        t1 = e.changedTouches;
      if (t1 == null)
        return;
      t2 = type$.Element._as(A._convertNativeToDart_EventTarget(e.target)).id;
      t2.toString;
      if (t1.length === 0)
        return;
      t3 = this.$this.lastTouchPoints;
      t4 = t3 == null;
      if (t4)
        lastx = null;
      else {
        if (0 >= t3.length)
          return A.ioore(t3, 0);
        t5 = t3[0].x;
        lastx = t5;
      }
      if (lastx == null)
        lastx = 0;
      if (t4)
        lasty = null;
      else {
        if (0 >= t3.length)
          return A.ioore(t3, 0);
        t3 = t3[0].y;
        lasty = t3;
      }
      if (lasty == null)
        lasty = 0;
      t3 = B.TouchList_methods.get$first(t1);
      t4 = t3.pageX;
      t4.toString;
      t4 = B.JSNumber_methods.round$0(t4);
      t3 = t3.pageY;
      t3.toString;
      B.JSNumber_methods.round$0(t3);
      if (Math.abs(lastx - t4) <= 30) {
        t1 = B.TouchList_methods.get$first(t1);
        t3 = t1.pageX;
        t3.toString;
        B.JSNumber_methods.round$0(t3);
        t1 = t1.pageY;
        t1.toString;
        t1 = Math.abs(lasty - B.JSNumber_methods.round$0(t1)) > 20;
      } else
        t1 = true;
      if (t1)
        return;
      this.execute.call$1(t2);
    },
    $signature: 1
  };
  A.PopupMenu_closure2.prototype = {
    call$1(e) {
      this.handleTouchStart.call$1(type$.TouchEvent._as(e));
    },
    $signature: 1
  };
  A.PopupMenu_closure3.prototype = {
    call$1(e) {
      this.handleTouchEnd.call$1(type$.TouchEvent._as(e));
    },
    $signature: 1
  };
  A.PopupMenu_closure4.prototype = {
    call$1(e) {
      var t1 = type$.Element._as(A._convertNativeToDart_EventTarget(type$.MouseEvent._as(e).target)).id;
      t1.toString;
      this.execute.call$1(t1);
    },
    $signature: 3
  };
  A.PopupMenu_closure5.prototype = {
    call$1(e) {
      this.handleTouchStart.call$1(type$.TouchEvent._as(e));
    },
    $signature: 1
  };
  A.PopupMenu_closure6.prototype = {
    call$1(e) {
      this.handleTouchEnd.call$1(type$.TouchEvent._as(e));
    },
    $signature: 1
  };
  A.PopupMenu_closure7.prototype = {
    call$1(e) {
      var t1 = type$.Element._as(A._convertNativeToDart_EventTarget(type$.MouseEvent._as(e).target)).id;
      t1.toString;
      this.execute.call$1(t1);
    },
    $signature: 3
  };
  A.PopupMenu_show_popupCallback.prototype = {
    call$1(results) {
      this.cpl.complete$1(0, results);
    },
    $signature: 4
  };
  A.BasicTable.prototype = {
    BasicTable$2(tableData, buttonClickListener) {
      var t3, nrows, ncols, t4, i, t5, t6, t7, t8, k, t9, t10, input, butinfo, _this = this,
        _s22_ = "TABLE_BACKGROUND_COLOR",
        _s8_ = ".5em 1em",
        _s9_ = "word-wrap",
        _s9_0 = "beforeend",
        t1 = document,
        t2 = t1.createElement("table");
      t2.toString;
      _this.__BasicTable_table_A = t2;
      t2 = type$.String;
      t2 = A.LinkedHashMap_LinkedHashMap$from($.$get$TableAttr_ATTR_DEFAULTS(), t2, t2);
      $.TableAttr_attr = t2;
      _this.set$__BasicTable_attr_A(type$.Map_String_String._as(t2));
      t2 = _this.__BasicTable_table_A.style;
      t2.margin = "1em 0";
      t2.overflow = "hidden";
      t3 = A._asStringQ($.$get$TableAttr_attr().$index(0, _s22_));
      t2.backgroundColor = t3 == null ? "" : t3;
      t3 = A._asStringQ($.$get$TableAttr_attr().$index(0, _s22_));
      t2.background = t3 == null ? "" : t3;
      t3 = A._asStringQ($.$get$TableAttr_attr().$index(0, "TABLE_TEXT_COLOR"));
      t2.color = t3 == null ? "" : t3;
      t3 = $.$get$TableAttr_attr().$index(0, "TABLE_BORDER_RADIUS");
      t3.toString;
      A._asString(t3);
      B.CssStyleDeclaration_methods._setPropertyHelper$3(t2, B.CssStyleDeclaration_methods._browserPropertyName$1(t2, "border-radius"), t3, "");
      t3 = A._asStringQ($.$get$TableAttr_attr().$index(0, "TABLE_OUTER_BORDER"));
      t2.border = t3 == null ? "" : t3;
      t2.borderSpacing = "0";
      t2 = _this.tableData;
      nrows = t2.length;
      if (0 >= nrows)
        return A.ioore(t2, 0);
      ncols = t2[0].length;
      for (t3 = type$._ElementEventStreamImpl_MouseEvent, t4 = t3._eval$1("~(1)?"), t3 = t3._precomputed1, i = 1; i < nrows; ++i) {
        t5 = t1.createElement("tr");
        t5.toString;
        _this.__BasicTable_table_A.appendChild(t5).toString;
        t6 = t5.style;
        t6.padding = "5px";
        t6 = i === 1;
        if (t6) {
          t7 = t5.style;
          t7.toString;
          t8 = A._asStringQ($.$get$TableAttr_attr().$index(0, "TABLE_HEADER_BACKGROUND_COLOR"));
          t7.backgroundColor = t8 == null ? "" : t8;
          t8 = A._asStringQ($.$get$TableAttr_attr().$index(0, "TABLE_HEADER_TEXT_COLOR"));
          t7.color = t8 == null ? "" : t8;
          t7.padding = "7px";
          t8 = A._asStringQ($.$get$TableAttr_attr().$index(0, "TABLE_HEADER_TEXT_ALIGN"));
          t7.textAlign = t8 == null ? "" : t8;
          t7.margin = _s8_;
        }
        if ((i & 1) === 0 && i !== 0) {
          t7 = t5.style;
          t7.toString;
          t8 = _this.__BasicTable_attr_A;
          t8 === $ && A.throwLateFieldNI("attr");
          t8 = A._asStringQ(t8.$index(0, "TABLE_HIGHLIGHT_COLOR"));
          t7.backgroundColor = t8 == null ? "" : t8;
        }
        for (t7 = i > 1, k = 1; k < ncols; ++k) {
          t8 = t1.createElement("td");
          t8.toString;
          t5.appendChild(t8).toString;
          if (t6) {
            t9 = t8.style;
            t9.textAlign = "center";
            t9.margin = _s8_;
            t9.padding = "5px";
            t10 = B.CssStyleDeclaration_methods._browserPropertyName$1(t9, _s9_);
            t9.setProperty(t10, "break-word", "");
            t9.maxWidth = "15em";
          } else {
            t9 = t8.style;
            t9.textAlign = "left";
            t9.margin = _s8_;
            t9.padding = "5px";
            t10 = B.CssStyleDeclaration_methods._browserPropertyName$1(t9, _s9_);
            t9.setProperty(t10, "break-word", "");
            t9.maxWidth = "15em";
          }
          if (k > 1) {
            t9 = t8.style;
            t9.toString;
            t10 = _this.__BasicTable_attr_A;
            t10 === $ && A.throwLateFieldNI("attr");
            t10 = t10.$index(0, "TABLE_INNER_CELL_LEFT_BORDER_COLOR");
            t10.toString;
            t10 = J.$add$ansx(t10, " 1px solid");
            t9.borderLeft = t10;
          }
          if (t7 && k === 1) {
            if (!(i < t2.length))
              return A.ioore(t2, i);
            t9 = t2[i];
            if (0 >= t9.length)
              return A.ioore(t9, 0);
            t8.id = t9[0];
          }
          if (!(i < t2.length))
            return A.ioore(t2, i);
          t9 = t2[i];
          if (!(k < t9.length))
            return A.ioore(t9, k);
          t9 = t9[k];
          if (t9 === "EMPTY_INPUT_CELL") {
            input = A.InputElement_InputElement("text");
            B.InputElement_methods.set$value(input, "");
            t8.appendChild(input).toString;
          } else if (t9 === "EMPTY_TEXT_AREA") {
            t9 = t1.createElement("textarea");
            t9.toString;
            B.TextAreaElement_methods.set$value(t9, "");
            t9.rows = 4;
            t8.appendChild(t9).toString;
          } else if (B.JSString_methods.startsWith$1(t9, "BUTTON")) {
            butinfo = t9.split("||");
            t9 = t1.createElement("button");
            t9.toString;
            t10 = butinfo.length;
            if (1 >= t10)
              return A.ioore(butinfo, 1);
            B.ButtonElement_methods.insertAdjacentHtml$4$treeSanitizer$validator(t9, _s9_0, butinfo[1], B.C__TrustedHtmlTreeSanitizer, null);
            if (2 >= t10)
              return A.ioore(butinfo, 2);
            B.ButtonElement_methods.set$id(t9, butinfo[2]);
            A._EventStreamSubscription$(t9, "click", t4._as(new A.BasicTable_closure(buttonClickListener, t9)), false, t3);
            t8.appendChild(t9).toString;
          } else
            B.TableCellElement_methods.insertAdjacentHtml$4$treeSanitizer$validator(t8, _s9_0, t9, B.C__TrustedHtmlTreeSanitizer, null);
        }
      }
    },
    set$__BasicTable_attr_A(__BasicTable_attr_A) {
      this.__BasicTable_attr_A = type$.Map_String_String._as(__BasicTable_attr_A);
    }
  };
  A.BasicTable_closure.prototype = {
    call$1($event) {
      var t1 = this.buttonClickListener;
      if (t1 != null)
        t1.call$1(this.but);
    },
    $signature: 5
  };
  A.showNonModalDialog_closeCallback.prototype = {
    call$1(results) {
      A.Info_show(this.RED + "Non-modal dialog closed.");
    },
    $signature: 4
  };
  A.DialogAttributeChanger_changeDialogAttributes_change.prototype = {
    call$0() {
      var t1 = type$.String;
      A.DiaAttr_setAttr(A.LinkedHashMap_LinkedHashMap$_literal(["DIALOG_TEXT_FONTSIZE", "14", "DIALOG_HEADER_COLOR", "Brown", "DIALOG_HEADER_FONTSIZE", "20", "DIALOG_BACKGROUND", "orange", "DIALOG_BORDER_RADIUS", "0"], t1, t1));
      A.ActButton_setAttr(A.LinkedHashMap_LinkedHashMap$_literal(["BUT_BACKGROUND", "DarkBlue", "BUT_OPACITY_LEAVE", "0.7", "BUT_COLOR", "yellow", "BUT_BORDER_RADIUS", "0px"], t1, t1));
    },
    $signature: 0
  };
  A.DialogAttributeChanger_changeDialogAttributes_reset.prototype = {
    call$0() {
      var t2,
        t1 = $.DialogAttributeChanger_dia_attr_saved;
      if (t1 == null) {
        t1 = type$.dynamic;
        t1 = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      }
      t2 = type$.String;
      A.DiaAttr_setAttr(A.LinkedHashMap_LinkedHashMap$from(t1, t2, t2));
      t1 = $.DialogAttributeChanger_but_attr_saved;
      if (t1 == null) {
        t1 = type$.dynamic;
        t1 = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      }
      A.ActButton_setAttr(A.LinkedHashMap_LinkedHashMap$from(t1, t2, t2));
    },
    $signature: 0
  };
  A.showIconPanel_getIconCallbacks.prototype = {
    call$0() {
      var t1 = new A.showIconPanel_getIconCallbacks_out(this._box_0);
      return A._setArrayType([new A.showIconPanel_getIconCallbacks_asteriskCallback(t1), new A.showIconPanel_getIconCallbacks_divideCallback(t1), new A.showIconPanel_getIconCallbacks_vresetCallback(t1), new A.showIconPanel_getIconCallbacks_exactZoomCallback(t1), new A.showIconPanel_getIconCallbacks_axisCallback(t1), new A.showIconPanel_getIconCallbacks_infoCallback(t1)], type$.JSArray_of_void_Function_UIEvent);
    },
    $signature: 29
  };
  A.showIconPanel_getIconCallbacks_out.prototype = {
    call$1(iconName) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$self = this, t1;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait(A.Info_confirm("'" + iconName + "' icon pressed!<br>Hit 'Close' to close the icon panel.", A._setArrayType(["Close"], type$.JSArray_String)), $async$call$1);
            case 2:
              // returning from await.
              if ($async$result._buttonCode === $.DiaAttr_DIA_ACT_BUT1) {
                t1 = $async$self._box_0.iconPanel;
                if (t1 != null)
                  t1.close$1(0, null);
              }
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 13
  };
  A.showIconPanel_getIconCallbacks_asteriskCallback.prototype = {
    call$1(e) {
      type$.UIEvent._as(e);
      this.out.call$1("asterisk");
    },
    $signature: 2
  };
  A.showIconPanel_getIconCallbacks_divideCallback.prototype = {
    call$1(e) {
      type$.UIEvent._as(e);
      this.out.call$1("divide");
    },
    $signature: 2
  };
  A.showIconPanel_getIconCallbacks_vresetCallback.prototype = {
    call$1(e) {
      type$.UIEvent._as(e);
      this.out.call$1("vreset");
    },
    $signature: 2
  };
  A.showIconPanel_getIconCallbacks_exactZoomCallback.prototype = {
    call$1(e) {
      type$.UIEvent._as(e);
      this.out.call$1("exactzoom");
    },
    $signature: 2
  };
  A.showIconPanel_getIconCallbacks_axisCallback.prototype = {
    call$1(e) {
      type$.UIEvent._as(e);
      this.out.call$1("axis");
    },
    $signature: 2
  };
  A.showIconPanel_getIconCallbacks_infoCallback.prototype = {
    call$1(e) {
      type$.UIEvent._as(e);
      this.out.call$1("info");
    },
    $signature: 2
  };
  A.showIconPanel_closeCallback.prototype = {
    call$1(results) {
      A.ExampleDispatcher$();
    },
    $signature: 4
  };
  A.showFileInputDialog_fileInputCallback.prototype = {
    $call$body$showFileInputDialog_fileInputCallback(fileList) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, nselected, out, i, t1, t2, MSG1, msg;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (fileList == null) {
                A.ExampleDispatcher$();
                // goto return
                $async$goto = 1;
                break;
              }
              nselected = fileList.length;
              out = new A.StringBuffer("");
              for (i = 0, t1 = ""; i < nselected; ++i, t1 = t2) {
                t2 = fileList[i].name;
                t2.toString;
                t2 = t1 + (t2 + "<br>");
                out._contents = t2;
              }
              MSG1 = "You selected the following " + nselected + " files";
              msg = nselected === 1 ? "You selected the following file" : MSG1;
              $async$goto = 3;
              return A._asyncAwait(A.Info_confirm(msg + ":<br>" + ('<span style="color:red">' + out.toString$0(0) + "</span>") + "<br>Hit 'OK' to re-open the file dialog.", A._setArrayType(["OK"], type$.JSArray_String)), $async$call$1);
            case 3:
              // returning from await.
              if ($async$result._buttonCode === $.DiaAttr_DIA_ACT_BUT1)
                A.showFileInputDialog();
              else
                A.ExampleDispatcher$();
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    call$1(fileList) {
      return this.$call$body$showFileInputDialog_fileInputCallback(type$.nullable_List_File._as(fileList));
    },
    $signature: 30
  };
  A.showSimpleTable_closeCallback.prototype = {
    call$1(userInput) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic);
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              A.ExampleDispatcher$();
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 4
  };
  A.showInterActiveTable_closeCallback.prototype = {
    call$1(userInput) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic);
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              A.ExampleDispatcher$();
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 4
  };
  A.showInterActiveTable_tableButtonClickListener.prototype = {
    call$1(button) {
      var userInput, t2, t3, newValue, i, t4, row, inputField,
        t1 = this.btable._readLocal$0().__BasicTable_table_A;
      t1 === $ && A.throwLateFieldNI("table");
      userInput = new A.StringBuffer("");
      userInput._contents = "" + "Contents of text entry fields:<br>";
      for (t2 = type$.TableRowElement, t3 = type$.TableCellElement, newValue = "", i = 1; t4 = t1.rows, i < t4.length; ++i) {
        row = t2._as(t4[i]);
        t4 = row.cells;
        if (3 >= t4.length)
          return A.ioore(t4, 3);
        inputField = J.querySelector$1$x(t3._as(t4[3]), "input");
        if (inputField == null) {
          t4 = row.cells;
          if (3 >= t4.length)
            return A.ioore(t4, 3);
          inputField = J.querySelector$1$x(t3._as(t4[3]), "textarea");
        }
        if (inputField != null) {
          newValue = A._asString(J.get$value$x(inputField));
          if (newValue.length !== 0)
            userInput._contents += "row " + i + ": value=" + newValue + "<br>";
        }
      }
      if (newValue.length === 0)
        userInput._contents += "Nothing entered.";
      t1 = button.id;
      t1.toString;
      A.Info_show("You clicked the button with id = " + t1 + "<br>" + userInput.toString$0(0));
    },
    $signature: 31
  };
  A.ExampleDispatcher.prototype = {
    showDialogExamples$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$self = this, t1, uin, t2, i, t3;
      var $async$showDialogExamples$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $.ExampleDispatcher___app_div._value = type$.DivElement._as(document.querySelector("#app_div"));
              if ($.ExampleDispatcher_itemsChecked == null) {
                t1 = A.List_List$filled(14, "false", false, type$.String);
                $.ExampleDispatcher_itemsChecked = t1;
                B.JSArray_methods.$indexSet(t1, 0, "true");
              }
              t1 = type$.nullable_String;
              $async$goto = 2;
              return A._asyncAwait(A.Info_get("radio", "Examples for the Dart package *smart_dialogs</i>.<br>Please select an example and press OK", $async$self.items, null, A.List_List$filled(14, null, false, t1), A.List_List$filled(14, 0, false, type$.int), $.ExampleDispatcher_itemsChecked, true, null), $async$showDialogExamples$0);
            case 2:
              // returning from await.
              uin = $async$result;
              $async$goto = uin._buttonCode === "DIA_ACT_OK" ? 3 : 4;
              break;
            case 3:
              // then
              t2 = type$.String;
              $.ExampleDispatcher_itemsChecked = A.List_List$filled(14, "false", false, t2);
              i = 0;
            case 5:
              // for condition
              if (!(i < 14)) {
                // goto after for
                $async$goto = 7;
                break;
              }
              $async$goto = uin.getCheckedState$1(i) === "true" ? 8 : 9;
              break;
            case 8:
              // then
              t3 = $.ExampleDispatcher_itemsChecked;
              t3.toString;
              B.JSArray_methods.$indexSet(t3, i, "true");
              $.DiaAttr__attr = A.LinkedHashMap_LinkedHashMap$from($.$get$DiaAttr_ATTR_DIALOGS_DESKTOP(), t2, t1);
              t3 = window.navigator.userAgent.toLowerCase();
              if (A.stringContainsUnchecked(t3, "iphone", 0)) {
                t3 = window.navigator.vendor;
                t3 = A.stringContainsUnchecked(t3, "Apple Computer", 0);
              } else
                t3 = false;
              if (t3 && true)
                $.DiaAttr__attr = A.LinkedHashMap_LinkedHashMap$from($.$get$DiaAttr_ATTR_DIALOGS_PHONE(), t2, t1);
              else if (A.DiaUtils_isTablet())
                $.DiaAttr__attr = A.LinkedHashMap_LinkedHashMap$from($.$get$DiaAttr_ATTR_DIALOGS_TABLET(), t2, t1);
              $async$goto = 10;
              return A._asyncAwait($async$self.itemsFuncs[i].call$0(), $async$showDialogExamples$0);
            case 10:
              // returning from await.
              // goto after for
              $async$goto = 7;
              break;
            case 9:
              // join
            case 6:
              // for update
              ++i;
              // goto for condition
              $async$goto = 5;
              break;
            case 7:
              // after for
            case 4:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$showDialogExamples$0, $async$completer);
    }
  };
  (function aliases() {
    var _ = J.Interceptor.prototype;
    _.super$Interceptor$toString = _.toString$0;
    _ = J.LegacyJavaScriptObject.prototype;
    _.super$LegacyJavaScriptObject$toString = _.toString$0;
  })();
  (function installTearOffs() {
    var _static_1 = hunkHelpers._static_1,
      _static_0 = hunkHelpers._static_0;
    _static_1(A, "async__AsyncRun__scheduleImmediateJsOverride$closure", "_AsyncRun__scheduleImmediateJsOverride", 9);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithSetImmediate$closure", "_AsyncRun__scheduleImmediateWithSetImmediate", 9);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithTimer$closure", "_AsyncRun__scheduleImmediateWithTimer", 9);
    _static_0(A, "async___startMicrotaskLoop$closure", "_startMicrotaskLoop", 0);
    _static_0(A, "examples__showInfoDialog$closure", "showInfoDialog", 0);
    _static_0(A, "examples__showConfirmDialog$closure", "showConfirmDialog", 6);
    _static_0(A, "examples__showSingleLineInputDialog$closure", "showSingleLineInputDialog", 6);
    _static_0(A, "examples__showMultiLineInputDialog$closure", "showMultiLineInputDialog", 0);
    _static_0(A, "examples__showAdvancedInputDialogCheckButtons$closure", "showAdvancedInputDialogCheckButtons", 6);
    _static_0(A, "examples__showAdvancedInputDialogRadioButtons$closure", "showAdvancedInputDialogRadioButtons", 6);
    _static_0(A, "examples__showAdvancedInputDialog2D$closure", "showAdvancedInputDialog2D", 6);
    _static_0(A, "examples__showNonModalDialog$closure", "showNonModalDialog", 0);
    _static_0(A, "examples_DialogAttributeChanger_changeDialogAttributes$closure", "DialogAttributeChanger_changeDialogAttributes", 10);
    _static_0(A, "examples__showIconPanel$closure", "showIconPanel", 10);
    _static_0(A, "examples__showFileInputDialog$closure", "showFileInputDialog", 10);
    _static_0(A, "examples__showPopupMenu$closure", "showPopupMenu", 0);
    _static_0(A, "examples__showSimpleTable$closure", "showSimpleTable", 0);
    _static_0(A, "examples__showInterActiveTable$closure", "showInterActiveTable", 0);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(A.Object, null);
    _inheritMany(A.Object, [A.JS_CONST, J.Interceptor, J.ArrayIterator, A.Error, A.SentinelValue, A.Iterable, A.ListIterator, A.TypeErrorDecoder, A.NullThrownFromJavaScriptException, A.ExceptionAndStackTrace, A._StackTrace, A.Closure, A.MapBase, A.LinkedHashMapCell, A.LinkedHashMapKeyIterator, A.StringMatch, A._StringAllMatchesIterator, A._Cell, A.Rti, A._FunctionParameters, A._Type, A._TimerImpl, A._AsyncAwaitCompleter, A.AsyncError, A._Completer, A._FutureListener, A._Future, A._AsyncCallbackEntry, A.Stream, A._StreamIterator, A._Zone, A.ListBase, A.StackOverflowError, A._Exception, A.FormatException, A.Null, A._StringStackTrace, A.StringBuffer, A.CssStyleDeclarationBase, A.EventStreamProvider, A._EventStreamSubscription, A.ImmutableListMixin, A._WrappedIterator, A.FixedSizeListIterator, A._DOMWindowCrossFrame, A._TrustedHtmlTreeSanitizer, A.Point, A._RectangleBase, A.BaseDialog, A.UserInput, A.ActButton, A.BasicTable, A.ExampleDispatcher]);
    _inheritMany(J.Interceptor, [J.JSBool, J.JSNull, J.JavaScriptObject, J.JSNumber, J.JSString]);
    _inheritMany(J.JavaScriptObject, [J.LegacyJavaScriptObject, J.JSArray, A.EventTarget, A.Blob, A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase, A.DomException, A.DomRectReadOnly, A.Event, A._FileList_JavaScriptObject_ListMixin, A._HtmlCollection_JavaScriptObject_ListMixin, A.Location, A._NodeList_JavaScriptObject_ListMixin, A.Touch, A._TouchList_JavaScriptObject_ListMixin, A.__NamedNodeMap_JavaScriptObject_ListMixin]);
    _inheritMany(J.LegacyJavaScriptObject, [J.PlainJavaScriptObject, J.UnknownJavaScriptObject, J.JavaScriptFunction]);
    _inherit(J.JSUnmodifiableArray, J.JSArray);
    _inheritMany(J.JSNumber, [J.JSInt, J.JSNumNotInt]);
    _inheritMany(A.Error, [A.LateError, A.TypeError, A.JsNoSuchMethodError, A.UnknownJsTypeError, A._CyclicInitializationError, A.RuntimeError, A._Error, A.AssertionError, A.ArgumentError, A.UnsupportedError, A.UnimplementedError, A.StateError, A.ConcurrentModificationError]);
    _inherit(A.EfficientLengthIterable, A.Iterable);
    _inheritMany(A.EfficientLengthIterable, [A.ListIterable, A.LinkedHashMapKeyIterable]);
    _inherit(A.SubListIterable, A.ListIterable);
    _inherit(A.NullError, A.TypeError);
    _inheritMany(A.Closure, [A.Closure0Args, A.Closure2Args, A.TearOffClosure, A.initHooks_closure, A.initHooks_closure1, A._AsyncRun__initializeScheduleImmediate_internalCallback, A._AsyncRun__initializeScheduleImmediate_closure, A._awaitOnObject_closure, A._Future__chainForeignFuture_closure, A._Future__propagateToListeners_handleWhenCompleteCallback_closure, A.Stream_length_closure, A._RootZone_bindUnaryCallbackGuarded_closure, A._EventStreamSubscription_closure, A.ActButton_setButtonStyle_closure, A.ActButton_setButtonStyle_closure0, A.ActButton_setButtonStyle_closure1, A.ActButton_setButtonStyle_closure2, A.FileSelectionDialog_closure, A.FileSelectionDialog_closure0, A.FileSelectionDialog_closure1, A.InputDialog_init_closure, A.InputDialog_init_appendTextInputField, A.InputDialog_init_appendTextInputField_closure, A.InputDialog_init_appendTextInputField_closure0, A.InputDialog_init_appendComboBox_closure, A.InputDialog_init_appendComboBox__closure, A.InputDialog_init_appendComboBox_closure0, A.InputDialog_init_closure0, A.InputDialog_init_closure1, A.InputDialog_show_closeCallback, A.InputDialog_show2D_closeCallback, A.InfoDialog_show_closeCallback, A.IconPanel_closure, A.IconPanel_handleTouchStart, A.IconPanel_executIconFunction, A.IconPanel_handleTouchEnd, A.IconPanel_closure0, A.IconPanel_closure1, A.IconPanel_closure2, A.IconPanel_closure3, A.IconPanel_closure4, A.PopupMenu_closure, A.PopupMenu_closure0, A.PopupMenu_closure1, A.PopupMenu_execute, A.PopupMenu_handleTouchStart, A.PopupMenu_handleTouchEnd, A.PopupMenu_closure2, A.PopupMenu_closure3, A.PopupMenu_closure4, A.PopupMenu_closure5, A.PopupMenu_closure6, A.PopupMenu_closure7, A.PopupMenu_show_popupCallback, A.BasicTable_closure, A.showNonModalDialog_closeCallback, A.showIconPanel_getIconCallbacks_out, A.showIconPanel_getIconCallbacks_asteriskCallback, A.showIconPanel_getIconCallbacks_divideCallback, A.showIconPanel_getIconCallbacks_vresetCallback, A.showIconPanel_getIconCallbacks_exactZoomCallback, A.showIconPanel_getIconCallbacks_axisCallback, A.showIconPanel_getIconCallbacks_infoCallback, A.showIconPanel_closeCallback, A.showFileInputDialog_fileInputCallback, A.showSimpleTable_closeCallback, A.showInterActiveTable_closeCallback, A.showInterActiveTable_tableButtonClickListener]);
    _inheritMany(A.TearOffClosure, [A.StaticClosure, A.BoundClosure]);
    _inherit(A.JsLinkedHashMap, A.MapBase);
    _inheritMany(A.Closure2Args, [A.initHooks_closure0, A._awaitOnObject_closure0, A._wrapJsFunctionForAsync_closure, A._Future__chainForeignFuture_closure0, A.LinkedHashMap_LinkedHashMap$from_closure, A.MapBase_mapToString_closure, A.InputDialog_init_executeButton, A.InputDialog_init_appendComboBox]);
    _inherit(A._TypeError, A._Error);
    _inheritMany(A.Closure0Args, [A._AsyncRun__scheduleImmediateJsOverride_internalCallback, A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback, A._TimerImpl_internalCallback, A._Future__addListener_closure, A._Future__prependListeners_closure, A._Future__chainForeignFuture_closure1, A._Future__chainCoreFutureAsync_closure, A._Future__asyncCompleteWithValue_closure, A._Future__asyncCompleteError_closure, A._Future__propagateToListeners_handleWhenCompleteCallback, A._Future__propagateToListeners_handleValueCallback, A._Future__propagateToListeners_handleError, A.Stream_length_closure0, A._rootHandleError_closure, A._RootZone_bindCallbackGuarded_closure, A.InputDialog_init_addEmptyTableRow, A.InputDialog_init_getResults, A.PopupMenu_addEmptyTableRow, A.DialogAttributeChanger_changeDialogAttributes_change, A.DialogAttributeChanger_changeDialogAttributes_reset, A.showIconPanel_getIconCallbacks]);
    _inherit(A._AsyncCompleter, A._Completer);
    _inherit(A._RootZone, A._Zone);
    _inheritMany(A.ArgumentError, [A.RangeError, A.IndexError]);
    _inheritMany(A.EventTarget, [A.Node, A.Window]);
    _inheritMany(A.Node, [A.Element, A.CharacterData]);
    _inherit(A.HtmlElement, A.Element);
    _inheritMany(A.HtmlElement, [A.AnchorElement, A.AreaElement, A.ButtonElement, A.DataElement, A.DivElement, A.FormElement, A.ImageElement, A.InputElement, A.LIElement, A.MeterElement, A.OptionElement, A.OutputElement, A.ParamElement, A.ProgressElement, A.SelectElement, A.TableCellElement, A.TableElement, A.TableRowElement, A.TextAreaElement]);
    _inherit(A.CssStyleDeclaration, A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase);
    _inherit(A.File, A.Blob);
    _inherit(A._FileList_JavaScriptObject_ListMixin_ImmutableListMixin, A._FileList_JavaScriptObject_ListMixin);
    _inherit(A.FileList, A._FileList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin, A._HtmlCollection_JavaScriptObject_ListMixin);
    _inherit(A.HtmlCollection, A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.UIEvent, A.Event);
    _inheritMany(A.UIEvent, [A.KeyboardEvent, A.MouseEvent, A.TouchEvent]);
    _inherit(A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin, A._NodeList_JavaScriptObject_ListMixin);
    _inherit(A.NodeList, A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._TouchList_JavaScriptObject_ListMixin_ImmutableListMixin, A._TouchList_JavaScriptObject_ListMixin);
    _inherit(A.TouchList, A._TouchList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._DomRect, A.DomRectReadOnly);
    _inherit(A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin, A.__NamedNodeMap_JavaScriptObject_ListMixin);
    _inherit(A._NamedNodeMap, A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._EventStream, A.Stream);
    _inherit(A._ElementEventStreamImpl, A._EventStream);
    _inherit(A._WrappedList, A.ListBase);
    _inherit(A.Rectangle, A._RectangleBase);
    _inheritMany(A.BaseDialog, [A.FileSelectionDialog, A.InputDialog, A.IconPanel, A.PopupMenu]);
    _inherit(A.InfoDialog, A.InputDialog);
    _mixin(A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase, A.CssStyleDeclarationBase);
    _mixin(A._FileList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._FileList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._HtmlCollection_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._NodeList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._TouchList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._TouchList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A.__NamedNodeMap_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
  })();
  var init = {
    typeUniverse: {eC: new Map(), tR: {}, eT: {}, tPV: {}, sEA: []},
    mangledGlobalNames: {int: "int", double: "double", num: "num", String: "String", bool: "bool", Null: "Null", List: "List"},
    mangledNames: {},
    types: ["~()", "~(TouchEvent)", "~(UIEvent)", "~(MouseEvent)", "~(UserInput)", "~(Event)", "Future<~>()", "~(KeyboardEvent)", "Null(Event)", "~(~())", "@()", "Null(@)", "Null()", "~(String)", "@(@)", "@(@,String)", "@(String)", "Null(~())", "~(@)", "Null(@,StackTrace)", "~(int,@)", "Null(Object,StackTrace)", "_Future<@>(@)", "~(@,@)", "~(Object?,Object?)", "Map<int,List<String?>>()", "~(int,Event)", "TextInputElement?(String?)", "~(List<List<String>?>?,List<TextInputElement?>?)", "List<~(UIEvent)>()", "~(List<File>?)", "~(ButtonElement)"],
    interceptorsByTag: null,
    leafTags: null,
    arrayRti: Symbol("$ti")
  };
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"PlainJavaScriptObject":"LegacyJavaScriptObject","UnknownJavaScriptObject":"LegacyJavaScriptObject","JavaScriptFunction":"LegacyJavaScriptObject","AbortPaymentEvent":"Event","ExtendableEvent":"Event","MathMLElement":"Element","AudioElement":"HtmlElement","MediaElement":"HtmlElement","HtmlDocument":"Node","Document":"Node","PointerEvent":"MouseEvent","CompositionEvent":"UIEvent","CDataSection":"CharacterData","Text":"CharacterData","HtmlFormControlsCollection":"HtmlCollection","JSBool":{"bool":[],"TrustedGetRuntimeType":[]},"JSNull":{"Null":[],"TrustedGetRuntimeType":[]},"JSArray":{"List":["1"],"Iterable":["1"]},"JSUnmodifiableArray":{"JSArray":["1"],"List":["1"],"Iterable":["1"]},"ArrayIterator":{"Iterator":["1"]},"JSNumber":{"num":[]},"JSInt":{"int":[],"num":[],"TrustedGetRuntimeType":[]},"JSNumNotInt":{"num":[],"TrustedGetRuntimeType":[]},"JSString":{"String":[],"Pattern":[],"TrustedGetRuntimeType":[]},"LateError":{"Error":[]},"EfficientLengthIterable":{"Iterable":["1"]},"ListIterable":{"Iterable":["1"]},"SubListIterable":{"ListIterable":["1"],"Iterable":["1"],"ListIterable.E":"1"},"ListIterator":{"Iterator":["1"]},"NullError":{"TypeError":[],"Error":[]},"JsNoSuchMethodError":{"Error":[]},"UnknownJsTypeError":{"Error":[]},"_StackTrace":{"StackTrace":[]},"Closure":{"Function":[]},"Closure0Args":{"Function":[]},"Closure2Args":{"Function":[]},"TearOffClosure":{"Function":[]},"StaticClosure":{"Function":[]},"BoundClosure":{"Function":[]},"_CyclicInitializationError":{"Error":[]},"RuntimeError":{"Error":[]},"JsLinkedHashMap":{"MapBase":["1","2"],"LinkedHashMap":["1","2"],"Map":["1","2"],"MapBase.K":"1","MapBase.V":"2"},"LinkedHashMapKeyIterable":{"Iterable":["1"]},"LinkedHashMapKeyIterator":{"Iterator":["1"]},"StringMatch":{"Match":[]},"_StringAllMatchesIterator":{"Iterator":["Match"]},"_Error":{"Error":[]},"_TypeError":{"TypeError":[],"Error":[]},"_Future":{"Future":["1"]},"AsyncError":{"Error":[]},"_AsyncCompleter":{"_Completer":["1"]},"_Zone":{"Zone":[]},"_RootZone":{"_Zone":[],"Zone":[]},"ListBase":{"List":["1"],"Iterable":["1"]},"MapBase":{"Map":["1","2"]},"int":{"num":[]},"List":{"Iterable":["1"]},"String":{"Pattern":[]},"AssertionError":{"Error":[]},"TypeError":{"Error":[]},"ArgumentError":{"Error":[]},"RangeError":{"Error":[]},"IndexError":{"Error":[]},"UnsupportedError":{"Error":[]},"UnimplementedError":{"Error":[]},"StateError":{"Error":[]},"ConcurrentModificationError":{"Error":[]},"StackOverflowError":{"Error":[]},"_StringStackTrace":{"StackTrace":[]},"ButtonElement":{"Element":[],"Node":[],"EventTarget":[]},"InputElement":{"TextInputElement":[],"Element":[],"Node":[],"EventTarget":[]},"TextInputElement":{"Element":[],"Node":[],"EventTarget":[]},"KeyboardEvent":{"UIEvent":[],"Event":[]},"MouseEvent":{"UIEvent":[],"Event":[]},"Node":{"EventTarget":[]},"TableCellElement":{"Element":[],"Node":[],"EventTarget":[]},"TableRowElement":{"Element":[],"Node":[],"EventTarget":[]},"TouchEvent":{"UIEvent":[],"Event":[]},"UIEvent":{"Event":[]},"HtmlElement":{"Element":[],"Node":[],"EventTarget":[]},"AnchorElement":{"Element":[],"Node":[],"EventTarget":[]},"AreaElement":{"Element":[],"Node":[],"EventTarget":[]},"CharacterData":{"Node":[],"EventTarget":[]},"DataElement":{"Element":[],"Node":[],"EventTarget":[]},"DivElement":{"Element":[],"Node":[],"EventTarget":[]},"DomRectReadOnly":{"Rectangle":["num"]},"Element":{"Node":[],"EventTarget":[]},"FileList":{"ListBase":["File"],"ImmutableListMixin":["File"],"List":["File"],"JavaScriptIndexingBehavior":["File"],"Iterable":["File"],"ListBase.E":"File","ImmutableListMixin.E":"File"},"FormElement":{"Element":[],"Node":[],"EventTarget":[]},"HtmlCollection":{"ListBase":["Node"],"ImmutableListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"Iterable":["Node"],"ListBase.E":"Node","ImmutableListMixin.E":"Node"},"ImageElement":{"Element":[],"Node":[],"EventTarget":[]},"LIElement":{"Element":[],"Node":[],"EventTarget":[]},"MeterElement":{"Element":[],"Node":[],"EventTarget":[]},"NodeList":{"ListBase":["Node"],"ImmutableListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"Iterable":["Node"],"ListBase.E":"Node","ImmutableListMixin.E":"Node"},"OptionElement":{"Element":[],"Node":[],"EventTarget":[]},"OutputElement":{"Element":[],"Node":[],"EventTarget":[]},"ParamElement":{"Element":[],"Node":[],"EventTarget":[]},"ProgressElement":{"Element":[],"Node":[],"EventTarget":[]},"SelectElement":{"Element":[],"Node":[],"EventTarget":[]},"TableElement":{"Element":[],"Node":[],"EventTarget":[]},"TextAreaElement":{"Element":[],"Node":[],"EventTarget":[]},"TouchList":{"ListBase":["Touch"],"ImmutableListMixin":["Touch"],"List":["Touch"],"JavaScriptIndexingBehavior":["Touch"],"Iterable":["Touch"],"ListBase.E":"Touch","ImmutableListMixin.E":"Touch"},"Window":{"WindowBase":[],"EventTarget":[]},"_DomRect":{"Rectangle":["num"]},"_NamedNodeMap":{"ListBase":["Node"],"ImmutableListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"Iterable":["Node"],"ListBase.E":"Node","ImmutableListMixin.E":"Node"},"_EventStream":{"Stream":["1"]},"_ElementEventStreamImpl":{"_EventStream":["1"],"Stream":["1"]},"_EventStreamSubscription":{"StreamSubscription":["1"]},"_WrappedList":{"ListBase":["1"],"List":["1"],"Iterable":["1"],"ListBase.E":"1"},"_WrappedIterator":{"Iterator":["1"]},"FixedSizeListIterator":{"Iterator":["1"]},"_DOMWindowCrossFrame":{"WindowBase":[],"EventTarget":[]},"_TrustedHtmlTreeSanitizer":{"NodeTreeSanitizer":[]},"Rectangle":{"_RectangleBase":["1"]},"FileSelectionDialog":{"BaseDialog":[]},"InputDialog":{"BaseDialog":[]},"InfoDialog":{"BaseDialog":[]},"IconPanel":{"BaseDialog":[]},"PopupMenu":{"BaseDialog":[]}}'));
  A._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"EfficientLengthIterable":1}'));
  var string$ = {
    Advanc: "Advanced Input Dialog with Radio Buttons, 2D",
    Error_: "Error handler must accept one Object or one Object and a StackTrace as arguments, and return a value of the returned future's type",
    linear: "linear-gradient(to bottom, #EEEEEE, white)"
  };
  var type$ = (function rtii() {
    var findType = A.findType;
    return {
      AsyncError: findType("AsyncError"),
      DivElement: findType("DivElement"),
      Element: findType("Element"),
      Error: findType("Error"),
      Event: findType("Event"),
      Function: findType("Function"),
      Future_dynamic: findType("Future<@>"),
      ImageElement: findType("ImageElement"),
      InputElement: findType("InputElement"),
      Iterable_dynamic: findType("Iterable<@>"),
      JSArray_Function: findType("JSArray<Function>"),
      JSArray_Point_int: findType("JSArray<Point<int>>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_TableRowElement: findType("JSArray<TableRowElement>"),
      JSArray_dynamic: findType("JSArray<@>"),
      JSArray_int: findType("JSArray<int>"),
      JSArray_nullable_ActButton: findType("JSArray<ActButton?>"),
      JSArray_nullable_List_String: findType("JSArray<List<String>?>"),
      JSArray_nullable_String: findType("JSArray<String?>"),
      JSArray_of_void_Function_UIEvent: findType("JSArray<~(UIEvent)>"),
      JSNull: findType("JSNull"),
      JavaScriptFunction: findType("JavaScriptFunction"),
      JavaScriptIndexingBehavior_dynamic: findType("JavaScriptIndexingBehavior<@>"),
      JsLinkedHashMap_of_int_and_List_nullable_String: findType("JsLinkedHashMap<int,List<String?>>"),
      KeyboardEvent: findType("KeyboardEvent"),
      List_Point_int: findType("List<Point<int>>"),
      List_String: findType("List<String>"),
      List_nullable_ActButton: findType("List<ActButton?>"),
      List_nullable_List_String: findType("List<List<String>?>"),
      Map_String_String: findType("Map<String,String>"),
      MouseEvent: findType("MouseEvent"),
      Null: findType("Null"),
      Object: findType("Object"),
      Point_int: findType("Point<int>"),
      Point_num: findType("Point<num>"),
      Record: findType("Record"),
      Rectangle_num: findType("Rectangle<num>"),
      StackTrace: findType("StackTrace"),
      String: findType("String"),
      TableCellElement: findType("TableCellElement"),
      TableRowElement: findType("TableRowElement"),
      TouchEvent: findType("TouchEvent"),
      TrustedGetRuntimeType: findType("TrustedGetRuntimeType"),
      TypeError: findType("TypeError"),
      UIEvent: findType("UIEvent"),
      UnknownJavaScriptObject: findType("UnknownJavaScriptObject"),
      UserInput: findType("UserInput"),
      WindowBase: findType("WindowBase"),
      _AsyncCompleter_UserInput: findType("_AsyncCompleter<UserInput>"),
      _ElementEventStreamImpl_Event: findType("_ElementEventStreamImpl<Event>"),
      _ElementEventStreamImpl_KeyboardEvent: findType("_ElementEventStreamImpl<KeyboardEvent>"),
      _ElementEventStreamImpl_MouseEvent: findType("_ElementEventStreamImpl<MouseEvent>"),
      _ElementEventStreamImpl_TouchEvent: findType("_ElementEventStreamImpl<TouchEvent>"),
      _Future_UserInput: findType("_Future<UserInput>"),
      _Future_dynamic: findType("_Future<@>"),
      _Future_int: findType("_Future<int>"),
      bool: findType("bool"),
      bool_Function_Object: findType("bool(Object)"),
      double: findType("double"),
      dynamic: findType("@"),
      dynamic_Function: findType("@()"),
      dynamic_Function_Object: findType("@(Object)"),
      dynamic_Function_Object_StackTrace: findType("@(Object,StackTrace)"),
      int: findType("int"),
      legacy_Never: findType("0&*"),
      legacy_Object: findType("Object*"),
      nullable_ActButton: findType("ActButton?"),
      nullable_EventTarget: findType("EventTarget?"),
      nullable_Future_Null: findType("Future<Null>?"),
      nullable_InputElement: findType("InputElement?"),
      nullable_List_File: findType("List<File>?"),
      nullable_List_Point_int: findType("List<Point<int>>?"),
      nullable_List_String: findType("List<String>?"),
      nullable_List_int: findType("List<int>?"),
      nullable_List_nullable_List_String: findType("List<List<String>?>?"),
      nullable_List_nullable_String: findType("List<String?>?"),
      nullable_List_nullable_TextInputElement: findType("List<TextInputElement?>?"),
      nullable_Map_of_int_and_nullable_List_nullable_List_String: findType("Map<int,List<List<String>?>?>?"),
      nullable_Map_of_int_and_nullable_List_nullable_String: findType("Map<int,List<String?>?>?"),
      nullable_Object: findType("Object?"),
      nullable_Point_int: findType("Point<int>?"),
      nullable_String: findType("String?"),
      nullable_TableCellElement: findType("TableCellElement?"),
      nullable_TableRowElement: findType("TableRowElement?"),
      nullable__FutureListener_dynamic_dynamic: findType("_FutureListener<@,@>?"),
      nullable_dynamic_Function_Event: findType("@(Event)?"),
      nullable_void_Function: findType("~()?"),
      nullable_void_Function_KeyboardEvent: findType("~(KeyboardEvent)?"),
      num: findType("num"),
      void: findType("~"),
      void_Function: findType("~()")
    };
  })();
  (function constants() {
    B.ButtonElement_methods = A.ButtonElement.prototype;
    B.CssStyleDeclaration_methods = A.CssStyleDeclaration.prototype;
    B.DivElement_methods = A.DivElement.prototype;
    B.InputElement_methods = A.InputElement.prototype;
    B.Interceptor_methods = J.Interceptor.prototype;
    B.JSArray_methods = J.JSArray.prototype;
    B.JSInt_methods = J.JSInt.prototype;
    B.JSNumber_methods = J.JSNumber.prototype;
    B.JSString_methods = J.JSString.prototype;
    B.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
    B.JavaScriptObject_methods = J.JavaScriptObject.prototype;
    B.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
    B.TableCellElement_methods = A.TableCellElement.prototype;
    B.TextAreaElement_methods = A.TextAreaElement.prototype;
    B.TouchList_methods = A.TouchList.prototype;
    B.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
    B.Window_methods = A.Window.prototype;
    B.C_JS_CONST = function getTagFallback(o) {
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
    B.C_JS_CONST0 = function() {
  var toStringFunction = Object.prototype.toString;
  function getTag(o) {
    var s = toStringFunction.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = toStringFunction.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (self.HTMLElement && object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: getTag,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
    B.C_JS_CONST6 = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var ua = navigator.userAgent;
    if (ua.indexOf("DumpRenderTree") >= 0) return hooks;
    if (ua.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
    B.C_JS_CONST1 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
    B.C_JS_CONST2 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
    B.C_JS_CONST5 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
    B.C_JS_CONST4 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
    B.C_JS_CONST3 = function(hooks) { return hooks; }
;
    B.C_SentinelValue = new A.SentinelValue();
    B.C__RootZone = new A._RootZone();
    B.C__StringStackTrace = new A._StringStackTrace();
    B.C__TrustedHtmlTreeSanitizer = new A._TrustedHtmlTreeSanitizer();
    B.Type_Object_xQ6 = A.typeLiteral("Object");
  })();
  (function staticFields() {
    $._JS_INTEROP_INTERCEPTOR_TAG = null;
    $.toStringVisiting = A._setArrayType([], A.findType("JSArray<Object>"));
    $.Primitives__identityHashCodeProperty = null;
    $.BoundClosure__receiverFieldNameCache = null;
    $.BoundClosure__interceptorFieldNameCache = null;
    $.getTagFunction = null;
    $.alternateTagFunction = null;
    $.prototypeForTagFunction = null;
    $.dispatchRecordsForInstanceTags = null;
    $.interceptorsForUncacheableTags = null;
    $.initNativeDispatchFlag = null;
    $._nextCallback = null;
    $._lastCallback = null;
    $._lastPriorityCallback = null;
    $._isInCallbackLoop = false;
    $.Zone__current = B.C__RootZone;
    $.DiaAttr__attr = null;
    $.DiaAttr_DIA_ACT_BUT1 = "DIA_ACT_OK";
    $.DiaAttr_DIA_ACT_BUT2 = "DIA_ACT_CANCEL";
    $.ActButton_but_attr = null;
    $.DialogAttributeChanger_dia_attr_saved = null;
    $.DialogAttributeChanger_but_attr_saved = null;
    $.ExampleData_TABLEDATA_SIMPLE = function() {
      var t1 = type$.JSArray_String;
      return A._setArrayType([A._setArrayType(['Peak table for data set: <span style="color:rgb(52,120,188)">a-ionon-predict-1H-assigned / 1D</span><br>Date and local time: <span style="color:rgb(52,120,188)">2019-02-27 10:33:44.198362</span><br>Picking threshold (w.r.t. file / normalized intensities): <span style="color:rgb(52,120,188)">17894557.73779 / 3.33997</span><br>Intensity Normalization Factor: <span style="color:rgb(52,120,188)">100.0</span><br>Frequency at 0 ppm [Mhz]: <span style="color:rgb(52,120,188)">400</span><br>Software: <span style="color:rgb(52,120,188)">smart_dialogs 1.0. <br>', "", "", "", "", "", "", ""], t1), A._setArrayType(["", "#", "Index", "ppm", "Hz", "\u0394Hz", "Intensity<br>(file)", "Intensity<br>(normalized)"], t1), A._setArrayType(["", "1", "6098.3", "6.90606", "2762.42309", "-", "21148859.40625", "3.91259"], t1), A._setArrayType(["", "2", "6117.6", "6.89307", "2757.22992", "5.19317", "20711549.46875", "3.83169"], t1), A._setArrayType(["", "3", "6157.0", "6.86660", "2746.63858", "10.59134", "24617763.18750", "4.55434"], t1), A._setArrayType(["", "4", "6176.2", "6.85375", "2741.49891", "5.13968", "23990366.50000", "4.43827"], t1), A._setArrayType(["", "5", "7287.6", "6.10751", "2443.00444", "298.49447", "45221782.62500", "8.36614"], t1), A._setArrayType(["", "6", "7346.2", "6.06820", "2427.28028", "15.72416", "42454406.00000", "7.85416"], t1)], A.findType("JSArray<List<String>>"));
    }();
    $.ExampleData_TABLEDATA_INTERACTIVE = function() {
      var _s16_ = "EMPTY_INPUT_CELL",
        t1 = type$.JSArray_String;
      return A._setArrayType([A._setArrayType(['User Preferences <span style="font-weight:normal">', "", "", "", ""], t1), A._setArrayType(["", "Item", "Default Value", "Current Value", "New value"], t1), A._setArrayType(["", '<span style="font-weight:bold">Peak Picking', "", "", 'BUTTON||Reset all values<br><span style="color:red">(Button 1)||B1'], t1), A._setArrayType(["", "Peak label font size", "12", "14", _s16_], t1), A._setArrayType(["", "Peak label color", "DarkRed", "Blue", _s16_], t1), A._setArrayType(["", '<span style="font-weight:bold">Sidebar', "", "", 'BUTTON||Apply New Values<br><span style="color:red">(Button 2)||B2'], t1), A._setArrayType(["", "Sidebar Width", "0.25", "0.25", _s16_], t1), A._setArrayType(["", "Font size", "14", "16", _s16_], t1), A._setArrayType(["", "Cell height", "25px", "25px", _s16_], t1), A._setArrayType(["", '<span style="font-weight:bold">Dialogs', "", "", 'BUTTON||Apply New Values<br><span style="color:red">(Button 3)||B3'], t1), A._setArrayType(["", "Text font size", "16", "16", _s16_], t1), A._setArrayType(["", "Buttons font size", "14", "12", _s16_], t1), A._setArrayType(["", "Dialog header text", "", "", "EMPTY_TEXT_AREA"], t1)], A.findType("JSArray<List<String>>"));
    }();
    $.ExampleDispatcher_itemsChecked = null;
    $.ExampleDispatcher___app_div = A._Cell$named("app_div");
    $.DiaAttr_DIA_ACTIONS = A._setArrayType([$.DiaAttr_DIA_ACT_BUT1, $.DiaAttr_DIA_ACT_BUT2, "DIA_ACT_BUT3"], type$.JSArray_String);
  })();
  (function lazyInitializers() {
    var _lazyFinal = hunkHelpers.lazyFinal,
      _lazy = hunkHelpers.lazy;
    _lazyFinal($, "DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", () => A.getIsolateAffinityTag("_$dart_dartClosure"));
    _lazyFinal($, "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({$method$: null,
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        null.$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        (void 0).$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        null.$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        (void 0).$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "_AsyncRun__scheduleImmediateClosure", "$get$_AsyncRun__scheduleImmediateClosure", () => A._AsyncRun__initializeScheduleImmediate());
    _lazyFinal($, "_hashSeed", "$get$_hashSeed", () => A.objectHashCode(B.Type_Object_xQ6));
    _lazyFinal($, "CssStyleDeclaration__propertyCache", "$get$CssStyleDeclaration__propertyCache", () => ({}));
    _lazyFinal($, "Device_isOpera", "$get$Device_isOpera", () => B.JSString_methods.contains$2(A.Device_userAgent(), "Opera", 0));
    _lazyFinal($, "Device_isIE", "$get$Device_isIE", () => !$.$get$Device_isOpera() && B.JSString_methods.contains$2(A.Device_userAgent(), "Trident/", 0));
    _lazyFinal($, "Device_isFirefox", "$get$Device_isFirefox", () => B.JSString_methods.contains$2(A.Device_userAgent(), "Firefox", 0));
    _lazyFinal($, "Device_cssPrefix", "$get$Device_cssPrefix", () => "-" + $.$get$Device_propertyPrefix() + "-");
    _lazyFinal($, "Device_propertyPrefix", "$get$Device_propertyPrefix", () => {
      if ($.$get$Device_isFirefox())
        var t1 = "moz";
      else if ($.$get$Device_isIE())
        t1 = "ms";
      else
        t1 = $.$get$Device_isOpera() ? "o" : "webkit";
      return t1;
    });
    _lazyFinal($, "DiaAttr_ATTR_DIALOGS_DESKTOP", "$get$DiaAttr_ATTR_DIALOGS_DESKTOP", () => {
      var t1 = type$.String;
      return A.LinkedHashMap_LinkedHashMap$_literal(["DIALOG_TEXT_FONTSIZE", "16", "DIALOG_HELP_TEXT_FONTSIZE", "14", "DIALOG_HEADER_FONTSIZE", "16", "DIALOG_HEADER_TEXTALIGN", "center", "DIALOG_BUTTON_FONTSIZE", "14", "DIALOG_POPUP_FONTSIZE1", "18", "DIALOG_POPUP_FONTSIZE2", "14", "DIALOG_POPUP_TEXT_CELL_PADDING", "6px", "DIALOG_TEXT_COLOR", "#2C3944", "DIALOG_TEXT_COLOR2", "DarkCyan", "DIALOG_INPUT_BG", "WhiteSmoke", "DIALOG_BORDER_COLOR", "rgb(62, 70, 75)", "DIALOG_HEADER_COLOR", "#2C3944", "DIALOG_WIN_OPACITY", "0.95", "DIALOG_CROSS_FONTSIZE", "24", "DIALOG_BACKGROUND", string$.linear, "DIALOG_BOX_SHADOW", "0 6px 10px rgba(0, 0, 0, 0.4)", "DIALOG_BORDER_RADIUS", "8", "OPTIONS_BUTTON_FONTSIZE", "12", "POPUP_BACKGROUND", "#F8F8F8", "POPUP_SELECTION_COLOR", "rgb(139,177,211)", "ICONPANEL_BACKGROUND", "#71A0D0"], t1, t1);
    });
    _lazyFinal($, "DiaAttr_ATTR_DIALOGS_TABLET", "$get$DiaAttr_ATTR_DIALOGS_TABLET", () => {
      var t1 = type$.String;
      return A.LinkedHashMap_LinkedHashMap$_literal(["DIALOG_TEXT_FONTSIZE", "18", "DIALOG_HELP_TEXT_FONTSIZE", "16", "DIALOG_HEADER_FONTSIZE", "20", "DIALOG_HEADER_TEXTALIGN", "center", "DIALOG_BUTTON_FONTSIZE", "18", "DIALOG_POPUP_FONTSIZE1", "20", "DIALOG_POPUP_FONTSIZE2", "18", "DIALOG_POPUP_TEXT_CELL_PADDING", "10px", "DIALOG_TEXT_COLOR", "#2C3944", "DIALOG_TEXT_COLOR2", "DarkCyan", "DIALOG_INPUT_BG", "WhiteSmoke", "DIALOG_BORDER_COLOR", "rgba(0,0,0,0.8)", "DIALOG_TOPBAR_COLOR", "WhiteSmoke", "DIALOG_HEADER_COLOR", "#2C3944", "DIALOG_WIN_OPACITY", "0.95", "DIALOG_CROSS_FONTSIZE", "28", "DIALOG_BACKGROUND", string$.linear, "DIALOG_BOX_SHADOW", "0 6px 10px rgba(0, 0, 0, 0.4)", "DIALOG_BORDER_RADIUS", "8", "OPTIONS_BUTTON_FONTSIZE", "16", "POPUP_BACKGROUND", "#F8F8F8", "POPUP_SELECTION_COLOR", "rgb(139,177,211)", "ICONPANEL_BACKGROUND", "#71A0D0"], t1, t1);
    });
    _lazyFinal($, "DiaAttr_ATTR_DIALOGS_PHONE", "$get$DiaAttr_ATTR_DIALOGS_PHONE", () => {
      var t1 = type$.String;
      return A.LinkedHashMap_LinkedHashMap$_literal(["DIALOG_TEXT_FONTSIZE", "12", "DIALOG_HELP_TEXT_FONTSIZE", "14", "DIALOG_HEADER_FONTSIZE", "12", "DIALOG_HEADER_TEXTALIGN", "center", "DIALOG_BUTTON_FONTSIZE", "10", "DIALOG_POPUP_FONTSIZE1", "14", "DIALOG_POPUP_FONTSIZE2", "12", "DIALOG_POPUP_TEXT_CELL_PADDING", "4px", "DIALOG_TEXT_COLOR", "#2C3944", "DIALOG_TEXT_COLOR2", "DarkCyan", "DIALOG_INPUT_BG", "WhiteSmoke", "DIALOG_BORDER_COLOR", "rgba(0,0,0,0.8)", "DIALOG_TOPBAR_COLOR", "WhiteSmoke", "DIALOG_HEADER_COLOR", "#2C3944", "DIALOG_WIN_OPACITY", "0.95", "DIALOG_CROSS_FONTSIZE", "16", "DIALOG_BACKGROUND", string$.linear, "DIALOG_BOX_SHADOW", "0 6px 10px rgba(0, 0, 0, 0.4)", "DIALOG_BORDER_RADIUS", "8", "OPTIONS_BUTTON_FONTSIZE", "12", "POPUP_BACKGROUND", "#F8F8F8", "POPUP_SELECTION_COLOR", "rgb(139,177,211)", "ICONPANEL_BACKGROUND", "#71A0D0"], t1, t1);
    });
    _lazyFinal($, "ActButton_ATTR_BUTTONS", "$get$ActButton_ATTR_BUTTONS", () => {
      var t1 = type$.String;
      return A.LinkedHashMap_LinkedHashMap$_literal(["BUT_BACKGROUND", "#71A0D0", "BUT_BORDER", "none", "BUT_BORDER_BOTTOM", "1px solid rgb(52,120,188)", "BUT_BORDER_RADIUS", "3px", "BUT_COLOR", "white", "BUT_CURSOR_AUTO", "auto", "BUT_CURSOR_POINTER", "pointer", "BUT_DISPLAY", "inline-block", "BUT_FONT_SIZE", "0.9rem", "BUT_FONT_SMOOTHING", "antialiased", "BUT_FONT_WEIGHT", "bold", "BUT_MARGIN", "0 0.25rem", "BUT_OPACITY_LEAVE", "0.8", "BUT_OPACITY_OVER", "1.0", "BUT_PADDING", "0.4rem 0.8em", "BUT_TEXT_ALIGN", "center"], t1, t1);
    });
    _lazy($, "TableAttr_attr", "$get$TableAttr_attr", () => {
      var t1 = type$.String;
      return A.LinkedHashMap_LinkedHashMap$from($.$get$TableAttr_ATTR_DEFAULTS(), t1, t1);
    });
    _lazyFinal($, "TableAttr_ATTR_DEFAULTS", "$get$TableAttr_ATTR_DEFAULTS", () => {
      var t1 = type$.String;
      return A.LinkedHashMap_LinkedHashMap$_literal(["TABLE_BACKGROUND_COLOR", "#FFF", "TABLE_TEXT_COLOR", "#024457", "TABLE_HEADER_FONTSIZE", "16", "TABLE_BUTTON_FONTSIZE", "14", "TABLE_OUTER_BORDER", "rgb(52,120,188) 1px solid", "TABLE_BORDER_RADIUS", "0px", "TABLE_HIGHLIGHT_COLOR", "rgb(230,236,238)", "TABLE_HEADER_BACKGROUND_COLOR", "rgb(52,120,188)", "TABLE_HEADER_TEXT_COLOR", "#FFF", "TABLE_HEADER_TEXT_ALIGN", "left", "TABLE_INNER_CELL_LEFT_BORDER_COLOR", "white", "TABLE_BSPAN_COLOR", '<span style="color:rgb(52,120,188)">', "TABLE_BSPAN_UNDERSCORE", '<span style="text-decoration: underline">'], t1, t1);
    });
  })();
  (function nativeSupport() {
    !function() {
      var intern = function(s) {
        var o = {};
        o[s] = 1;
        return Object.keys(hunkHelpers.convertToFastObject(o))[0];
      };
      init.getIsolateTag = function(name) {
        return intern("___dart_" + name + init.isolateTag);
      };
      var tableProperty = "___dart_isolate_tags_";
      var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
      var rootProperty = "_ZxYxX";
      for (var i = 0;; i++) {
        var property = intern(rootProperty + "_" + i + "_");
        if (!(property in usedProperties)) {
          usedProperties[property] = 1;
          init.isolateTag = property;
          break;
        }
      }
      init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
    }();
    hunkHelpers.setOrUpdateInterceptorsByTag({DOMError: J.JavaScriptObject, DOMImplementation: J.JavaScriptObject, MediaError: J.JavaScriptObject, Navigator: J.JavaScriptObject, NavigatorConcurrentHardware: J.JavaScriptObject, NavigatorUserMediaError: J.JavaScriptObject, OverconstrainedError: J.JavaScriptObject, PositionError: J.JavaScriptObject, GeolocationPositionError: J.JavaScriptObject, Range: J.JavaScriptObject, HTMLAudioElement: A.HtmlElement, HTMLBRElement: A.HtmlElement, HTMLBaseElement: A.HtmlElement, HTMLBodyElement: A.HtmlElement, HTMLCanvasElement: A.HtmlElement, HTMLContentElement: A.HtmlElement, HTMLDListElement: A.HtmlElement, HTMLDataListElement: A.HtmlElement, HTMLDetailsElement: A.HtmlElement, HTMLDialogElement: A.HtmlElement, HTMLEmbedElement: A.HtmlElement, HTMLFieldSetElement: A.HtmlElement, HTMLHRElement: A.HtmlElement, HTMLHeadElement: A.HtmlElement, HTMLHeadingElement: A.HtmlElement, HTMLHtmlElement: A.HtmlElement, HTMLIFrameElement: A.HtmlElement, HTMLLabelElement: A.HtmlElement, HTMLLegendElement: A.HtmlElement, HTMLLinkElement: A.HtmlElement, HTMLMapElement: A.HtmlElement, HTMLMediaElement: A.HtmlElement, HTMLMenuElement: A.HtmlElement, HTMLMetaElement: A.HtmlElement, HTMLModElement: A.HtmlElement, HTMLOListElement: A.HtmlElement, HTMLObjectElement: A.HtmlElement, HTMLOptGroupElement: A.HtmlElement, HTMLParagraphElement: A.HtmlElement, HTMLPictureElement: A.HtmlElement, HTMLPreElement: A.HtmlElement, HTMLQuoteElement: A.HtmlElement, HTMLScriptElement: A.HtmlElement, HTMLShadowElement: A.HtmlElement, HTMLSlotElement: A.HtmlElement, HTMLSourceElement: A.HtmlElement, HTMLSpanElement: A.HtmlElement, HTMLStyleElement: A.HtmlElement, HTMLTableCaptionElement: A.HtmlElement, HTMLTableColElement: A.HtmlElement, HTMLTableSectionElement: A.HtmlElement, HTMLTemplateElement: A.HtmlElement, HTMLTimeElement: A.HtmlElement, HTMLTitleElement: A.HtmlElement, HTMLTrackElement: A.HtmlElement, HTMLUListElement: A.HtmlElement, HTMLUnknownElement: A.HtmlElement, HTMLVideoElement: A.HtmlElement, HTMLDirectoryElement: A.HtmlElement, HTMLFontElement: A.HtmlElement, HTMLFrameElement: A.HtmlElement, HTMLFrameSetElement: A.HtmlElement, HTMLMarqueeElement: A.HtmlElement, HTMLElement: A.HtmlElement, HTMLAnchorElement: A.AnchorElement, HTMLAreaElement: A.AreaElement, Blob: A.Blob, HTMLButtonElement: A.ButtonElement, CDATASection: A.CharacterData, CharacterData: A.CharacterData, Comment: A.CharacterData, ProcessingInstruction: A.CharacterData, Text: A.CharacterData, CSSStyleDeclaration: A.CssStyleDeclaration, MSStyleCSSProperties: A.CssStyleDeclaration, CSS2Properties: A.CssStyleDeclaration, HTMLDataElement: A.DataElement, HTMLDivElement: A.DivElement, DOMException: A.DomException, DOMRectReadOnly: A.DomRectReadOnly, MathMLElement: A.Element, SVGAElement: A.Element, SVGAnimateElement: A.Element, SVGAnimateMotionElement: A.Element, SVGAnimateTransformElement: A.Element, SVGAnimationElement: A.Element, SVGCircleElement: A.Element, SVGClipPathElement: A.Element, SVGDefsElement: A.Element, SVGDescElement: A.Element, SVGDiscardElement: A.Element, SVGEllipseElement: A.Element, SVGFEBlendElement: A.Element, SVGFEColorMatrixElement: A.Element, SVGFEComponentTransferElement: A.Element, SVGFECompositeElement: A.Element, SVGFEConvolveMatrixElement: A.Element, SVGFEDiffuseLightingElement: A.Element, SVGFEDisplacementMapElement: A.Element, SVGFEDistantLightElement: A.Element, SVGFEFloodElement: A.Element, SVGFEFuncAElement: A.Element, SVGFEFuncBElement: A.Element, SVGFEFuncGElement: A.Element, SVGFEFuncRElement: A.Element, SVGFEGaussianBlurElement: A.Element, SVGFEImageElement: A.Element, SVGFEMergeElement: A.Element, SVGFEMergeNodeElement: A.Element, SVGFEMorphologyElement: A.Element, SVGFEOffsetElement: A.Element, SVGFEPointLightElement: A.Element, SVGFESpecularLightingElement: A.Element, SVGFESpotLightElement: A.Element, SVGFETileElement: A.Element, SVGFETurbulenceElement: A.Element, SVGFilterElement: A.Element, SVGForeignObjectElement: A.Element, SVGGElement: A.Element, SVGGeometryElement: A.Element, SVGGraphicsElement: A.Element, SVGImageElement: A.Element, SVGLineElement: A.Element, SVGLinearGradientElement: A.Element, SVGMarkerElement: A.Element, SVGMaskElement: A.Element, SVGMetadataElement: A.Element, SVGPathElement: A.Element, SVGPatternElement: A.Element, SVGPolygonElement: A.Element, SVGPolylineElement: A.Element, SVGRadialGradientElement: A.Element, SVGRectElement: A.Element, SVGScriptElement: A.Element, SVGSetElement: A.Element, SVGStopElement: A.Element, SVGStyleElement: A.Element, SVGElement: A.Element, SVGSVGElement: A.Element, SVGSwitchElement: A.Element, SVGSymbolElement: A.Element, SVGTSpanElement: A.Element, SVGTextContentElement: A.Element, SVGTextElement: A.Element, SVGTextPathElement: A.Element, SVGTextPositioningElement: A.Element, SVGTitleElement: A.Element, SVGUseElement: A.Element, SVGViewElement: A.Element, SVGGradientElement: A.Element, SVGComponentTransferFunctionElement: A.Element, SVGFEDropShadowElement: A.Element, SVGMPathElement: A.Element, Element: A.Element, AbortPaymentEvent: A.Event, AnimationEvent: A.Event, AnimationPlaybackEvent: A.Event, ApplicationCacheErrorEvent: A.Event, BackgroundFetchClickEvent: A.Event, BackgroundFetchEvent: A.Event, BackgroundFetchFailEvent: A.Event, BackgroundFetchedEvent: A.Event, BeforeInstallPromptEvent: A.Event, BeforeUnloadEvent: A.Event, BlobEvent: A.Event, CanMakePaymentEvent: A.Event, ClipboardEvent: A.Event, CloseEvent: A.Event, CustomEvent: A.Event, DeviceMotionEvent: A.Event, DeviceOrientationEvent: A.Event, ErrorEvent: A.Event, ExtendableEvent: A.Event, ExtendableMessageEvent: A.Event, FetchEvent: A.Event, FontFaceSetLoadEvent: A.Event, ForeignFetchEvent: A.Event, GamepadEvent: A.Event, HashChangeEvent: A.Event, InstallEvent: A.Event, MediaEncryptedEvent: A.Event, MediaKeyMessageEvent: A.Event, MediaQueryListEvent: A.Event, MediaStreamEvent: A.Event, MediaStreamTrackEvent: A.Event, MessageEvent: A.Event, MIDIConnectionEvent: A.Event, MIDIMessageEvent: A.Event, MutationEvent: A.Event, NotificationEvent: A.Event, PageTransitionEvent: A.Event, PaymentRequestEvent: A.Event, PaymentRequestUpdateEvent: A.Event, PopStateEvent: A.Event, PresentationConnectionAvailableEvent: A.Event, PresentationConnectionCloseEvent: A.Event, ProgressEvent: A.Event, PromiseRejectionEvent: A.Event, PushEvent: A.Event, RTCDataChannelEvent: A.Event, RTCDTMFToneChangeEvent: A.Event, RTCPeerConnectionIceEvent: A.Event, RTCTrackEvent: A.Event, SecurityPolicyViolationEvent: A.Event, SensorErrorEvent: A.Event, SpeechRecognitionError: A.Event, SpeechRecognitionEvent: A.Event, SpeechSynthesisEvent: A.Event, StorageEvent: A.Event, SyncEvent: A.Event, TrackEvent: A.Event, TransitionEvent: A.Event, WebKitTransitionEvent: A.Event, VRDeviceEvent: A.Event, VRDisplayEvent: A.Event, VRSessionEvent: A.Event, MojoInterfaceRequestEvent: A.Event, ResourceProgressEvent: A.Event, USBConnectionEvent: A.Event, IDBVersionChangeEvent: A.Event, AudioProcessingEvent: A.Event, OfflineAudioCompletionEvent: A.Event, WebGLContextEvent: A.Event, Event: A.Event, InputEvent: A.Event, SubmitEvent: A.Event, EventTarget: A.EventTarget, File: A.File, FileList: A.FileList, HTMLFormElement: A.FormElement, HTMLCollection: A.HtmlCollection, HTMLFormControlsCollection: A.HtmlCollection, HTMLOptionsCollection: A.HtmlCollection, HTMLImageElement: A.ImageElement, HTMLInputElement: A.InputElement, KeyboardEvent: A.KeyboardEvent, HTMLLIElement: A.LIElement, Location: A.Location, HTMLMeterElement: A.MeterElement, MouseEvent: A.MouseEvent, DragEvent: A.MouseEvent, PointerEvent: A.MouseEvent, WheelEvent: A.MouseEvent, Document: A.Node, DocumentFragment: A.Node, HTMLDocument: A.Node, ShadowRoot: A.Node, XMLDocument: A.Node, Attr: A.Node, DocumentType: A.Node, Node: A.Node, NodeList: A.NodeList, RadioNodeList: A.NodeList, HTMLOptionElement: A.OptionElement, HTMLOutputElement: A.OutputElement, HTMLParamElement: A.ParamElement, HTMLProgressElement: A.ProgressElement, HTMLSelectElement: A.SelectElement, HTMLTableCellElement: A.TableCellElement, HTMLTableDataCellElement: A.TableCellElement, HTMLTableHeaderCellElement: A.TableCellElement, HTMLTableElement: A.TableElement, HTMLTableRowElement: A.TableRowElement, HTMLTextAreaElement: A.TextAreaElement, Touch: A.Touch, TouchEvent: A.TouchEvent, TouchList: A.TouchList, CompositionEvent: A.UIEvent, FocusEvent: A.UIEvent, TextEvent: A.UIEvent, UIEvent: A.UIEvent, Window: A.Window, DOMWindow: A.Window, ClientRect: A._DomRect, DOMRect: A._DomRect, NamedNodeMap: A._NamedNodeMap, MozNamedAttrMap: A._NamedNodeMap});
    hunkHelpers.setOrUpdateLeafTags({DOMError: true, DOMImplementation: true, MediaError: true, Navigator: true, NavigatorConcurrentHardware: true, NavigatorUserMediaError: true, OverconstrainedError: true, PositionError: true, GeolocationPositionError: true, Range: true, HTMLAudioElement: true, HTMLBRElement: true, HTMLBaseElement: true, HTMLBodyElement: true, HTMLCanvasElement: true, HTMLContentElement: true, HTMLDListElement: true, HTMLDataListElement: true, HTMLDetailsElement: true, HTMLDialogElement: true, HTMLEmbedElement: true, HTMLFieldSetElement: true, HTMLHRElement: true, HTMLHeadElement: true, HTMLHeadingElement: true, HTMLHtmlElement: true, HTMLIFrameElement: true, HTMLLabelElement: true, HTMLLegendElement: true, HTMLLinkElement: true, HTMLMapElement: true, HTMLMediaElement: true, HTMLMenuElement: true, HTMLMetaElement: true, HTMLModElement: true, HTMLOListElement: true, HTMLObjectElement: true, HTMLOptGroupElement: true, HTMLParagraphElement: true, HTMLPictureElement: true, HTMLPreElement: true, HTMLQuoteElement: true, HTMLScriptElement: true, HTMLShadowElement: true, HTMLSlotElement: true, HTMLSourceElement: true, HTMLSpanElement: true, HTMLStyleElement: true, HTMLTableCaptionElement: true, HTMLTableColElement: true, HTMLTableSectionElement: true, HTMLTemplateElement: true, HTMLTimeElement: true, HTMLTitleElement: true, HTMLTrackElement: true, HTMLUListElement: true, HTMLUnknownElement: true, HTMLVideoElement: true, HTMLDirectoryElement: true, HTMLFontElement: true, HTMLFrameElement: true, HTMLFrameSetElement: true, HTMLMarqueeElement: true, HTMLElement: false, HTMLAnchorElement: true, HTMLAreaElement: true, Blob: false, HTMLButtonElement: true, CDATASection: true, CharacterData: true, Comment: true, ProcessingInstruction: true, Text: true, CSSStyleDeclaration: true, MSStyleCSSProperties: true, CSS2Properties: true, HTMLDataElement: true, HTMLDivElement: true, DOMException: true, DOMRectReadOnly: false, MathMLElement: true, SVGAElement: true, SVGAnimateElement: true, SVGAnimateMotionElement: true, SVGAnimateTransformElement: true, SVGAnimationElement: true, SVGCircleElement: true, SVGClipPathElement: true, SVGDefsElement: true, SVGDescElement: true, SVGDiscardElement: true, SVGEllipseElement: true, SVGFEBlendElement: true, SVGFEColorMatrixElement: true, SVGFEComponentTransferElement: true, SVGFECompositeElement: true, SVGFEConvolveMatrixElement: true, SVGFEDiffuseLightingElement: true, SVGFEDisplacementMapElement: true, SVGFEDistantLightElement: true, SVGFEFloodElement: true, SVGFEFuncAElement: true, SVGFEFuncBElement: true, SVGFEFuncGElement: true, SVGFEFuncRElement: true, SVGFEGaussianBlurElement: true, SVGFEImageElement: true, SVGFEMergeElement: true, SVGFEMergeNodeElement: true, SVGFEMorphologyElement: true, SVGFEOffsetElement: true, SVGFEPointLightElement: true, SVGFESpecularLightingElement: true, SVGFESpotLightElement: true, SVGFETileElement: true, SVGFETurbulenceElement: true, SVGFilterElement: true, SVGForeignObjectElement: true, SVGGElement: true, SVGGeometryElement: true, SVGGraphicsElement: true, SVGImageElement: true, SVGLineElement: true, SVGLinearGradientElement: true, SVGMarkerElement: true, SVGMaskElement: true, SVGMetadataElement: true, SVGPathElement: true, SVGPatternElement: true, SVGPolygonElement: true, SVGPolylineElement: true, SVGRadialGradientElement: true, SVGRectElement: true, SVGScriptElement: true, SVGSetElement: true, SVGStopElement: true, SVGStyleElement: true, SVGElement: true, SVGSVGElement: true, SVGSwitchElement: true, SVGSymbolElement: true, SVGTSpanElement: true, SVGTextContentElement: true, SVGTextElement: true, SVGTextPathElement: true, SVGTextPositioningElement: true, SVGTitleElement: true, SVGUseElement: true, SVGViewElement: true, SVGGradientElement: true, SVGComponentTransferFunctionElement: true, SVGFEDropShadowElement: true, SVGMPathElement: true, Element: false, AbortPaymentEvent: true, AnimationEvent: true, AnimationPlaybackEvent: true, ApplicationCacheErrorEvent: true, BackgroundFetchClickEvent: true, BackgroundFetchEvent: true, BackgroundFetchFailEvent: true, BackgroundFetchedEvent: true, BeforeInstallPromptEvent: true, BeforeUnloadEvent: true, BlobEvent: true, CanMakePaymentEvent: true, ClipboardEvent: true, CloseEvent: true, CustomEvent: true, DeviceMotionEvent: true, DeviceOrientationEvent: true, ErrorEvent: true, ExtendableEvent: true, ExtendableMessageEvent: true, FetchEvent: true, FontFaceSetLoadEvent: true, ForeignFetchEvent: true, GamepadEvent: true, HashChangeEvent: true, InstallEvent: true, MediaEncryptedEvent: true, MediaKeyMessageEvent: true, MediaQueryListEvent: true, MediaStreamEvent: true, MediaStreamTrackEvent: true, MessageEvent: true, MIDIConnectionEvent: true, MIDIMessageEvent: true, MutationEvent: true, NotificationEvent: true, PageTransitionEvent: true, PaymentRequestEvent: true, PaymentRequestUpdateEvent: true, PopStateEvent: true, PresentationConnectionAvailableEvent: true, PresentationConnectionCloseEvent: true, ProgressEvent: true, PromiseRejectionEvent: true, PushEvent: true, RTCDataChannelEvent: true, RTCDTMFToneChangeEvent: true, RTCPeerConnectionIceEvent: true, RTCTrackEvent: true, SecurityPolicyViolationEvent: true, SensorErrorEvent: true, SpeechRecognitionError: true, SpeechRecognitionEvent: true, SpeechSynthesisEvent: true, StorageEvent: true, SyncEvent: true, TrackEvent: true, TransitionEvent: true, WebKitTransitionEvent: true, VRDeviceEvent: true, VRDisplayEvent: true, VRSessionEvent: true, MojoInterfaceRequestEvent: true, ResourceProgressEvent: true, USBConnectionEvent: true, IDBVersionChangeEvent: true, AudioProcessingEvent: true, OfflineAudioCompletionEvent: true, WebGLContextEvent: true, Event: false, InputEvent: false, SubmitEvent: false, EventTarget: false, File: true, FileList: true, HTMLFormElement: true, HTMLCollection: true, HTMLFormControlsCollection: true, HTMLOptionsCollection: true, HTMLImageElement: true, HTMLInputElement: true, KeyboardEvent: true, HTMLLIElement: true, Location: true, HTMLMeterElement: true, MouseEvent: true, DragEvent: true, PointerEvent: true, WheelEvent: true, Document: true, DocumentFragment: true, HTMLDocument: true, ShadowRoot: true, XMLDocument: true, Attr: true, DocumentType: true, Node: false, NodeList: true, RadioNodeList: true, HTMLOptionElement: true, HTMLOutputElement: true, HTMLParamElement: true, HTMLProgressElement: true, HTMLSelectElement: true, HTMLTableCellElement: true, HTMLTableDataCellElement: true, HTMLTableHeaderCellElement: true, HTMLTableElement: true, HTMLTableRowElement: true, HTMLTextAreaElement: true, Touch: true, TouchEvent: true, TouchList: true, CompositionEvent: true, FocusEvent: true, TextEvent: true, UIEvent: false, Window: true, DOMWindow: true, ClientRect: true, DOMRect: true, NamedNodeMap: true, MozNamedAttrMap: true});
  })();
  convertAllToFastObject(holders);
  convertToFastObject($);
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (typeof document.currentScript != "undefined") {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i)
        scripts[i].removeEventListener("load", onLoad, false);
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i)
      scripts[i].addEventListener("load", onLoad, false);
  })(function(currentScript) {
    init.currentScript = currentScript;
    var callMain = A.main;
    if (typeof dartMainRunner === "function")
      dartMainRunner(callMain, []);
    else
      callMain([]);
  });
})();

//# sourceMappingURL=main.dart.js.map
